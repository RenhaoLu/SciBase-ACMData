P. N. Benton. Strictness Analysis of Lazy Functional Programs. PhD thesis, Computer Laboratory, University of Cambridge, Cambridge, England, 1995.
Anders Bondorf, Improving binding times without explicit CPS-conversion, Proceedings of the 1992 ACM conference on LISP and functional programming, p.1-10, June 22-24, 1992, San Francisco, California, USA[doi>10.1145/141471.141483]
Charles Consel , Olivier Danvy, For a better support of static data flow, Proceedings of the 5th ACM conference on Functional programming languages and computer architecture, p.496-519, June 1991, Cambridge, Massachusetts, USA
Olivier Danvy and Dirk Dussart. CPS transformation after binding-time analysis. Unpublished note, Department of Computer Science, University of Aarhus, April 1995.
Dirk Dussart , John Hughes , Peter Thiemann, Type specialisation for imperative languages, Proceedings of the second ACM SIGPLAN international conference on Functional programming, p.204-216, June 09-11, 1997, Amsterdam, The Netherlands[doi>10.1145/258948.258968]
Joseph H. Fasel, Paul Hudak, Simon Peyton-Jones, and Philip Wadler (editors). Haskell special issue. SIGPLAN Notices, 27(5), May 1992.
Andrew D. Gordon, Functional programming and input/output, Cambridge University Press, New York, NY, 1994
John Hatcliff , Olivier Danvy, A generic account of continuation-passing styles, Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.458-471, January 16-19, 1994, Portland, Oregon, USA[doi>10.1145/174675.178053]
John Hatcliff , Olivier Danvy, A computational formalization for partial evaluation, Mathematical Structures in Computer Science, v.7 n.5, p.507-541, October 1997[doi>10.1017/S0960129597002405]
John Hughes, Type Specialisation for the lambda-Calculus; or, A New Paradigm for Partial Evaluation Based on Type Inference, Selected Papers from the Internaltional Seminar on Partial Evaluation, p.183-215, February 12-16, 1996
Julia L. Lawall , Olivier Danvy, Continuation-based partial evaluation, Proceedings of the 1994 ACM conference on LISP and functional programming, p.227-238, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.182483]
Julia L. Lawall , Peter Thiemann, Sound Specialization in the Presence of Computational Effects, Proceedings of the Third International Symposium on Theoretical Aspects of Computer Software, p.165-190, September 23-26, 1997
Robin Milner , Mads Tofte , Robert Harper, The definition of Standard ML, MIT Press, Cambridge, MA, 1990
Eugenio Moggi, Notions of computation and monads, Information and Computation, v.93 n.1, p.55-92, July 1991[doi>10.1016/0890-5401(91)90052-4]
S. Peyton Jones, J. Launchbury, M. Shields, and A. Tolmach. The design of a typed intermediate language. In Proceedings of the Twenty-fifth Annual A CM Symposium on Principles of Programming Languages, January 1988. (to appear).
Gordon D. Plotkin. Call-by-name, call-by-value and the A-calculus. Theoretical Computer Science, 1:125-159, 1975.
Peter Thiemann, A Generic Framework for Specialization (Abridged Version), Proceedings of the 7th European Symposium on Programming: Programming Languages and Systems, p.267-281, March 28-April 04, 1998
Philip Wadler, The essence of functional programming, Proceedings of the 19th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.1-14, January 19-22, 1992, Albuquerque, New Mexico, USA[doi>10.1145/143165.143169]
