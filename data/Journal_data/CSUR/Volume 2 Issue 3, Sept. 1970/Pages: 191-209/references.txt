EVANS, G., WALLACE, G. F., AND SUTHERLAND, G. L. Simutatwn Using Dgital Computers. Prentice-Hall, Englewood Cliffs, N. J., 1967.
GORDON, G. System Simulation. Prentice-Hall, Englewood Cliffs, N. J., 1969. The simulation of both discrete and continuous systems is discussed. The first two chapters deal with the nature and concepts oI systems modeling and simulation, and are followed by three chapters oil continuous systems simulation~ A chapter introducing discrete system simulation describes a telephone system model; subsequent chapters introduce simulation with FORTBAN, GPSS (the author is the originator of GPSS), and SIMSCRIPT, and show the application of these languages to this model. Other chapters discuss the generation of random variables and the verification of simulation results.
MARTIn. F. F. Computer Modeling and Simulation. Wiley, New York, 1968.
MxzE, J. H., Am) Cox, J. G. Essentials of Simulation. Prentice-Hall, Englewood Cliffs, N. J., 1968.
NAYLOR, T. H,, BALINTY, J. L. BUtlDICK, D. S., Am) CHU, K. Computer Simulation Techniques. Wiley, New York, 1966. Recommended as one of the best available texts on simulation. The two introductory chapters are followed by chapters on random number general, ion and generation of samples from continuous and discrete probability distributions. The next, two chapters present queueing, inventory-, economic, and industrial models. Chapter 7 discusses discrete simulation languages and incorporates wall-written articles from the IBM Systems Journal on GPSS II and SIMSCRIPT, as well as a discussion of GASP, DYNAMO, and others. The next chapter touches on the problem of verification, and the final chapter is a good survey of some of the problems of experimental design. Each chapter is accompanied by references.
Bibliography 19. Simulation and gaming. Comput. Rev. 10, 1 (Jan. 1969), 61-69. This is a bibliography of 440 en tries on simulation and gaming. It is not annotated but, perhaps even better, the Computing Reviews review number is cited.
TOCHER, K. D. The Art of Simulation. Van Nostrand, Princeton, N. J., 1963. This book, the first published on simulation. has several chapters dealing with the generation of random variables. Three chapters present simulation models of queueing and industrial systems. These models are presented in flowchart form and fully discussed in the text.
Bibliography on simulation. Rep. No. 320- 0924-0, IBM Corp., White Plains, N. Y., 1966. This is an extensive bibliography on simulation in many fields: economics, industry, management games, etc. It is indexed by title, author, and subject.
CHENG, P. S. Trace-driven system modeling. IBM Syst. I. 8, 4 (1969), 280-289. A trace-driven approach to computer system modeling is described. The workload of interest is first executed on a real system, and trace dat~ obtained by monitoring significant events in the course of this execution. The resultant data is then used as input to the desired simulation model, which may reflect changes in the configuration or operating system of the real system.
FINE, G. H., AND McISAAC, P.V. Simulation of a time-sharing systern. Manag. Sci. 12, 6 ( Feb. 1966 ), 180-194. This paper discusses (in little detail) the simulation of the SDC timesharing system. Simulation results for various scheduling algorithms are presented. The most interesting part of the paper is the description of the use of the direct search technique in simulation optimization.
Fox, D., AND KESSLER, J. L. Experimems in software modeling. Prec. AFIPS 1967 Fall Joint, Comput. Conf., Vol. 31, pp. 42.9--436 (Thompson Book Co., Washington, D. C.). Requirements and design criteria for modeling a total hardware/software system configuration are discussed, past work is briefly reviewed, and a mechanism for simulating such systems is described. This mechanism permits designers of system software such as compilers to simulate the functional execution of programs at the design stage.
GLINKA, L. R., BRUSH, R. M., AND UNGAR, A. J. Design, thru simulation, of a multiple-access information system. Prec. AFIPS 1967 Fall Joint Comput. Conf., Vol. 31, pp. 437-447 (Thompson Book Co., Washington, D. C.). The modeling and simulation of a simple information retrieval system are discussed. Performance measures are defined, and datn base, job types, and program characteristics described. A number of simulation results are presented. No description of the simulator is given.
HERTEL, H. F., AND STANLIEY, W. I. Statistics gathering and simulation for the Apollo realtime operating system. IBM Sysl. J. 7, 2 (1968), 85-102. The Real Time Computer Complex (RTCC) is presented, followed by a description of the measures of interest and the techniques employed for gathering statistics. Mean execution times for a number of OS/360 system functions are tabulated, and a brief description of the modeling of the RTCC is given.
HUESMAN, L. R., AND GOLDBERG, R. P. Evaluating computer systems through simulation. Comput. J. I0, 2 (Aug. 1967), 150-156. This is a survey article on work done in the simulation of multiprogramming, multiprocessing, and time-sharing systems; it has 46 references,
George K. Hutchinson, A computer center simulation project, Communications of the ACM, v.8 n.9, p.559-568, Sept. 1965[doi>10.1145/365559.365615]
__ AND MAGUIRE, J. N. Computer systems design and analysis through simulation. Prec. AFIPS 1965 Fall Joint Comput. Conf., Vol. 27, pp. 161--t67 (Spartan Books, Washington, D.C.). The simulation of a UNIVAC 1107 system is described in this paper. The purpose of this simulation was to determine the effectiveness of various :peripheral devices and buffering techniques. The paper discusses model validation and system measurements, and describes how the results of the simulation were used to plan for a new system.
____ Some problems in the simulation of multiprocessor computer systems. In Buxton, J. N., ed., Simulation Programming Languages, North-Holland, Amsterdam, 1968, pp. 305-318. Similarities and differences between job shop and multiprocessing systems are discussed in the paper's introduction, Next, problems of event time differentiation and simultaneous event occurrence are described. In the last section of the paper, a description of the Program Description Language (PDL) is given. PDL was designed to permit the programs of a multiprocessor system to be described in a manner suitable for simulation.
KATZ. J. H. Simulation of a multiprocessor computer system. Prec. AFIPS 1966 Spring Joint Comput. Conf., Vol. 28. pp. t27-139 (Spartan Books, Washington, D. C.). This paper describes the simulation of the IBM 7040-7090 direct-coupled system. The parameters produced by the job generator, the system parameters, and the simulator output are described. A tabulation of the various slates of the system is preseni, ed and discussed. The simulator was written in SlM- SCRIPT, and the paper contains a brief review of SIMSCRIPT concepts as they relate to the simulator structure.
Jesse H. Katz, An experimental model of system/360, Communications of the ACM, v.10 n.11, p.694-702, Nov. 1967[doi>10.1145/363790.363808]
LEHMAN, M. M., AND, ROSENFELD, J. L. Performance of a simulated multiprogramming system. Prec. AFIPS 1968 Fall joint Comput. Conf. Vol. 33, pp. 1431-1442 (Thompson Book Co., Washington, D. C.). Simulation results from experiments with simulation model of the multiprogramming variant, (MVT) of 0S/36(1 (on a 360/65 system) are presented. No description of the simulator is given.
MACDOUGALL, M. H. Simulation of an ECS- based operaging system. Prec. AFIPS 1967 Spring Joint Comput. Conf., Vol. 30, pp. 735- 741 (Thompson Book Co., Washington, D. C.). This paper describes the simulation of a CDC 6000 system with Extended Core Storage. The simulator is described in some detail and some simulation results are presented.
MERIKALLIO, R. A., AND HOLLAND, F.C. Simulation design of a multiprocessing system. tree. AFIPS 1968 Fall Joint Comput. Conf., Vol. 33, pp. 1399--1419 (Thompson Book Co., Washington, D. C,). The simulation of a mul~iprocessing system designed for air traffic control is discussed in tl~is paper. The system and its requirements are described, and the advantages of and problems presented by multiprocessing are iscussed. A brief description of the simulation models is given and some results of the simulation are presented.
Norman R. Nielsen, The simulation of time sharing systems, Communications of the ACM, v.10 n.7, p.397-412, July 1967[doi>10.1145/363427.363436]
-------. An approach to the simulation of a time-sharing system. Prec. AFIPS 1967 Fall Joint Comput. Conf., Vol. 31, p.p. 419-428 (Thorapsma Book Co., Washington, D. C.). A detailed description of techniques for simulating memory paging processes and task execution sequences is presented in this paper.
Norman R. Nielsen, Computer simulation of computer system performance, Proceedings of the 1967 22nd national conference, p.581-590, January 1967, Washington, D.C., United States[doi>10.1145/800196.806027]
Norman R. Nielsen, ECSS - an Extendable Computer System Simulator, Proceedings of the third conference on Applications of simulation, p.114-129, December 08-10, 1969, Los Angeles, California, United States
REHMAN, S. L., AND GANGWERE., S.G. A simulation study of resource management in a timesharing system. Prec. AFIPS 1968 Fall Joint Comput. Conf., Vol. 33, pp. 1411-1430 (Thompson Book Co., Washington, D. C.). A simple simulation model of a multiprogramming system is described, and the results of experiments with various time slice and job characteristic values are presented.
SCHERR, A. L. An analysis of time-shared computer systems. Res. Monograph No. 36, MIT Press, Cambridge, Mass., 1967. This is a study of the MIT Compatible Time Sharing System (CTSS). Statistics on CTSS job behavior are presented and the simulation model described in detail. The simulator employed the CTSS scheduling algorithm, and MAD listings for this algorithm as well as the simulator itself are given in appendices. Marker models of the system are developed, and the system performance as predicted by the simulation model and Markovian models is compared with actual system performance.
SEAMAN, P. H., AND SOUCY. R. C. Simulating operating systems. IBM Syst. J. 8, 4 (1969), 264-279. The Computer System Simulator (CSS), which provides a language and a structure specifically designed for modeling computer systems, is described in this paper. The CSS language is a higher level language irt which the subject system can be described in terms of its configuration, operating system programs, and job environment.
----. On teleprocessing system design. Part VI. The role of digital simulation. IBM Sysl. J. 5, 3 (1966), 175-189. Considerations in undertaking a computer system simulation study are discussed in this paper. Some of the modeling techniques required for such a study are presented and llusl, rated via GPSS.
YOUCHAH, M. I., RUDIE, D. D., AND JOHNSON, E. J. The Data Processing System Simulator (DPSS). Prec. AFIPS 1964 Fall Joint Comput. Conf., Vol. 26, Pt. 1, pp. 251-276 (Spartan Books, Baltimore, Md.). This paper describes a general-purpose computer system simulator which can be used for evaluating a variety of system configurations and job processing rules by specifying system behavior in a higher order macro language.
James Armstrong , Horst Ulfers , Donald J. Miller , Harry C. Page, SOLPASS - a Simulation Oriented Language Programming and Simulation System, Proceedings of the third conference on Applications of simulation, p.24-37, December 08-10, 1969, Los Angeles, California, United States
BLUNDEN, G. P., AND KRASNOW, H. S. The process concept as a basis for simulation modoling. Simulation 9, 2 (Aug. 1967) 89-93. Several recent simulation languages (e.g. SIMULA) are based on the "process" concept, as opposed to the "event" concept (SIM- SCRIPT) or the activiLy concept (CSL). This paper discusses the dynamic and static characteristics of systems, and suggests that the process concept provides a unified way of treating these characteristics.
BUXTON, J. N., AND LASKI, J. G. Control and Simulation Language. Comput. J. 5, 3 (Oct. 1962), 194-200. This paper describes the activity-based Control and Simulation Language (CSL) and describes the compiling technique employed (FORTRAN is used as an intermediate language). CSL provides facilities for simulation somewhat similar to those in SIMSCRIPT.
Ole-Johan Dahl , Kristen Nygaard, SIMULA: an ALGOL-based simulation language, Communications of the ACM, v.9 n.9, p.671-678, Sept. 1966[doi>10.1145/365813.365819]
DIMSDALE, B., AND MARKOWITZ, H. M. A description of the SIMSCRIPT language. IBM Syst. J. 3, 1 (1964), 57-67. This paper describes the basic features of SIMSCRIPT by demonstrating their use in the simulation of a supermarket. It also is incorporated into {5, Cb. 7}.
EFRON, R., AND GORDON, G. A general purpose digital simulator and exalnples of its application. Part I--Descripfion of the simulator. IBM Syst. J. 5, 1 (1964), 22--34. This paper gives a very good introduction to the concepts and facilities of GPSS II, using a simple real-time data processing system as an example. Since GPSS III retains most of the GPSS II facilities, this paper is recommended reading for anyone interested in either version of GPSS. This paper also appears as part of {5, Ch. 7}, where it is accompanied by another example provided by one of the authors.
FREEMAN, D. E. Discrete systems simulation. Simulation 7, 3 (Sept. 1966), 142-148. A brief introduction to the nature of discrete system simulation is given, followed by an example of the application of GPSS to the simulation of a gas station.
GREENBERGER, M., JONES, M. M., MOURNS, J. R. AND NESS, D. N. On-Line Computation and Simulation: The OPS-3 System. MIT Press, Cambridge, Mass., 1965. The OPS-3 system is a general-purpose timesharing language developed for use with the MIT time-sharing system. This manual describes the facilities and features of the language. OPS-3 contains a number of special operators (e.g. the AGENDA operator for scheduling activities) for simulation.
GElSLER, M. A., AND MARKOWITZ, H. M. A brief review of SIMSCRIPT as a simulating technique. RM-3778-Pl-t, RAND Corp., Santa Monica, Calif., 1963 (AD 411-324). This paper provides a readily assimilated review of the basic concepts and facilities of SIMSCRIPT.
GENERAL PURPOSE SYSTEMS SIMULATOR II. Form B20-6346, IBM Corp., White Plains, N. Y., 1963.
GENERAL PURPOSE SYSTEMS SIMULATOR III. Form B20-0(O1, IBM Corp., White Plains. N. Y., 1965. This manual (as well as the GlaSS II manual cited in the previous reference) is a readable description of the features and facilities of GPSS. More detailed information is available in the user's manuals.
HERSCOVITCH, H., AND SCHNEIDER, T. H. GPSS III--An expanded general purpose simulator. IBM Sysl. J. 4, 3 (1965), 174-183. GPSS III is an extension of GPSS II. This paper reviews these extensions. A knowledge of GPSS II is assumed.
Malcolm M. Jones, On—line simulation, Proceedings of the 1967 22nd national conference, p.591-599, January 1967, Washington, D.C., United States[doi>10.1145/800196.806028]
KIVLAT, P. J. GASP--A General Activity Simulation Program. Project No. 90.17-019(2), Appl. Res. Lab., U. S. Steel, Monroeville, Pa., 1963. This report describes GASP, a FORTRAN-imbedded, event-oriented, simulation language. Facilities for performing such simulation functions as scheduling of events, manipulating queues, etc., are provided in the form of FORTRAN subroutines.
--. Simulation language report generators. P-,3349, RAND Corp., Santa Monica, Calif., April 1966 (AD 631-940). In this interesting paper, the author proposes simulation language facilities for debugging, report generation, collection of statistics, and dynamic display of system behavior.
--. Development of new digital simulation languages. J. Ind. Eng. 17 (Nov. 1966), 604- 608. (Also P-3348, RAND Corp., Santa Monica, Calif., April 1966.) Event, activity, and process concepts are discussed, followed by a commentary on current simulation languages. The bulk of the paper is devoted to a discussion of SIMSCRIPT II. There are 20 references.
------. Development of discrete digital simulation languages. Simulation 8, 2 (Feb. 1967), 65- 70. This paper gives a brief review of the developmep.t of simulation languages, and discusses the conceptual differences and principal features. There are 36 references.
-----. Digital computer simulation: Computer programming languages. RM-5883-PR, RAND Corp., Santa Monica, Calif., Jan. 1969. The conceptual approaches in the development of various simulation languages are reviewed, and four languages (GPSS, SIM- SCRIPT, SIMULA, and CSL), are compared and discussed. Sample programs in each language are provided. Current work and future trends in simulation languages are described. This is a well-written paper and recommended reading.
-----, VILLANUEVA, R., AND MARKOWITZ, H. M. The SIMSCRIPT II Programming Language. Prentice-Hall, Englewood Cliffs, N. J., 1969. The features and facilities of SIMSCRIPT II are presented in this reference manual. While SIMSCaleT II commands are, in general, similar to those of SIMSCRIPT, many have expanded facilities. The language is now freeform, and the data definition form has been done away with; data definition is now accomplished by statements.
KNUTH, D. E., AND MCNELEY, J. L. SOL--A symbolic language for general-purpose systems simulation. IEEE Trons. EC-13 (Aug. 1964), 401-408. SOL, an ALGoL-like simulation language developed for the Burroughs B-5000, is described in this paper by applying it to the simulation of a multiconsole computer system. The complete simulation program is given, followed by a clear explanation of the purpose and function of each statemenL.
-------- AND --------. A formal definition of SOL. I EEE Trans. EC-t3 (Aug. 1964), 409-414. This paper briefly introduces the basic concepts of SOL and gives a formal, metalinguistic description of the language. While SOL has not come into widespread use, it has provided many ideas and much stimulus for current simulation language development.
MARKOWITZ, II. M., HAUSNER, B., AND KARR, H. W. SIMSCRIPT----A ,gimulation Languag'e. Prentice-Hall, Inc., Englewood Cliffs, N. J., 1963. This is a refererence manual describing the SIMSCRIPT language.
MCNELEY, J. L. Simulation languages. Simulation 9, 2 (Aug. 1967), 95-98. This paper introduces some of the features of SIMULA via a store checkout counter simulation example.
R. J. Parente , H. S. Krasnow, A language for modeling and simulating dynamic systems, Communications of the ACM, v.10 n.9, p.559-567, Sept. 1967[doi>10.1145/363566.363684]
Daniel Teichroew , John Francis Lubin, Computer simulation—discussion of the technique and comparison of languages, Communications of the ACM, v.9 n.10, p.723-741, Oct. 1966[doi>10.1145/365844.365851]
Ernst G. Ulrich, Serial/parallel event scheduling for the simulation of large systems, Proceedings of the 1968 23rd ACM national conference, p.279-287, August 27-29, 1968[doi>10.1145/800186.810588]
David G. Weamer, QUIKSIM - a block structured simulation language written in SIMSCRIPT, Proceedings of the third conference on Applications of simulation, p.1-11, December 08-10, 1969, Los Angeles, California, United States
Arla E. Weinert, A SIMSCRIPT-FORTRAN case study, Communications of the ACM, v.10 n.12, p.784-792, Dec. 1967[doi>10.1145/363848.363862]
Donald S. Burdick , Thomas H. Naylor, Design of computer simulation experiments for industrial systems, Communications of the ACM, v.9 n.5, p.329-339, May 1966[doi>10.1145/355592.365616]
FlSHMAN, G. S., AND KIVIAT, P. J. Spectral analysis of time series generated by simulation models. RM-4393-PR, RAND Corp., Santa Monica, Calif., Feb; 1965 (AD 612-281). The application of spectral analysis techniques to the statistical analysis of the output of simulation experiments is described in this interesting report. The theory underlying these techniques is reviewed and illustrated by application to a single-server queueing problem. The approach provides a mel~hod for deterinining the experiment run time required to generate the equivalent of an independent observation.
----- AND -------. The statistics of discrete-event simulation. Simulation 10, 4 (April 1966), 185- 195. A brief resume of the statistical aspects of simulation experiments is presented in this paper. Problems in randotn variable genera- Lion, model strue.tnre verification and validation, nm length determination, and experimental design are considered. There are 26 references.
George S. Fishman, Problems in the statistical analysis of simulation experiments: the comparision of means and the length of sample records, Communications of the ACM, v.10 n.2, p.94-99, Feb. 1967[doi>10.1145/363067.363103]
-----. The allocation of computer Lime in cornparing simulation experiments. Oper. Res. 1#, 2 ( March-April 1968), 280-295. This paper describes a rule for choosinl~ sample sizes---and therefore computer running Lime---so as to obtain a specified reliability in the estimate of the sample mean. When the objective is a comparison of means resulting from two experiments, it is shown that, for a givert accuracy, selecting sample sizes according to the rule rather than employing equal sample sizes may reduce significantly the computer time required.
Thomas H. Naylor , Kenneth Wertz , Thomas H. Wonnacott, Methods for analyzing data from computer simulation experiments, Communications of the ACM, v.10 n.11, p.703-710, Nov. 1967[doi>10.1145/363790.363810]
