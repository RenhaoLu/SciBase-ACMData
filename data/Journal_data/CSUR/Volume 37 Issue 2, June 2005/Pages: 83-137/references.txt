Atkinson, B. 1987. Hypercard. Apple Computer.
Becker, B. 2004. Robots: Learning to Program with Java. Self-published. Waterloo.
Begel, A. 1997. Bongo: A kids' programming environment for creating video games on the Web. Electrical Engineering and Computer Science Department, MIT, Cambridge, MA.
Begel, A. 1996. LogoBlocks: A graphical programming language for interacting with the world. Electrical Engineering and Computer Science Department. MIT, Cambridge, MA.
Bell, B. and Lewis, C. 1993. ChemTrains: A language for creating behaving pictures. In IEEE Symposium on Visual Languages, 188--195.
Joseph Bergin , Jim Roberts , Richard Pattis , Mark Stehlik, Karel++: A Gentle Introduction to the Art of Object-Oriented Programming, John Wiley & Sons, Inc., New York, NY, 1996
Joseph Bergin , Jim Roberts , Richard Pattis , Mark Stehlik, Karel++: A Gentle Introduction to the Art of Object-Oriented Programming, John Wiley & Sons, Inc., New York, NY, 1996
Alan F. Blackwell , Rob Hague, AutoHAN: An Architecture for Programming the Home, Proceedings of the IEEE 2001 Symposia on Human Centric Computing Languages and Environments (HCC'01), p.150, September 05-07, 2001
Chuck Blanchard , Scott Burgess , Young Harvill , Jaron Lanier , Ann Lasko , Mark Oberman , Mike Teitel, Reality built for two: a virtual reality tool, Proceedings of the 1990 symposium on Interactive 3D graphics, p.35-36, February 1990, Snowbird, Utah, USA[doi>10.1145/91385.91409]
Bruckman, A. 1997. MOOSE crossing: Construction, community, and learning in a networked virtual world for kids. MIT Media Lab, Cambridge, MA.
Brusilovsky, P. 1991. Turingal---the language for teaching the principles of programming. In the 3rd European Logo Conference, Parma, Italy. 423--432.
Peter Brusilovsky , Eduardo Calabrese , Jozef Hvorecky , Anatoly Kouchnirenko , Philip Miller, Mini-languages: a way to learn programming principles, Education and Information Technologies, v.2 n.1, p.65-83, 1997-  1998[doi>10.1023/A:1018636507883]
Budge, B. 1983. Pinball Construction Set, Exidy Software.
Margaret Burnett , John Atwood , Rebecca Walpole Djang , James Reichwein , Herkimer Gottfried , Sherry Yang, Forms/3: A first-order visual language to explore the boundaries of the spreadsheet paradigm, Journal of Functional Programming, v.11 n.2, p.155-206, March 2001
Carnegie Mellon University. 2003. Alice 2. Available at www.alice.org.
Carnegie Mellon University. 1999. Alice 99. Available at www.alice.org.
Catlin, D. 1989. Roamer. Valiant Technologies. Available at www.valiant-technology.com.
Cheng, A. 1998. A graphical programming interface for a children's constructionist learning environment. Electrical Engineering and Computer Science Department. MIT, Cambridge, MA.
A. Cockburn , A. Bryant, Cleogo: Collaborative and Multi-Metaphor Programming for Kids, Proceedings of the Third Asian Pacific Computer and  Human Interaction, p.189, July 15-17, 1998
Cockburn, A. and Bryant, A. 1997. Leogo: An equal opportunity user interface for programming. J. Visual Lang. Comput. 8, 5-6, 601--619.
Cognitoy. 2001. Mindrover.
Conway, M. 1997. Alice: Easy-to-learn 3D scripting for novices. School of Engineering and Applied Science, University of Virginia, Charlottesville, VA.
Allen Cypher , Daniel C. Halbert , David Kurlander , Henry Lieberman , David Maulsby , Brad A. Myers , Alan Turransky, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
Debonte, A. 1998. Pet Park: A virtual learning world for kids. Electrical Engineering and Computer Science Department. MIT, Cambridge, MA.
Christopher John Digiano , Michael Eisenberg, Self-disclosing design tools: an incremental approach toward end-user programming, University of Colorado at Boulder, Boulder, CO, 1996
Dijkstra, E. W. 1969. Structured programming. In Proceedings of Software Engineering Technologies, Rome, Italy.
A. A diSessa , H. Abelson, Boxer: a reconstructible computational medium, Communications of the ACM, v.29 n.9, p.859-868, Sept. 1986[doi>10.1145/6592.6595]
Edmark Corporation. 1995. Thinkin' Things Collection 3: Half Time.
Marc Eisenstadt, A user-friendly software environment for the novice programmer, Communications of the ACM, v.26 n.12, p.1058-1064, Dec. 1983[doi>10.1145/358476.358500]
J. Fenton , K. Beck, Playground: an object-oriented simulation system with agent rules for children of all ages, Conference proceedings on Object-oriented programming systems, languages and applications, p.123-137, October 02-06, 1989, New Orleans, Louisiana, USA[doi>10.1145/74877.74891]
Finzer, W. and Gould, L. 1984. Programming by rehearsal. Xerox Palo Alto Research Center, Palo Alto, CA.
Phil Frei , Victor Su , Bakhtiar Mikhak , Hiroshi Ishii,curlybot: designing a new class of computational toys, Proceedings of the SIGCHI conference on Human Factors in Computing Systems, p.129-136, April 01-06, 2000, The Hague, The Netherlands[doi>10.1145/332040.332416]
Gilligan, D. 1998. An exploration of programming by demonstration in the domain of novice programming. Comput. Science. Victoria University, Wellington, Victoria, 176.
J. Gindling , A. Ioannidou , J. Loh , O. Lokkebo , A. Repenning, LEGOsheets: a rule-based programming, simulation and manipulation environment for the LEGO Programmable Brick, Proceedings of the 11th International IEEE Symposium on Visual Languages, p.172, September 05-09, 1995
Ephraim P. Gilnert , Steven L. Tanimoto, Pict: An Interactive Graphical Programming Environment, Computer, v.17 n.11, p.7-25, November 1984[doi>10.1109/MC.1984.1658997]
Danny Goodman, The  Complete HyperCard Handbook, Random House Inc., New York, NY, 1987
Guzdial, M. 1994. Software-realized scaffolding to facilitate programming for science learning. Interact. Learn. Environ. 4, 1, 1--44.
Hancock, C. 2001. Children's understanding of process in the construction of robot behaviors. In Symposium on Varieties of Programming Experiences, Seattle, WA.
W. Hartmann , J. Nievergelt , R. Reichert, Kara, finite state machines, and the case for programming as part of general education, Proceedings of the IEEE 2001 Symposia on Human Centric Computing Languages and Environments (HCC'01), p.135, September 05-07, 2001
Hays, J. and Burnett, M. 2001. Guided tour of Forms/3. Available at http://web.engr.oregonst-ate.edu/~burnett/Forms3/Tour/tour.html.
Jana Hintze , Maic Masuch, Designing a 3D Authoring Tool for Children, Proceedings of the Second International Conference on Creating, Connecting and Collaborating through Computing, p.78-85, January 29-30, 2004[doi>10.1109/C5.2004.14]
Richard C. Holt , James R. Cordy, The Turing programming language, Communications of the ACM, v.31 n.12, p.1410-1423, Dec. 1988[doi>10.1145/53580.53581]
R. C. Holt , D. B. Wortman , D. T. Barnard , J. R. Cordy, SP/k: a system for teaching computer programming, Communications of the ACM, v.20 n.5, p.301-309, May 1977[doi>10.1145/359581.359586]
Takeo Igarashi , Satoshi Matsuoka , Hidehiko Tanaka, Teddy: a sketching interface for 3D freeform design, Proceedings of the 26th annual conference on Computer graphics and interactive techniques, p.409-416, July 1999[doi>10.1145/311535.311602]
Ingalls, D., Wallace, S., Chow, Y.-Y., Ludolph, F., and Doyle, K. 1988. Fabrik: A visual programming environment. In Object Oriented Programming Systems, Languages, and Applications, San Diego, CA. 176--190.
Kahn, K. 1996. Drawings on napkins, video-game animation, and other ways to program computers. Commun. ACM 43, 3, 104--106.
Hiroshi Kato , Akiko Ide, Using a game for social setting in a learning environment: AlgoArena—a tool for learning software design, The first international conference on Computer support for collaborative learning, p.195-199, October 1995, Indiana Univ., Bloomington, Indiana, USA[doi>10.3115/222020.222171]
Alan C. Kay, The early history of Smalltalk, ACM SIGPLAN Notices, v.28 n.3, p.69-95, March 1993[doi>10.1145/155360.155364]
Kay, A. Etoys and simstories in squeak. Available at http://www.squeakland.org/author/etoys.html.
Kimura, T., Choi, J., and Mack, J. 1990. Show and tell: A visual programming language. In Glinert, E. P., Ed. Visual Programming Environments: Paradigms and Systems. IEEE Computer Science Press, 397--404.
Kolling, M., Quig, B., Patterson, A., and Rosenberg, J. 2003. The BlueJ system and its pedagogy. J. Comput. Science Educ., Special Issue of Learning and Teaching Object Technology 12, 4, 249--268.
Michael Kölling , John Rosenberg, Blue—a language for teaching object-oriented programming, Proceedings of the twenty-seventh SIGCSE technical symposium on Computer science education, p.190-194, February 15-17, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/236452.236537]
Michael Kölling , John Rosenberg, An object-oriented program development environment for the first programming course, Proceedings of the twenty-seventh SIGCSE technical symposium on Computer science education, p.83-87, February 15-17, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/236452.236514]
Kurtz, T. 1981. BASIC. In Wexelblat, R., Ed. History of Programming Languages. Academic Press, New York, 515--537.
Lego Systems, Inc. 1998. Lego Mindstorms Robotics Invention System. Available at http://mindstorms.lego.com.
Henry Lieberman, Mondrian: a teachable graphical editor, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
Lionet, F. and Lamoureux, Y. 1994. Klik and Play. Maxis.
Logo Computer Systems, Inc. 1995. My Make Believe Castle.
Logo Computer Systems, Inc. 1995. Availablle at www.microworlds.com.
Logotron. 2002. Magic Forest.
Martin, F., Colobong, G. L., and Resnick, M. 1999. Tangible programming with trains. Available at http://el.www.media.mit.edu/projects/trains.
Maxis. 1995. Widget Workshop.
Mciver, L. 1999. Grail: A zeroth programming language. In Conference in Computers in Education.
Mciver, L. 2001. Syntactic and semantic issues in introductory programming education. Comput. Science Softw. Eng., Monash University, Melbourne, Australia.
Mcnerney, T. 2000. Tangible programming bricks: An approach to making programming accessible to everyone. MIT Media Lab, Cambridge, MA.
Merrill, D. C. and Reiser, B. J. 1993. Scaffolding the acquisition of complex skills with reasoning-congruent learning environments. In Workshop in Graphical Representations, Reasoning, and Communication from the World Conference on Artificial Intelligence in Education. University of Edinburgh, 9--16.
Miller, P., Pane, J., Meter, G., and Vorthmann, S. 1994. Evolution of novice programming environments: The Structure Editors of Carnegie Mellon University. Interac. Learn. Environ. 4, 2, 140--158.
Marvin Minsky, The society of mind, Simon & Schuster, Inc., New York, NY, 1986
Jaime Montemayor , Allison Druin , Allison Farber , Sante Simms , Wayne Churaman , Allison D'Amour, Physical programming: designing tools for children to create physical interactive environments, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, April 20-25, 2002, Minneapolis, Minnesota, USA[doi>10.1145/503376.503430]
Motil, J. and Epstein, D. 1998. JJ: A language designed for beginners (less is more). Available at http://www.publicstaticvoidmain.com/JJ_A_Language_Designed_For_Begin-ners_LessIsMore.pdf.
Paul Mulholland , Stuart Watt, Hank: A Friendly Cognitive Modelling Language for Psychology Students, Proceedings of the IEEE Symposium on Visual Languages, p.210, September 01-04, 1998
Nelson, M. 2001. Robocode, IBM Advanced Technologies. Available at http://robocode.alphaworks.ibm.com/home/home.html.
Norman, D. 1986. Cognitive engineering. In Norman, D. and Draper, S., Eds. User Centered System Design: New Perspectives on Human-Computer Interaction. Lawrence Erlbaum Associates, Hillsdale, NJ.
Overmars, M. Drape: Drawing programming environment. Available at http://www.cs.uu.nl/people/markov/kids.
John Francis Pane , Brad A. Myers , David Garlan, A programming system for children that is designed for usability, Carnegie Mellon University, Pittsburgh, PA, 2002
Seymour Papert, Mindstorms: children, computers, and powerful ideas, Basic Books, Inc., New York, NY, 1980
Richard E. Pattis, Karel the Robot: A Gentle Introduction to the Art of Programming, John Wiley & Sons, Inc., New York, NY, 1981
Perlman, R. 1976. Using computer technology to provide a creative learning environment for preschool children. Electrical Engineering and Computer Science, Department MIT, Cambridge, MA.
Alex Repenning, Agentsheets: a tool for building domain-oriented visual programming environments, Proceedings of the INTERACT '93 and CHI '93 Conference on Human Factors in Computing Systems, p.142-143, April 24-29, 1993, Amsterdam, The Netherlands[doi>10.1145/169059.169119]
Alexander Repenning , James Ambach, Tactile Programming: A Unified Manipulation Paradigm Supporting Program Comprehension, Composition and Sharing, Proceedings of the 1996 IEEE Symposium on Visual Languages, p.102, September 03-06, 1996
Thomas W. Reps , Tim Teitelbaum, The synthesizer generator: a system for constructing language-based editors, Springer-Verlag New York, Inc., New York, NY, 1989
Mitchel Resnick, StarLogo: an environment for decentralized modeling and decentralized thinking, Conference Companion on Human Factors in Computing Systems, p.11-12, April 13-18, 1996, Vancouver, British Columbia, Canada[doi>10.1145/257089.257095]
Robinett, W. 1979. Atari 2600 Basic Cartridge. Atari Co.
Robinett, W. and Grimm, L. 1982. Rocky's Boots/Robot Odyssey. The Learning Co.
Sammet, J. 1981. The early history of cobol. In Wexelblat, R. Ed. History of Programming Languages. Academic Press, New York, NY. 199--241.
Sellman, R. 1992. Gravitas: An object-oriented discovery learning environment for Newtonian gravitation. In Proceedings of the East-West Conference on Human-Computer Interaction. 31--41.
Sherwood, B. and Sherwood, J. 1988. The cT Language. Stipes Publishing Company, Champaigne, IL.
Sierra Games. 1993. The Incredible Machine.
Allen Cypher , Daniel C. Halbert , David Kurlander , Henry Lieberman , David Maulsby , Brad A. Myers , Alan Turransky, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
David Canfield Smith , Allen Cypher , Jim Spohrer, KidSim: programming agents without a programming language, Communications of the ACM, v.37 n.7, p.54-67, July 1994[doi>10.1145/176789.176795]
Smith, R. 1987. Experiences with the alternate reality kit: An example of the tension between literalism and magic. In Human Factors in Computing Systems, 61--67.
Hideyuki Suzuki , Hiroshi Kato, Interaction-level support for collaborative learning:AlgoBlock—an open programming language, The first international conference on Computer support for collaborative learning, p.349-355, October 1995, Indiana Univ., Bloomington, Indiana, USA[doi>10.3115/222020.222828]
Tanimoto, S. and Runyan, M. 1986. Play: An iconic programming system for children. In Chang, S. K., Ichikawa, T. and Ligomenides, P. A., Eds. Visual Languages. Plenum Publishing Corp. 191--205.
Tim Teitelbaum , Thomas Reps, The Cornell program synthesizer: a syntax-directed programming environment, Communications of the ACM, v.24 n.9, p.563-573, Sept. 1981[doi>10.1145/358746.358755]
Ivan Tomek, First Book of Josef: An Introduction to Computer Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1983
Michael Travers, Recursive interfaces for reactive objects, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.379-385, April 24-28, 1994, Boston, Massachusetts, USA[doi>10.1145/191666.191794]
N. Wirth, Recollections about the development of Pascal, ACM SIGPLAN Notices, v.28 n.3, p.333-342, March 1993[doi>10.1145/155360.155378]
Peta Wyeth , Helen C. Purchase, Programming without a Computer: A New Interface for Children under Eight, Proceedings of the First Australasian User Interface Conference, p.141, January 31-February 03, 2000
