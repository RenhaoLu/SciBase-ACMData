Robert Balzer, A 15 year perspective on automatic programming, IEEE Transactions on Software Engineering, v.11 n.11, p.1257-1268, Nov. 1985[doi>10.1109/TSE.1985.231877]
R. Balzer, A fifteen-year perspective on automatic programming, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75736]
Jon Bentley , Don Knuth, Programming pearls: literate programming, Communications of the ACM, v.29 n.5, p.384-369, May 1986[doi>10.1145/5689.315644]
BIGGERST~F, T. 1987. Hypermedia as a tool to aid large scale reuse. In Proceedzngs of the Workshop on Software Reuse (Oct.). Rocky Mountain Institute of Software Engineering, Boulder, Colo.
Ted J. Biggerstaff , Alan J. Perlis, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989
Ted J. Biggerstaff , Alan J. Perlis, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989
T. J. Biggerstaff , C. Richter, Reusability framework, assessment, and directions, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73104]
T. J. Biggerstaff , C. Richter, Reusability framework, assessment, and directions, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73104]
Barry W. Boehm, Improving software productivity, Computer, v.20 n.9, p.43-57, Sept. 1987[doi>10.1109/MC.1987.1663694]
BOOEH, G. 1987. Software Components with Ada: Structures, Tools, and Subsystems. Benjamin/ Cummings Publishing Company, Inc., Menlo Park, Calif.
Frederick P. Brooks, Jr., The mythical man-month (anniversary ed.), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1995
Frederick P. Brooks, Jr., No silver bullet: essence and accidents of software engineering, Computer, v.20 n.4, p.10-19, April 1987[doi>10.1109/MC.1987.1663532]
CHEATHAM, T. E. JR. 1983. Reusability through program transformations. In Workshop on Reusability in Programming (Newport, RI, Sept.). ITT Programming, Stratford, Conn., pp. 122-128. Also in Cheatham {1984, 1989}.
CHEATHAM, T. E. JR. 1984. Reusability through program transformatLons. IEEE Trans. Softw. Eng. SE-IO, 5 (Sept.), 589-594. Originally Cheatham { 1983}.
T. E. Cheatham, Jr., Reusability through program transformations, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73116]
CHENG, T. T.~ LOCK, E. D., AND FRYWES, N. $. 1984. Use of very high level languages and program generation by management professionals. IEEE Trans. Softw. Eng. SE-IO, 5 (Sept.), 552-563.
J. Craig Cleaveland, Building Application Generators, IEEE Software, v.5 n.4, p.25-33, July 1988[doi>10.1109/52.17799]
DEREMER, F., AND KRON, H. H. 1976. Programming-in-the-large versus programming-in-thesmall. IEEE Trans. Softw. Eng, SE-2, 2 (June), 80-86.
DEUTSCH, P. L. 1983. Reusability in the Smalltalk-S0 programming system. In Workshop on ReusabLllty ~n Prog-rammmg (Newport, R. I. Sept.). ITT Programming, Stratford, Conn,, pp. 72 76. Also in Freeman {1987b}.
L. P. Deutsch, Design reuse and frameworks in the smalltalk-80 system, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75725]
DOBERKAT E., DUBINSK~f, E., AND SCHWARTZ, J. T. 1983. Reusability of design for complex programs: An experiment with the SETL optimizer. In Workshop on Reusability in Programruing (Newport, R. I., Sept.) ITT Programming, Stratford, Conn., pp. 106-108.
Jack J Dongarra , Eric Grosse, Distribution of mathematical software via electronic mail, Communications of the ACM, v.30 n.5, p.403-407, May 1987[doi>10.1145/22899.22904]
V. Donzeau-Gouge , G. Kahn , B. Lang , B. Mélèse, Document structure and modularity in mentor, Proceedings of the first ACM SIGSOFT/SIGPLAN software engineering symposium on Practical software development environments, p.141-148, April 1984[doi>10.1145/800020.808259]
E. Dubinsky , S. Freudenberger , E. Schonberg , J. T. Schwartz, Reusability of design for large software systems: and experiment with the SETL optimizer, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73114]
D. W. Embley , S. N. Woodfield, A knowledge structure for reusing abstract data types, Proceedings of the 9th international conference on Software Engineering, p.360-368, March 1987, Monterey, California, United States
ESHELMAN, L. 1988. MOLE: A knowledge-acquisition tool ~or cover-and-difFerentiate systems. In Kluwer International Series in Engineering and Computer Science. Automatzc Knowledge Acquisition for Expert Systems. Kluwer Academic Publishers, Boston, Mass, pp. 37 80, Chap. 3.
EVB SOFTWARE 1985. An Object Oriented Design Handbook for Ada Software. EVB Software Engineering, Inc., Fredrick, Maryland.
FEATHER, M. S. 1983. Reuse in the context of a transformation based methodology. In Workshop on Reusabili(v in Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 50-58. Also in Freeman {1987b} and Feather { 1989}.
M. S. Feather, Reuse in the context of a transformation-based methodology, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73117]
Stephen F. Fickas, Automating the transformational development of software, IEEE Transactions on Software Engineering, v.11 n.11, p.1268-1277, Nov. 1985[doi>10.1109/TSE.1985.231878]
FREEMAN, P. 1983. Reusable software engineering: Concepts and research directions. In Workshop on Reusabtllty zn Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 2-16. Also in Freeman {1987b}
P. Freeman, A conceptual analysis of the Draco approach to constructing software systems, IEEE Transactions on Software Engineering, v.13 n.7, p.830-844, July 1987[doi>10.1109/TSE.1987.233494]
P. Freeman, Tutorial, software reusability, IEEE Computer Society Press, Los Alamitos, CA, 1987
David Garlan, The role of formal reusable frameworks, Conference proceedings on Formal methods in software development, p.42-44, May 09-11, 1990, Napa, California, United States[doi>10.1145/99569.99812]
A Joseph Goguen, Reusing and interconnecting software components, Computer, v.19 n.2, p.16-27, Feb. 1986[doi>10.1109/MC.1986.1663146]
J. A. Goguen, Principles of parameterized programming, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73110]
HABERMANN, A. N., KRUEGER, C., PIERCE, B., STAUDT, B., AND WENN, J. 1988. Programming with views. Tech. Rep. CMU-CS-87-177, Carnegie- Mellon University, Pittsburgh, Penn.
Frederick Hayes-Roth , Donald A. Waterman , Douglas B. Lenat, Building expert systems, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1983
HoRowiTz, E., AND MUNSON, J. B. 1983. An expansive view of reusable software. In Workshop on Reusability in Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 250-262. Also in Horowitz and Munson {1984}, Freeman {198761, and Horowitz and Munson{1989}.
HOR0WITZ, E., AND MUNSON, J. B. 1984. An expansive view of reusable software. IEEE Trans. Softw. Eng. SE-iO, 5 (Sept.), 477-487. Originally Horowitz and Munson {1983}.
E. Horowitz , J. B. Munson, An expansive view of reusable software, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73105]
HOROWITZ, E., KEMPER, A., AND NARASIMHAN, B. 1985. A survey of application generators. IEEE Softw. 2, 1 (Jan.), 40-54.
ICHB~AU, J. D. 1983. On the design of Ada. In Information Processing' 83. Mason, R.E.A., Ed. IFIP, Elsevier Science Pub., New York, pp. 1-10.
IMSL 1987. IMSL Math/Library User's Manual. 1.0 Edition, Houston, Tex.
JOHNSON, S. C. 1979. Yacc: Yet Another Compiler- Compiler in the UNIX Programmer's Manual Supplementary Documents. 7th ed. AT & T Bell Laboratories, Indianapolis, Ind.
Gail Elaine Kaiser, Semantics for structure editing environments, 1985
G. E. Kaiser, Incremental dynamic semantics for language-based programming environments, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.2, p.169-193, April 1989[doi>10.1145/63264.63400]
G. E. Kaiser , D. Garlan, Melding software systems from reusable building blocks, Software reuse: emerging technology, IEEE Computer Society Press, Los Alamitos, CA, 1988
G. E. Kaiser , D. Garlan, Synthesizing programming environments from reusable features, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75724]
S. Katz , C. A. Richter , K.-S. The, PARIS: a system for reusing partially interpreted schemas, Proceedings of the 9th international conference on Software Engineering, p.377-385, March 1987, Monterey, California, United States
S. Katz , C. A. Richter , K.-S. The, PARIS: a system for reusing partially interpreted schemas, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73113]
KERNIGHAN, B. W. 1983. The Unix system and software reusability. In Workshop on Reusability *n Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 235-239. Also in Kernighan {1984} and Freeman {1987b}.
KERNIGHAN, B. W. 1984. The Unix system and software reusability. IEEE Trans. Softw. Eng. SE-IO, 5 (Sept.), 513-518. Originally Kernighart {1983}.
Donald Ervin Knuth, The  Art of Computer Programming, 2nd Ed. (Addison-Wesley Series in Computer Science and Information, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1978
KAUCHTEN, P., SCHONBERG, E., AND SCHWARTZ, J. 1984. Software prototyping using the SETL programming language. IEEE Softw. 1, 4 (Oct.), 66-75.
IiRUEGER, C. W. 1987. Expert system engineering and its relation to conventional software engineering. Ph.D. area qualifier paper. Carnegie- Mellon Univ., Pittsburgh, Penn. Available from author on request.
KRUEGER, C. W. 1992. Application-specific object management architectures. Ph.D. dissertation, Carnegie-Mellon Univ.
Thomas G. Lane, User interface software structures, Carnegie Mellon University, Pittsburgh, PA, 1990
LATOUR, L., AND JOHNSON, E. 1988. Seer: A graphical retrieval system for reusable Ada software modules. In The 3rd International IEEE Conference on Ada Applications and Environments (Manchester, N.H., May). IEEE Computer Society Press, Los Alamitos, Calif., pp. 105-113.
LESK, M. E., AND SCHMII/T, E. 1979. Lex: A Lexical Analyzer Generator in the UNIX Programmer's Manual Supplementary Documents, 7th ed. AT 8, T Bell Laboratories, Indianapolis, Ind.
L S Levy, A Metaprogramming method and its economic justification, IEEE Transactions on Software Engineering, v.12 n.2, p.272-277, Feb. 1986
K. J. Lieberherr , A. J. Riel, Demeter: a case study of software growth through parameterized classes, Proceedings of the 10th international conference on Software engineering, p.254-264, April 11-15, 1988, Singapore
Barbara Liskov, Keynote address - data abstraction and hierarchy, Addendum to the proceedings on Object-oriented programming systems, languages and applications (Addendum), p.17-34, October 04-08, 1987, Orlando, Florida, United States[doi>10.1145/62138.62141]
LIU, S., AND PAIGE, R. 1979. Data structure choice/formal differentiation. Tech. Rep. NSO- 15, Courant Institute of Mathematical Sciences, New York.
Jacques Loeckx , Kurt Sieber , Ryan D. Stansifer, The foundations of program verification, John Wiley & Sons, Inc., New York, NY, 1985
LUCKHAM, D. C., AND VaN HENKE, F. W. 1984. An overview of Anna, a specification language for Ada. In 1984 Conference on Ada Applications and Enwronments (St. Paul, Minn., Oct.). IEEE Computer Society Press, Los Alamitos, Calif., pp. 116-127.
Sandra Marcus, Automating Knowledge Acquisition for Expert Systems, Kluwer Academic Publishers, Norwell, MA, 1988
MCDERMOTT, J. 1986. Making expert systems explicit. In Information Processing 86. IFIP, Elsevier Science Pub., New York, pp. 539-544.
MCDERMOTt, J. 1988. Preliminary steps toward a taxonomy of problem-solving methods. In Kluwer International Series in Engineering and Computer Science. Automatic Knowledge Acquisition for Expert Systems. Marcus, S., Ed., Kluwer Academic Publishers, Boston, Mass., pp. 225-256, Chap. 8.
MCILROY, M. D., 1968. Mass produced software components. In Software Engineering; Report on a conference by the NATO Science Committee (Garmisch, Germany, Oct.). Naur, P., and Randell, B., Eds. NATO Scientific Affairs Division, Brussels, Belgium, pp. 138-150.
MENDAL, G. O., 1986. Designing for Ada reuse: A case study. In 2nd Internattonal Conference on Ada Applications and Environments (Miami Beach, Fla., Apr.). IEEE Computer Society Press, Los Alamitos, Calif., pp. 33-42.
MEYER, B. 1987. Reusability: The case for objectoriented design. IEEE Softw. 4, 2 (Mar.), 50 63. Also in Tracz {1988} and Meyer {1989}.
B. Meyer, Reusability: the case for object-oriented design, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75723]
NAUER, P., AND RANDELL, B., EDS. 1968. Software Engineering; Report on a Conference by the NATO Science Committee. NATO Scientific Affairs Division, Brussels, Belgium.
NEIGHBORS, J. M. 1983. The Draco approach to constructing software from reusable compoents. In Workshop on Reusability in Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 167 178. Also in Neighbors {1984} and Freeman {1987b}.
NEIGHBORS, J. M. 1984. The Draco approach to constructing software from reusable components. IEEE Trans. Softw. Eng. SE-IO, 5 (Sept.), 564 574. Originally Neighbors {1983}.
J. M. Neighbors, Draco: a method for engineering reusable software systems, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73115]
PARNAS, D. L., CLEMENTS, P. C., AND WEISS, D. M. 1983. Enhancing reusability with information hiding. In Workshop on Reusability in Programming (Newport, R.I., Sept.). ITT Programruing, Stratford, Conn., pp. 240-247. Also in Freeman {1987b} and Parnas et ah {1989}.
D. L. Parnas , P. C. Clements , D. M. Weiss, Enhancing reusability with information hiding, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73109]
H. Partsch , R. Steinbrüggen, Program Transformation Systems, ACM Computing Surveys (CSUR), v.15 n.3, p.199-236, Sept. 1983[doi>10.1145/356914.356917]
PAYTON, T., KELLER, S., PERKINS, J., ROWLAN, S., AND MARDINLY, S. 1982. SSAGS: A syntax and semantics analysis and generation system. In 6th International Computer Software and Applications Conference ( COMPSA C82 ) (Chicago, Ill., Nov.). IEEE Computer Society Press, Los Alamitos, Cahf., pp. 424-432.
R. Prieto-Diaz, Classification of reusable modules, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73107]
Ruben Prieto-Diaz , G. Arango, Domain Analysis and Software Systems Modeling, IEEE Computer Society Press, Los Alamitos, CA, 1991
PRIETO-DIAZ, R., AND FREEMAN, P. 1987. Classifying software for reusability IEEE Softw. 4, 1 (Jan.), 6-16. Also in Freeman {1987b}.
Ruben Prieto-Diaz , James M Neighbors, Module interconnection languages, Journal of Systems and Software, v.6 n.4, p.307-334, Nov. 1986[doi>10.1016/0164-1212(86)90002-6]
N. S. Prywes , E. D. Lock, Use of the model equational language and program generator by management professionals, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75727]
Thomas Reps , Tim Teitelbaum, The synthesizer generator, Proceedings of the first ACM SIGSOFT/SIGPLAN software engineering symposium on Practical software development environments, p.42-48, April 1984[doi>10.1145/800020.808247]
RICH, C., AND WATERS, R. 1983. Formalizing reusable software components. In Workshop on Reusabih(~ in Programming (Newport, R.I., Sept.). ITT Programming, ITT, Stratford, Conn., pp. 152-159.
Charles Rich , Richard C. Waters, Automatic Programming: Myths and Prospects, Computer, v.21 n.8, p.40-51, August 1988[doi>10.1109/2.75]
C. Rich , R. C. Waters, Formalizing reusable software components in the programmer's apprentice, Software reusability: vol. 2, applications and experience, ACM Press, New York, NY, 1989[doi>10.1145/75722.75737]
SHAW, M. 1984. Abstraction techniques in modern programming languages. IEEE Softw. 1, 4 (Oct.), 10 26.
M. Shaw, Larger scale systems require higher-level abstractions, Proceedings of the 5th international workshop on Software specification and design, p.143-146, April 1989, Pittsburgh, Pennsylvania, United States[doi>10.1145/75199.75222]
Mary Shaw, Heterogeneous design idioms for software architecture, Proceedings of the 6th international workshop on Software specification and design, October 25-26, 1991, Como, Italy
STANDISH, T. A. 1984. An essay on software reuse. IEEE Trans. Softw. Eng. SE-IO, 5 (Sept.), 494-497.
STAUDT, B. J., KRUEGER, C. W., HABERMANN, A. N., AND AMBRIOLA, V. 1986. The GANDALF system reference manuals. Tech. Rep. CMU-CS- 86130, Carnegie-Mellon Univ., Pittsburgh, Penn.
Mark Stefik , Daniel Bobrow, Object-oriented programming: Themes and variations, AI Magazine, v.6 n.4, p.40-62, Winter 1986
TEXAS INSTRUMENTS 1985. The TTL Data Book, Vol. 2. Texas Instruments, Dallas, TeE.
Will Tracz, Software reuse: emerging technology, IEEE Computer Society Press, Los Alamitos, CA, 1988
J S Tseng , B Szymanski , Y Shi , N S Prywes, Real-time software life cycle with the model system, IEEE Transactions on Software Engineering, v.12 n.2, p.358-373, Feb. 1986
Dennis M. Volpano , Richard B. Kieburtz, Software templates, Proceedings of the 8th international conference on Software engineering, p.55-60, August 28-30, 1985, London, England
D. M. Volpano , R. B. Kieburtz, The templates approach to software reuse, Software reusability: vol. 1,  concepts and models, ACM Press, New York, NY, 1989[doi>10.1145/73103.73112]
Richard C. Waters, The programmer's apprentice: a session with KBEmacs, IEEE Transactions on Software Engineering, v.11 n.11, p.1296-1320, Nov. 1985[doi>10.1109/TSE.1985.231880]
WEGNER, P. 1983. Varieties of reusability. In Workshop on Reusability in Programming (Newport, R.I., Sept.). ITT Programming, Stratford, Conn., pp. 30-44. Also in Freeman {1987b}.
Pamela Zave, The operational versus the conventional approach to software development, Communications of the ACM, v.27 n.2, p.104-118, Feb. 1984[doi>10.1145/69610.357982]
P Zave , W Schell, Salient features of and executable specification language and its environment, IEEE Transactions on Software Engineering, v.12 n.2, p.312-325, Feb. 1986
