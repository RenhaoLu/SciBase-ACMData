Ackerman, W. 1982. Data flow languages. IEEE Comput. 15, 2, 15--25.
W. B. Acherman , J. B. Dennis , William B Ackerman, VAL- ORIENTED ALGORITHMIC LANGUAGE, PRELIMINARY REFERENCE MANUAL, Massachusetts Institute of Technology, Cambridge, MA, 1979
Amamiya, M., Hasegawa, R., and Ono, S. 1984. Valid, a high-level functional programming language for data flow machines. Rev. Electric. Comm. Lab. 32, 5, 793--802.
Arvind and Culler, D. E. 1983. The tagged token dataflow architecture (preliminary version). Tech. Rep. Laboratory for Computer Science, MIT, Cambridge, MA.
Arvind , David E. Culler, Dataflow architectures, Annual review of computer science vol. 1, 1986, Annual Reviews Inc., Palo Alto, CA, 1986
Arvind, Culler, D. E., and Maa, G. K. 1988. Assessing the benefits of fine-grain parallelism in dataflow programs. Int. J. Supercomput. Appl. 2, 3, 10--36.
Arvind and Gostelow, K. P. 1977. Some relationships between asynchronous interpreters of a dataflow language. In Proceedings of the IFIP WG2.2 Conference on the Formal Description of Programming Lanugages (St. Andrews, Canada).
Arvind , Kim P. Gostelow , Wil Plouffe, Indeterminacy, monitors, and dataflow, Proceedings of the sixth ACM symposium on Operating systems principles, p.159-169, November 16-18, 1977, West Lafayette, Indiana, USA[doi>10.1145/800214.806559]
Arvind, Gostelow, K. P., and Plouffe, W. 1978. An asynchronous programming language and computing machine, Tech. Rep. TR 114a. University of California, Irvine, Irvine, CA.
Arvind , Rishiyur S. Nikhil , Keshav K. Pingali, I-structures: data structures for parallel computing, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.4, p.598-632, Oct. 1989[doi>10.1145/69558.69562]
K. Arvind , Rishiyur S. Nikhil, Executing a Program on the MIT Tagged-Token Dataflow Architecture, IEEE Transactions on Computers, v.39 n.3, p.300-318, March 1990[doi>10.1109/12.48862]
Arvind and Thomas, R. 1980. I-structures: An efficient data type for functional languages. Tech. Memo 178. Laboratory for Computer Science, MIT, Cambridge, MA.
E. A. Ashcroft , W. W. Wadge, Lucid, a nonprocedural language with iteration, Communications of the ACM, v.20 n.7, p.519-526, July 1977[doi>10.1145/359636.359715]
Ed Ashcroft , Bill Wadge, Some common misconceptions about Lucid, ACM SIGPLAN Notices, v.15 n.10, p.15-26, October 1980[doi>10.1145/947727.947728]
Mikhail Auguston , Alfredo Delgado, Iterative Constructs in the Visual Data Flow Language, Proceedings of the 1997 IEEE Symposium on Visual Languages (VL '97), p.152, April 23-26, 1997
John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
Barahona, P. and Gurd, J. R. 1985, Simulated performance of the Manchester multi-ring dataflow machine. In Proceedings of the 2nd ICPC (Sept.). 419--424.
Ed Baroth , Chris Hartsough, Visual programming in the real world, Visual object-oriented programming: concepts and environments, Manning Publications Co., Greenwich, CT, 1995
Massimo Bernini , Mauro Mosconi, VIPERS: a data flow visual programming environment based on the Tcl language, Proceedings of the workshop on Advanced visual interfaces, p.243-245, June 01-04, 1994, Bari, Italy[doi>10.1145/192309.192361]
Shuvra S. Battacharyya , Edward A. Lee , Praveen K. Murthy, Software Synthesis from Dataflow Graphs, Kluwer Academic Publishers, Norwell, MA, 1996
Lubomir Bic, A process-oriented model for efficient execution of dataflow programs, Journal of Parallel and Distributed Computing, v.8 n.1, p.42-51, Jan. 1990[doi>10.1016/0743-7315(90)90067-Y]
Lubomir Bic , Guang R. Gao , Jean-Luc Gaudiot, Advanced Topics in Dataflow Computing and Multithreading, IEEE Computer Society Press, Los Alamitos, CA, 1995
Bohm, W., Najjar, W. A., Shankar, B., and Roh, L. 1993. An evaluation of coarse grain dataflow code generation stretegies. In Proceedings of the Working Conference on Massively Parallel Programming Models (Berlin, Germany).
Buck, J. and Lee, E. A. 1995. The token flow model. In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 267--290.
Margaret M. Burnett , Marla J. Baker , Carisa Bohus , Paul Carlson , Sherry Yang , Pieter van Zee, Scaling Up Visual Programming Languages, Computer, v.28 n.3, p.45-54, March 1995[doi>10.1109/2.366157]
D. Comte , G. Durrieu , O. Gelly , A. Plas , J. C. Syre, Parallelism, control and synchronization expression in a single assignment language, ACM SIGPLAN Notices, v.13 n.1, p.25-33, January 1978[doi>10.1145/953428.953431]
Cox, P., Giles, F., and Pietrzykowski, T. 1989. Prograph: A step towards liberating programming from textual conditioning. In Procedings of the IEEE Workshop on Visual Languages. 150--156.
P. T. Cox , T. J. Smedley, A visual language for the design of structured graphical objects, Proceedings of the 1996 IEEE Symposium on Visual Languages, p.296, September 03-06, 1996
Culler, D. E., Goldstein, S. C., Schauser, K. E., and von Eicker, T. 1995. Empirical study of a dataflow language on the CM-5. In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 187--210.
Davis, A. L. 1974. Data driven nets---A class of maximally parallel, output-functional program schemata. Tech. Rep. IRC Report. Burroughs, San Diego, CA.
A. L. Davis, The architecture and system method of DDM1: A recursively structured Data Driven Machine, Proceedings of the 5th annual symposium on Computer architecture, p.210-215, April 03-05, 1978[doi>10.1145/800094.803050]
Davis, A. L. 1979. DDN's---a low level program schema for fully distributed systems. In Proceedings of the 1st European Conference on Parallel and Distributed Systems (Toulouse, France). 1--7.
Davis, A. L. and Keller, R. M. 1982. Data flow program graphs. IEEE Comput. 15, 2, 26--41.
Davis, A. L. and Lowder, S. A. 1981. A Sample management application program in a graphical data-driven programming language. In Digest of Papers Compcon Spring, February 1981. 162--165.
M. D. de Jong , C. L. Hankin, Structured data flow programming, ACM SIGPLAN Notices, v.17 n.8, p.18-27, August 1982[doi>10.1145/947941.947942]
Dennis, J. 1977. A Language Design for Structured Concurrency. The Design and Implementation of Programming Languages. Lecture Notes in Computer Science, vol. 54. Springer-Verlag, Berlin, Germany, 23--42.
J. B. Dennis, First version of a data flow procedure language, Programming Symposium, Proceedings Colloque sur la Programmation, p.362-376, April 09-11, 1974
Dennis, J. B. 1980. Data flow supercomputers. IEEE Comput. 13, 11 (Nov.), 48--56.
Jack B. Dennis , David P. Misunas, A preliminary architecture for a basic data-flow processor, Proceedings of the 2nd annual symposium on Computer architecture, p.126-132, January 20-22, 1975[doi>10.1145/642089.642111]
Gajski, D. D., Padua, D. A., Kucle, D. J., and Kuh, R. H. 1982. A second opinion on data-flow machines and languages. IEEE Comput. 15, 2, 58--69.
Guang R. Gao , Zaharias Paraskevas, Compiling for dataflow software pipelining, Selected papers of the second workshop on Languages and compilers for parallel computing, p.275-306, May 1990, Urbana, Illinois, USA
David Gelernter , Nicholas Carriero, Coordination languages and their significance, Communications of the ACM, v.35 n.2, p.97-107, Feb. 1992[doi>10.1145/129630.129635]
Gelly, O. 1976. LAU software system: A high-level data-driven language for parallel processing. In Proceedings of the International Conference on Parallel Processing (New York, NY).
Ghittori, E., Mosconi, M., and Porta, M. 1998. Designing and testing new programming constructs in a data flow VL. Tech. Rep. UniversitÃ  di Pavia, Pavia, Italy.
Glauert, J. R. W. 1978. A single assignment language for data flow computing, Master's thesis. University of Manchester, Manchester, U.K.
Green, T. R. G. and Petre, M. 1996. Usability analysis of visual programming environments: A "Cognitive Dimensions" Framework. J. Vis. Lang. Comput. 7, 131--174.
Gurd, J. R. and Bohm, W. 1987. Implicit parallel processing: SISAL on the Manchester dataflow computer. In Proceedings of the IBM-Europe Institute on Parallel Processing (Aug., Oberlech, Austria).
C. L. Hankin , H. W. Glaser, The data flow programming language CAJOLE - an informal introduction, ACM SIGPLAN Notices, v.16 n.7, p.35-44, July 1981[doi>10.1145/947864.947867]
Harvey, N. and Morris, J. 1993. NL: A general purpose visual dataflow language, Tech. Rep. University of Tasmania, Tasmania, Australia.
Harvey, N. and Morris, J. 1996. NL: A parallel programming visual language. Australian Comput. J. 28, 1, 2--12.
Robert Helsel, Cutting your test development time with HP Vee: an iconic programming language, Prentice-Hall, Inc., Upper Saddle River, NJ, 1994
Hils, D. D. 1992. Visual languages and computing survey: Data flow visual programming languages. J. Vis. Lang. Comput. 3, 1, 69--101.
A. R. Hurson , Ben Lee , Behrooz Shirazi, Hybrid Structure: A Scheme for Handling Data Structures in a Data Flow Environment, Proceedings of the Parallel Architectures and Languages Europe, Volume I: Parallel Architectures, p.323-340, June 12-16, 1989
R. A. Iannucci, Toward a dataflow/von Neumann hybrid architecture, Proceedings of the 15th Annual International Symposium on Computer architecture, p.131-140, May 30-June 02, 1988, Honolulu, Hawaii, USA
Iwata, M. and Terada, H. 1995. Multilateral diagrammatical specification environment based on data-driven paradigm. In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 103--112.
Jagannathan, R. 1995. Coarse-Grain Dataflow Programming of Conventional Parallel Computers. In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 113--129.
Kahn, G. 1974. The semantics of a simple language for parallel programming. In Proceedings of the IFIP Congress 74 (Amsterdam, The Netherlands). 471--475.
Karp, R. and Miller, R. 1966. Properties of a model for parallel computations: Determinacy, termination, queueing. SIAM J. 14, 1390--1411.
Keller, R. M. 1985. Rediflow architecture prospectus, Tech. Rep. No. UUCS-85-105. Department of Computer Science, University of Utah, Salt Lake City, Utah.
Keller, R. M. and Yen, W. C. J. 1981. A graphical approach to software development using function graphs. In Digest of Papers Compcon Spring, February 1981. 156--161.
Kimura, T. and Mclain, P. 1986. Show and Tell user's manual. Tech. Rep. WUCS-86-4. Department of Computer Science, Washington University, St Louis, MO.
Kiper, J., Howard, E., and Ames, C. 1997. Criteria for evaluation of visual programming languages. J. Vis. Lang. Comput. 8, 2, 175--192.
Paul R. Kosinski, A straightforward denotational semantics for non-determinate data flow programs, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.214-221, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512783]
Paul R. Kosinski, A data flow language for operating systems programming, ACM SIGPLAN Notices, v.8 n.9, p.89-94, September 1973[doi>10.1145/390014.808289]
LabView. 2000. Lab View User Manual. National Instruments, Austin, TX.
Lee, B. and Hurson, A. R. 1993. Issues in dataflow computing. Adv. in Comput. 37, 285--333.
Ben Lee , A. R. Hurson, Dataflow Architectures and Multithreading, Computer, v.27 n.8, p.27-39, August 1994[doi>10.1109/2.303620]
Lee, E. 1997. A denotational semantics for dataflow with firing. Memorandum UCB/ERL M97/3. Electronics Research Laboratory, University of California, Berkeley, Berkeley, CA.
Edward Ashford Lee , David G. Messerschmitt, Static scheduling of synchronous data flow programs for digital signal processing, IEEE Transactions on Computers, v.36 n.1, p.24-35, Jan. 1987[doi>10.1109/TC.1987.5009446]
Lee, E. and Parks, T. 1995. Data-flow process networks. Proc. IEEE. 83, 5, 773--799.
McGraw, J., Skedzielewski, S. et al. 1983. SISAL---Streams and Iteration in a Single Assignment Language Reference Manual (Version 1.0). Livermore National Laboratory, Livermore, CA.
Morrison, J. P. 1994. Flow-Based Programming: A New Approach to Application Development. van Nostrand Reinhold, New York, NY.
M. Mosconi , M. Porta, Iteration constructs in data-flow visual programming languages, Computer Languages, v.26 n.2-4, p.67-104, July, 2000[doi>10.1016/S0096-0551(01)00009-1]
Walid A. Najjar , Edward A. Lee , Guang R. Gao, Advances in the dataflow computational model, Parallel Computing, v.25 n.13-14, p.1907-1929, Dec. 1999[doi>10.1016/S0167-8191(99)00070-8]
Walid A. Najjar , Lucas Roh , A. P. Wim BÃ¶hm, An evaluation of medium-grain dataflow code, International Journal of Parallel Programming, v.22 n.3, p.209-242, June 1994[doi>10.1007/BF02577733]
R. S. Nikhil, Can dataflow subsume von Neumann computing?, Proceedings of the 16th annual international symposium on Computer architecture, p.262-272, April 1989, Jerusalem, Israel[doi>10.1145/74925.74955]
Ning, Q. and Gao, G. R. 1991. Loop storage optimization for Dataflow machines. ACAPS Tech. Memo 23. School of Computer Science, McGill University, Montreal, P. Q., Canada.
Gregory M. Papadopoulos, Implementation of a general-purpose dataflow multiprocessor, MIT Press, Cambridge, MA, 1991
Papadopoulos, G. M. and Traub, K. R. 1991. Multithreading: A revisionist view of dataflow architectures. MIT Memo CSG-330. MIT, Cambridge, MA.
Plaice, J. 1991. RLUCID, A General Real-Time Data-Flow Language. Lecture Notes in Computer Science, vol. 571. Springer-Verlag, Berlin, Germany, 363--374.
Rasure, J. and Williams, C. 1991. An integrated data flow visual language and software development environment. J. Vis. Lang. Comput. 2, 217--246.
Richardson, C. 1981. Manipulator control using a data-flow machine. Doctoral dissertation. University of Manchester, Manchester, U.K.
S. Sakai , y. Yamaguchi , K. Hiraki , Y. Kodama , T. Yuba, An architecture of a dataflow single chip processor, Proceedings of the 16th annual international symposium on Computer architecture, p.46-53, April 1989, Jerusalem, Israel[doi>10.1145/74925.74931]
Serot, J., Quenot, G., and Zavidovique, B. 1995. A visual dataflow programming environment for a real time parallel vision machine. J. Vis. Lang. Comput. 6, 4, 327--347.
Shizuki, B., Toyoda, M., Shibayama, E., and Takahashi, S. 2000. Smart browsing among multiple aspects of data-flow visual program execution, using visual patterns and multi-focus fisheye views. J. Vis. Lang. Comput. 11, 5, 529--548.
A. SchÃ¼rr, BDL - A Nondeterministic Data Flow Programming Language with Backtracking, Proceedings of the 1997 IEEE Symposium on Visual Languages (VL '97), p.394, April 23-26, 1997
Silc, J., Robic, B., and Ungerer, T. 1998. Asynchrony in parallel computing: from dataflow to multithreading. Parallel Distrib. Comput. Pract. 1, 1, 3--30.
Sterling, T., Kuehn, J., Thistle, M., and Anastasis, T. 1995. Studies on Optimal Task Granularity and Random Mapping. In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 349--365.
Tanimoto, S. 1990. VIVA: A visual language for image processing. J. Vis. Lang. Comput. 1, 127--139.
Masashi Toyoda , Buntarou Shizuki , Shin Takahashi , Satoshi Matsuoka , Etsuya Shibayama, Supporting Design Patterns in a Visual Parallel Data-flow Programming Environment, Proceedings of the 1997 IEEE Symposium on Visual Languages (VL '97), p.76, April 23-26, 1997
Philip C. Treleaven , David R. Brownbridge , Richard P. Hopkins, Data-Driven and Demand-Driven Computer Architecture, ACM Computing Surveys (CSUR), v.14 n.1, p.93-143, March 1982[doi>10.1145/356869.356873]
Treleaven, P. C. and Lima, I. G. 1984. Future computers: Logic, data flow, â¦, control flow? IEEE Comput. 17, 3 (Mar.), 47--58.
Arthur H. Veen, Dataflow machine architecture, ACM Computing Surveys (CSUR), v.18 n.4, p.365-396, Dec. 1986[doi>10.1145/27633.28055]
L. Verdoscia , R. Vaccaro, A high-level dataflow system, Computing, v.60 n.4, p.285-305, 1998[doi>10.1007/BF02684377]
William W. Wadge , Edward A. Ashcroft, LUCID, the dataflow programming language, Academic Press Professional, Inc., San Diego, CA, 1985
Wail, S. F. and Abramson, D. 1995. Can Dataflow Machines be Programmed with an Imperative Language? In Advanced Topics in Dataflow Computing and Multithreading. IEEE Computer Society Press, Los Alamitos, CA, 229--265.
Watson, I. and Gurd, J. R. 1979. A prototype data flow computer with token labelling. In Proceedings of the National Computer Conference. 623--628.
Weng, K. S. 1975. Stream oriented computation in recursive data-flow schemas. Tech. Rep. 68. Laboratory for Computer Science, MIT, Cambridge, MA.
Paul G. Whiting , Robert S. V. Pascoe, A History of Data-Flow Languages, IEEE Annals of the History of Computing, v.16 n.4, p.38-59, December 1994[doi>10.1109/85.329757]
Whitley, K. 1997. Visual programming languages and the empirical evidence for and against. J. Vis. Lang. Comput. 8, 1, 109--142.
Yu, Y. J. and D'hollander, E. H. 2001. Loop parallelization using the 3D iteration space visualizer. J. Vis. Lang. Comput. 12, 2, 163--181.
