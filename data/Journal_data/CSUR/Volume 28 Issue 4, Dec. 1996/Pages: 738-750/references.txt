BALZER, R. 1969. EXDAMS--Extendable Debugging and Monitoring System. In 1919 Spring Joint Computer Conference. AFIPS Press.
V R Basili , R W Selby , D H Hutchens, Experimentation in software engineering, IEEE Transactions on Software Engineering, v.12 n.7, p.733-743, July 1986
CLARKE, L.A. 1976. A system to generate test data and symbolically execute programs. IEEE Trans. Softw. Eng. SE-2, 3 (Sept.), 215- 222.
DEMILLO, R., LIPTON, R., AND SAYWARD, F. 1979. Program mutation: A new approach to program testing. InfoTech State of the Art Report: Software Testing 2, 107-128.
Matthew B. Dwyer , Lori A. Clarke, Data flow analysis for verifying properties of concurrent programs, Proceedings of the 2nd ACM SIGSOFT symposium on Foundations of software engineering, p.62-75, December 06-09, 1994, New Orleans, Louisiana, USA[doi>10.1145/193173.195295]
M. E. Fagan, Design and code inspections to reduce errors in program development, IBM Systems Journal, v.38 n.2-3, p.258-287, 1999[doi>10.1147/sj.382.0258]
Susan Gerhart , Dan Craigen , Ted Ralston, Experience with Formal Methods in Critical Systems, IEEE Software, v.11 n.1, p.21-28, January 1994[doi>10.1109/52.251198]
John V. Guttag , James J. Horning, Larch: languages and tools for formal specification, Springer-Verlag New York, Inc., New York, NY, 1993
HOWDEN, W. 1976. Reliability of the path analysis testing strategy. IEEE Trans. Softw. Eng. SE-2, 3 (Sept.), 280-215.
William E Howden, Functional program testing and analysis, McGraw-Hill, Inc., New York, NY, 1986
James C. King, A new approach to program testing, Proceedings of the international conference on Reliable software, p.228-233, April 21-23, 1975, Los Angeles, California[doi>10.1145/800027.808444]
Barbara Ann Kitchenham, Evaluating software engineering methods and tool—part 2: selecting an appropriate evaluation method—technical criteria, ACM SIGSOFT Software Engineering Notes, v.21 n.2, p.11-15, March 1996[doi>10.1145/227531.227533]
LASKI, J. AND KOREL, B. 1983. A data flow oriented program testing strategy. IEEE Trans. Softw. Eng. SE-9, 3 (May), 347-354.
LUCKHAM, D. AND vONHENKE, F. 1985. An overview of ANNA, a specification language for Ada. IEEE Softw. 2, 2 (March), 9-24.
MCCABE, T. 1976. A complexity measure. IEEE Trans. Softw. Eng. SE-1, 308-320.
NTAFOS, S.C. 1984. On required element testing. IEEE Trans. Softw. Eng. SE-IO, 6 (Nov.), 795-803.
Leon Osterweil, Integrating the testing, analysis and debugging of programs, Proc. of a symposium on Software validation: inspection-testing-verification-alternatives, p.73-102, October 1984, Darmstadt, Germany
OSTERWEIL, L. J. AND FOSDICK, L. 1976. DAVE--a validation, error detection, and documentation system for Fortran programs. Softw. Pract. Exper. 6, 4 (Oct.), 473-486.
PFLEEGER, S.L. 1995. Experimental design and analysis in software engineering. Ann. Softw. Eng. 1, 1, 219-253.
Sandra Rapps , Elaine J. Weyuker, Selecting Software Test Data Using Data Flow Information, IEEE Transactions on Software Engineering, v.11 n.4, p.367-375, April 1985[doi>10.1109/TSE.1985.232226]
Debra J. Richardson, TAOS: Testing with Analysis and Oracle Support, Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis, p.138-153, August 17-19, 1994, Seattle, Washington, USA[doi>10.1145/186258.187158]
RYDER, B. 1974. The PFORT verifier. Softw. Pract. Exper. 4, 359-378.
J. M. Spivey, Understanding Z: a specification language and its formal semantics, Cambridge University Press, New York, NY, 1988
STUCKI, L. 1973. Automatic generation of selfmetric software. In Record of the 1973 IEEE Symposium on Software Reliability (April), IEEE Computer Society, Washington, DC, 94-100.
WATSON, A. AND MCCABE, T. 1996. Structured testing: A testing methodology using the cyclomatic complexity metric. National Institute of Standards and Technology, Gaithersburg, MD, (NIST) Special Publication, 500-235.
