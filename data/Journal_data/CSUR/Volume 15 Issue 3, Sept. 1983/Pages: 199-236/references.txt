Alfred V. Aho , John E. Hopcroft, The  Design and Analysis of Computer Algorithms, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1974
C. N. Alberga , A. L. Brown , G. B. Leeman, Jr. , M. Mikelsons , M. N. Wegman, A program development tool, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.92-104, January 26-28, 1981, Williamsburg, Virginia[doi>10.1145/567532.567543]
Jacques J. Arsac, Langages sans Etiquettes et Transformations de Programmes, Proceedings of the 2nd Colloquium on Automata, Languages and Programming, p.112-128, July 29-August 02, 1974
ARSAC, J. 1977a. La Construction de Programmes Structures. Dunod, Paris.
ARSAC, J. 1977b. Emploi de mi~thodes constructives en programmation. Un dossier: la fonction d'Ackermann. RAIRO Theor. Comput. Sci. 11, 2, 91- 112.
ARSAC, J. 1978. An interactive program manipulation system for non naive users. LITP Res. Rep. 78-10, Institut de Programmation, Paris.
Jacques J. Arsac, Syntactic source to source transforms and program manipulation, Communications of the ACM, v.22 n.1, p.43-54, Jan. 1979[doi>10.1145/359046.359057]
ARSAC, J., AND KODRAVOrg, Y. 1979. Some methods for transformation of recursive procedures into iterative ones. LITP Res. Rep. 79-2, institut de Programmation, Paris.
J. Arsac , Y. Kodratoff, Some Techniques for Recursion Removal from Recursive Functions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.2, p.295-322, April 1982[doi>10.1145/357162.357171]
BALZER, R. 1973. A global view of automatic programming. In Proceedings of the 3rd International Joint Conference on Artificial Intelligence (Stanford, Calif.), pp. 494-499.
BALZER, R. 1977. Correct and efficient software implementation via semi-automatic transformations. USC/ISI Internal Rep., Information Science Institute, Univ. of Southern California, Marina del Rey.
BALZER, R. 1981a. Final report on GIST. Information Science Institute, Univ. of Southern California, Marina del Rey.
BALZER, R. 1981b. Transformational implementation: An example. IEEE Trans. Softw. Eng. SE- 7, 1, 3-14.
Robert Balzer , Neil Goldman , David Wile, On the Transformational Implementation approach to programming, Proceedings of the 2nd international conference on Software engineering, p.337-344, October 13-15, 1976, San Francisco, California, USA
BALZER, R., GOLDMAN, N., AND WILE, D. 1980. Informality in program specifications. IEEE Trans. Softw. Eng. SE-4, 2, 94-103.
Robert M. Balzer , Neil M. Goldman , David S. Wile, Operational specification as the basis for rapid prototyping, ACM SIGSOFT Software Engineering Notes, v.7 n.5, p.3-16, December 1982[doi>10.1145/1006258.1006261]
David Robbins Barstow, Automatic construction of algorithms and data structures using a knowledge base of programming rules., Stanford University, Stanford, CA, 1978
David Barstow, A knowledge base organization for rules about programming, ACM SIGART Bulletin[doi>10.1145/1045343.1045353]
BARSTOW, D. R. 1977c. A knowledge-based system for automated program construction. Proceedings of the 5th International Join~ Conference on Artificial Intelligence (Cambridge, Mass.). M.I.T., Cambridge, Mass., pp. 382-388.
BARS?OW, D. R. 1979a. An experiment in knowledge-based automatic programming. Artif lnte!{ 12, 73-119.
B^RSTOW, D. R. 1979b. The roles of knowledge and deduction in program synthesis. In Proceedings of the 6th International Joint Conference on Arti{icial Intelligence (Tokyo, Aug. 20-23). International Joint Council on Artificial {nte{{igence, Inc., Stanford, Calif., pp. 37-43.
BARSTOW, D. R. 1979c. On convergence toward a data base of programming rules. Paper distributed at 2ad Program Trans{ormation Workshop (Cambridge, Mass., Sept.).
David R. Barstow , Elaine Kant, Observations on the interaction between coding and efficiency knowledge in the PSI Program Synthesis System, Proceedings of the 2nd international conference on Software engineering, p.19-31, October 13-15, 1976, San Francisco, California, USA
Friedrich L. Bauer, Programming as an evolutionary process, Language Hierarchies and Interfaces, International Summer School, p.153-182, July 23-August 02, 1975
Friedrich Ludwig Bauer , H. Woessner, Algorithmic Language and Program Development, Springer-Verlag New York, Inc., Secaucus, NJ, 1982
BAUER, F. L., PARTSCH, H., PEPPER, P., AND WOSSNSR, H. 1977. Notes on the project CIP: Outline of a transformation system. TUM-INFO- 7729, Institut ftir Informatik, Technische Univ. Miinchen, Munich, West Germany.
F. L. Bauer , M. Broy , R. Gnatz , W. Hesse , B. Krieg-Brückner , H. Partsch , P. Pepper , H. Wössner, Towards a wide spectrum language to support program specification and program development, ACM SIGPLAN Notices, v.13 n.12, p.15-24, December 1978[doi>10.1145/954587.954588]
BAUER, F. L., BROY, M., DOSCH, W., GEISELBRECH- TINGER, F., HESSE, W., GNATZ, 'R., KRIEG- BROCKNER, B., LAUT, A., MATZNER, T., MOLLER, B., PARTSCH, H., PEPPER, P., SAMEL- SON, K., WmS{NG, M., ANO W0SSNEa, H. 1981a. Report on a wide spectrum language for program specification and development. TUM- 18104, Institut for Informatik, Technische Univ. Mtinchen, Munich, West Germany.
BAUER, F. L., BROY, M., DOSCH, W., GNATZ, R., KmF. G-BROCKNF. a, B., LAUT, A., LUCKMANN, M., MATZNER, T., MOLLER, B., PARTSCH, H., PEPPER P2, SAMELSON, K., STEINBR1DGGEN, R., WmSING, M., AND WOSSNEa, H. 1981b. Programming in a wide spectrum language: A collection of examples. Sci. Comput. Program. 1, 73- 114.
BECKMANN, L., HARALDSSON, A., OSKARSSON, 0., AND SANDEWALL, E. 1976. A partial evaluator and its use as a programming tool. Artif Intell. 7, 319-357.
BIDOIT, M., GRESSE, C., AND GUIHO, G. 1979. A system which synthesizes array'manipulating programs from specifications. In Proceedings o{ 6th International Joint Conference on Artificial Intelligence (Tokyo, Aug. 20-23). International Joint Council on Artificial Intelligence, Inc., Stanford, Calif., pp. 63-65.
BXERMANN, A. W. 1976. Approaches to automatic programming. In Advances in Computers, vol. 15. Academic Press, New York, pp. 1-63.
R. S. Bird, Tabulation Techniques for Recursive Programs, ACM Computing Surveys (CSUR), v.12 n.4, p.403-417, Dec. 1980[doi>10.1145/356827.356831]
BOYLE, J. M. 1970. A transformational component for programming language grammar. Pep. ANL- 7690, Argonne National Laboratory, Argonne, Ill.
BOYLE, J. M. 1976. An introduction to transformation-assisted multiple program realization (TAMPR) system. In Cooperative Development of Mathematical Software, J. R. Bunch, Ed. Dept. of Mathematics, Univ. of California, San Diego.
James M. Boyle, Extending reliability (Extended Abstract>: Transformational tailoring of abstract mathematical software, Proceedings of the SIGNUM Conference on the Programming Environment for Development of Numerical Software, p.57-60, October 01-01, 1978[doi>10.1145/800208.806429]
BOYLE, J. M. 1980. Software adaptability and program transformation. In Software Engineering, H. Freeman and P. M. Lewis, Eds. Academic Press, New York, pp. 75-93.
BOYLE, J. M. 1981. Practical applications of program transformation. Unpublished manuscript.
BOYLE, J. M., AND DRITZ, K. W. 1974. An automated programming system to facilitate the development of quality mathematical software. In Information Processing 74. Elsevier North-Holland, New York, pp. 542-546.
BOYLE, J. M., AND MATZ, M. 1977. Automating multiple program realizations. In Proceedings of the MRI Symposium. Computer Software Engineering, vol. 24. Polytechnic Press, Brooklyn, N.Y., pp. 421-456.
BRASS, B., ERHARD, F., HORSCH, A., RIETHMAYER, H.-O., ^No STE{NBRO(}(~EN, R. 1982. CIP-S: An instrument for program transformation and rule generation. TUM-I8211, lnstitut ffir Informatik, Technische Univ. M/inchen, Munich, West Germany.
BROY, M., PARTSCH, H., PEPPER, P., AND WIRSING, M. 1980. Semantic relations in programming languages. In Information Processing 80, S. H. Lavington, Ed. Elsevier North-Holland, New York, pp. 101-106.
BRoY, M., PEeeEa, P., AND Wms}NG, M. 1982. On the algebraic definition of programming Innguages. TUM-I8204, Institut for lnformatik, Technishe Univ. M'tmchen, Munich, West Germany.
BURSTALL, R. M. 1977. Design considerations for a functional programming language. In Proceedings of Infotech State of the Art Conference (Copenhagen). Infotech Ltd., Maidenhead, UK.
R. M. Burstall , John Darlington, Some transformations for developing recursive programs, Proceedings of the international conference on Reliable software, p.465-472, April 21-23, 1975, Los Angeles, California[doi>10.1145/800027.808470]
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
BURSTALL, R. M., AND FEATHER, M. S. 1978. Program development by transformation: An overview. In Les {ondements de la progratnmation. Proceedings of Toulo~ CREST Course on Programrning, M. Armirchahy and D. Neel, Eds. IR1A-SEFI, Le Chesnay, France.
BURSTALL, R. M., McQuEEN, D. B., ANO SANNELLA, D. T. 1980. HOPE: An experimental applicative language. Internal Rep., Dept. of Computer Science, Edinburgh Univ., Scotland.
CHEATHAM, T. E., JR. 1981. Overview of the Haryard program development system. In Software Engineering Environments, H. H/inke, Ed.
T. E. Cheatham, Jr. , Ben Wegbreit, On a laboratory for the study of automating programming, Proceedings of ACM conference on Proving assertions about programs, p.208-211, January 06-07, 1972, Las Cruces, New Mexico, USA[doi>10.1145/800235.807087]
CHEATHAM, T. E., JR., HOLLOWAY, G. H., ANO TOWNLEY, J.,A. 1979a. Symbolic evaluation and the analysis of programs. IEEE Trans. Soft. Eng. SE-5, 4, 402-417.
Thomas E. Cheatham, Jr. , Judy A. Townley , Glenn H. Holloway, A system for program refinement, Proceedings of the 4th international conference on Software engineering, p.53-62, September 17-19, 1979, Munich, Germany
Thomas E. Cheatham, Jr. , Glenn H. Holloway , Judy A. Townley, Program refinement by transformation, Proceedings of the 5th international conference on Software engineering, p.430-437, March 09-12, 1981, San Diego, California, USA
CHVSHO, T. 1980. A good~ogram = a structured program + optimization commands. In Informstion Processing 80, $. H. Lavington, Ed. Elsevier North-Holland, New York, pp. 269-274.
Donald Cohen , William Swartout , Robert Balzer, Using symbolic execution to characterize behavior, ACM SIGSOFT Software Engineering Notes, v.7 n.5, p.25-32, December 1982[doi>10.1145/1006258.1006263]
COUSIN~U, G. 1976. Transformations de programmes iteratifs. In Programmation, B. Robinet, Ed. Dunod, Paris. pp. 53-74.
DARLINGTON, J. 1972. A semantic approach to automatic program improvement. Ph.D. dissertalion, Dept. of Machine Intelligence, Univ. of Edinburgh, Scotland.
DARLINGTON, J. 1975. Applications of program transformation to program synthesis. In Proceedings of International Symposium on Proving and Improving Programs (Arc-et-Senans, France, July 1-3). IRIA, Le Chesnay, France, pp. 133- 144.
DARLINGTON, J. 1978. A synthesis of several sort programs. Acts Inf. 11, 1, 1-30.
DM~LIN6TON, J. 1979. Program transformation: An introduction and survey. Comput. Bull. (Dec.), 22-24.
DARLINGTON, J. 1981a. An experimental program transformation and synthesis system. Artif. Intell. 16, 1-46.
DARLIN(~TON, J. 1981b. The structured description of algorithm derivations. In Algorithmic Languages, J. W~ deBakker and H. van Vliet, Eds. Elsevier North-Holland, New York, pp. 221-250.
DARL{NCTON, J., AND BURSTALL, R. M. 1973. A system which automatically improves programs. In Proceedings of 3d International Joint Conference on Artificial Intelligence (Stanford, Calif.). SRI, Menlo Park, Calif., pp. 479-485.
DARLINGTON, J., AND BORSTALL, R. M. 1976. A system which automatically improves programs. Acta Inf. 6, 41-60.
DARLINGTON, J., AND FEATHER, M. 1979. A transformational approach to modification. Paper presented at the 25th meeting of IFIP WG 2.1 (Summit, N.J., Apr.). Available from authors.
DAvis, R., AND KING, J. 1975. An overview of production, systems. STAN-CS-75-524,-Dept. of Computer Science, Stanford Univ., Stanford, Calif.
DE~, E. 1980. A transformational approach to the development and unification of programs in a very high level language. Courant Computer Science Rep. 22, Courant Institute, New York Univ., New York.
DESK, E. 1981. A transformational derivation of a parsing algorithm in a high-level language. IEEE Trans. So/tw. Eng. SE-7, 1, 23-31.
oE RIW~:RES, J. 1980. The design of an interactive program manipulation system. Master's thesis, Dept. of Computer Science, Univ. of Toronto, Canada.
DERSHOWlTZ, N. 1980. The evolution of programs. Ph.D. dissertation, Dept. of Applied Mathematies, Weizmann Institute of Science, Rehovot, israel; available as Rep. R-80-1017, Dept. of Compurer Science, Univ. of Illinois, Urbana I11.
Nachum Dershowitz, The evolution of programs: Program abstraction and instantiation, Proceedings of the 5th international conference on Software engineering, p.79-88, March 09-12, 1981, San Diego, California, USA
DERSHOWITZ, N., A~O MANNA, Z. 1975. On automating structured programming. In Proceedings of International Symposium on Proving and Iraproving Programs (Arc-et-Senan, France, July 1- 3). IRIA, Le Chesnay, France.
DERSHOWITZ, N., ANO MANNA, Z. 1977. The evolution of programs: Automatic program modification. IEEE Trans. Softw. Eng. SE~3, 6, 377-385.
Robert B. K. Dewar , Arthur Grand , Ssu-Cheng Liu , Jacob T. Schwartz , Edmond Schonberg, Programming by Refinement, as Exemplified by the SETL Representation Sublanguage, ACM Transactions on Programming Languages and Systems (TOPLAS), v.1 n.1, p.27-49, July 1979[doi>10.1145/357062.357064]
D~WAR, R. B. K., SHARIR, M., AND WEIXELBAUM, E. 1979b. On transformational construction of garbage collection algorithms. Paper presented at the 26th meeting of IFIP WG 2.1 (Brussels, Dec.). Available from authors.
DIJKSTRA, E. W. 1976a. Why naive transformation systems are unlikely to work. EWD-636, privately circulated manuscript.
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
DONZEAU-GOUGE, V., HUET, G., KAHN, G., LANG, B., AND LEVY, J. J. 1975. A structure oriented program editor: A first step towards computer assisted programming. In Proceedings of International Computing Symposium 1975 (Antibes, France). Also, Lab. Rep. 114, IRiA, Le Chesnay, France.
DONZEAU-GOUGE, V., HUET, G., KAHN, G., AND L^NG, B. 1980. Programming environments based on structured editors: The MENTOR Experience. Res. Rep. 26, INRIA, Le Chesnay, France.
ECL 1974. ECL programmer's manual. TR-23-74, Center for Research in Computing Technology, Harvard Univ., Cambridge, Mass.
ERHARO, F. 1981. Programmtransformation im CIP System. Notizen zum interaktiven Programmieren 6, GI Fachausschuss 2, GI, Bonn, West Germany.
EmCKSON, R. W., Ed. 1981. AFFIRM collected papets. Information Science Institute, Univ. Southern California, Marina del Rey.
ERSHOV, A. P. 1978. On the essence of compilation. In Proceedings of IFIP Working Conference on Formal Description o/Programming Concepts (St. Andrews, Canada, 1977), E. J. Neuhold, Ed. Elsevier North-Holland, New York, pp. 391--420.
ERSUOV, A. P. 1982. Mixed computation: Potential applications and problems for study. Theor. Comput. Sci. 18, 41-67.
FEATHr. R, M. S. 1978a. ZAP program transformation system: Primer and user manual. Res. Rep. 54, Dept. of Artificial Intelligence, Univ. of Edinburgh, Scotland.
FEATHER, M. S. 1978b. Program transformation applied to the telegram problem. In Program Transformations, B. Robinet, Ed. Dunod, Paris, pp. 173-186.
FF_~THEa, M. S. 1979. A program transformation system. Ph.D. dissertation, Univ. of Edinburgh, Scotland.
Martin S. Feather, Mappings for rapid prototyping, ACM SIGSOFT Software Engineering Notes, v.7 n.5, p.17-24, December 1982[doi>10.1145/1006258.1006262]
Martin S. Feather, A System for Assisting Program Transformation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.1, p.1-20, Jan. 1982[doi>10.1145/357153.357154]
Stephen Frank Fickas, Automating the transformational development of software, University of California, Irvine, 1982
GERH~?, S. L. 1980. Complete and recursion induction in current AFFIRM. Affirm-Memo-33- SLG, Information Science Institute, Univ. Southern California, Marina del Rey.
GERUART, S. L., AND WILR, D.S.'1979. The DELTA experiment: Specification and verification of a multiple-user file updating module. In Proceedings of Specifications of Reliable Software Con{erence (Cambridge, Mass., Apr.). IEEE, New York, pp. 198-211.
GERRART, S. L., MUSSER, D. R., THOMPSOn, D. H., BAKER, D. A., BATES, R. L., ERICKSON, R. W., LO~OON, R. L., TAYLOR, D. G., ANO W~re, D. S. 1980. On overview of AFFIRM: A specification and verification system. In Information Processing 80, S. H. Lavington, Ed. Elsevier North- Holland, New York, pp. 343-347.
GOAD, C. 1982. Automatic construction of special purpose programs. Rep. STAN-CS-82-897, Dept. of Computer Science, Stanford Univ., Stanford, Calif.
Neil M. Goldman , David S. Wile, A Relational Data Base Foundation for Process Specification, Proceedings of the 1st International Conference on the Entity-Relationship Approach to Systems Analysis and Design, p.413-432, January 1980
GORDON, M. J., MILNER, R., AND WADSWORTH, C. 1977. Edinburgh LCF. Rep. CSR-11-77, Dept. of Computer Science, Edinburgh Univ., Scotland.
Cordell Green, The design of the PSI program synthesis system, Proceedings of the 2nd international conference on Software engineering, p.4-18, October 13-15, 1976, San Francisco, California, USA
GREEN, C. 1977. A summary of the PSI program synthesis system. In Proceedings o{ 5th International Joint Conference on Artificial Intelligence (Cambridge, Mass.). M. I. T., Cambridge, Mass., pp. 380-381.
GR~.EN, C. 1978. The PSI program synthesis system 1978: An abstract. In Proceedings of 1978 National Computer Conference (Anaheim, Calif., June 5-8), AFIPS Press, Reston, Va., pp. 673- 674.
GREr~, C., ANO BARSTOW, D. 1975. Some rules for the automatic synthesis of programs. In Advance Papers o{ the 4th International Joint Conference on Artificial InteUigence (Tbilisi, Georgia, USSR, Sept. 3-8). International Joint Council on Artificial Intelligence, Inc., Stanford, Calif.
GREEN, C., AND BARSTOW, D. 1976. A hypothetical dialogue exhibiting a knowledge base for a program understanding system. In Machine Representations of Knowledge, E. W. Elcock and D. Michie, Eds. Wiley, New York, pp. 335-359.
GREEN, C., AND BARSTOW, D. 1978. On program synthesis knowledge. Arti{. InteU. 10, 241-279.
GREEN, C., GABRIEL, R. P., KANT, E., KEDZIERSKI, B. J., McCoNE, B. R., PHILLIPS, J. V., TAPPEL, S. T., ANO WESTFOLO, S. J. 1979. Results in knowledge based program synthesis. In Proceedings of 6th International Joint Conference on Artificial Intelligence (Tokyo, Aug. 20-23). International Joint Council on Artificial Intelligence, inc., Stanford, Calif., pp. 342-344.
GREEN, C., PHILIPS, J., WESTFOLD, S., PRESSBUR- GER, T., KEDZIERSKI, B., ANGEBRANNDT, S., MONT-REYNAUD, B., AND TAPPEL, S. 1982. Research on knowledge-based programming and algorithm design--1981. Rep. Kes. U. 81.2, Kestrel Institute, Paid Alto, Calif.
Gumo, G., GRESSE, C., AND BIOOiT, M. 1980. Conception et certification de programmes a partir d'une dL~mposition par les donates. RAIRO Inf. 14, 4, 319-351.
HARALOSSON, A. 1974. PCDB--A procedure generator for a predicate calculus data base. In Information Processing 74. Elsevier North-Holland, New York, pp. 375-379.
HARALDSSON, A. 1977. A program manipulation system based on partial evaluation. Ph.D. dissertation, Dept. of Mathematics, Linkoping Univ., Sweden.
Anders Haraldsson, A partial evaluator, and its use for compiling iterative statements in LISP, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.195-202, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512781]
Wolfgang Hesse, Methoden und Werkzeuge zur Software-Entwicklung: Einordnung und Überblick, Proceedings of the Werkzeuge der Programmiertechnik, p.113-153, March 16-17, 1981
HEWITT, C. 1971. Deseiption and theoretical analysis (using schemata) of PLANNER: A language for proving theorems and manipulating models in a robot. Ph.D. dissertation, Massachusetts Institute of Technology, Cambridge, Mass.
HtJET, G., AND LANe, B. 1978. Proving and applying program transformations expressed with secondorder patterns. Acta Inf. 1 t, 31-55.
HCmm, H., Ed. 1981. Software Engineering Environments. Elsevier North-Holland, New York.
IGARASHI, S., LONDON, R. L., AND LUCKHAM, D. C. 1975. Automatic program verification h Logical basis and its implementation. Acts Inf. 4, 145- 182.
Elaine Kant, The selection of efficient implementations for a high-level language, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.140-146, August 15-17, 1977[doi>10.1145/800228.806943]
KANT, E. 1979. A knowledge-based approach to using efficiency estimation in program synthesis. In Proceedings of 6th International Joint Conference on Artificial Intelligence (Tokyo, Aug. 20-23). International Joint Council on Artificial Intelligence, Inc., Stanford, Calif., pp. 457-462.
KANT, E., AND BARSTOW, D. R. 1981. The refinement paradigm: The interaction of coding and efficiency knowledge in program synthesis. IEEE Trans. Softw. Eng. 7, 458-471.
Dennis Francis Kibler, Power, efficiency, and correctness of transformation systems., University of California, Irvine, 1978
D. F. Kibler , J. M. Neighbors , T. A. Standish, Program manipulation via an efficient production system, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.163-173, August 15-17, 1977[doi>10.1145/800228.806946]
Donald E. Knuth, Structured Programming withgo toStatements, ACM Computing Surveys (CSUR), v.6 n.4, p.261-301, Dec. 1974[doi>10.1145/356635.356640]
KOENIC,, S., AND PAIGE, R. 1981. A transformational framework for the automatic control of derived data. In Proceedings of 7th International Conference on Very Large Data Bases (Cannes, France, Sept. 9-11). IEEE, New York, pp. 306-818.
KOTr, L. 1978. About a transformation system: A theoretical study. In Program Transformations, B. Robinet, Ed. Dunot, Paris.
KoTr, L. 1982. Unfold/fold program transformations. Res. Rep. 155, INRIA Centre de Rennes, France.
LEE, S., ERW~SON, R. W., AND GERHART, S. L. 1981. Finding a design error in a distributed system: A case study. In Proceedings of IEEE Symposium on Reliability in Distributed Software and Database Systems (Pittsburgh, Pa., July 21- 22). IEEE Computer Society, Los Alamitos, Calif.
LONDON, P., aND FEATHER, M. 1982. Implementing specification freedoms. Res. Rep. 81-100, Information Science Institute, Univ. of Southern California, Marina del Rey.
David B. Loveman, Program Improvement by Source-to-Source Transformation, Journal of the ACM (JACM), v.24 n.1, p.121-145, Jan. 1977[doi>10.1145/321992.322000]
David B. Loveman , Ross A. Faneuf, Program optimization - theory and practice, Proceedings of the conference on Programming languages and compilers for parallel and vector machines, p.97-102, March 18-19, 1975, New York, New York[doi>10.1145/800026.808407]
James R. Low, Automatic data structure selection: an example and overview, Communications of the ACM, v.21 n.5, p.376-385, May 1978[doi>10.1145/359488.359498]
LUCKMANN, M. 1979. CIP-Baummodul (Benutzeranleitung). Report, Institut for Informatik, Technische Univ. Miinchen, Munich, West Germany.
B. Maher , D. H. Sleeman, Automatic Program Improvement: Variable Usage Transformations, ACM Transactions on Programming Languages and Systems (TOPLAS), v.5 n.2, p.236-264, April 1983[doi>10.1145/69624.357209]
MANNA, Z., AND WALDINGER, R. 1975. Knowledge and reasoning in program synthesis. Artif. Intell. 6, 2, 175-208.
Zohar Manna , Richard Waldinger, The automatic synthesis of recursive programs, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.29-36, August 15-17, 1977[doi>10.1145/800228.806929]
MANNA, Z., AND WALDINGER, R. 1977b. The automatic synthesis of systems of recursive programs. In Proceedings of 5th International Joint Conference on Artificial Intelligence (Cambridge, Mass., Aug. 22-25). M. I. T., Cambridge, Mass., pp. 405- 411.
Zohar Manna , Richard Waldinger, The synthesis of structure-changing programs, Proceedings of the 3rd international conference on Software engineering, p.175-187, May 10-12, 1978, Atlanta, Georgia, USA
MANNA, Z., AND WALDINGER, R. 1978b. DEDALUS--The DEDuctive Algorithm Ur-synthesizer. In Proceedings of National Computer Conference (Anaheim, Calif., June 5-8), vol. 47. AFIPS Press, Reston, Va., pp. 683-690.
MANNA, Z., AND WALDINGER, R. 1979. Synthesis: Dreams ~ Programs. IEEE Trans. So{tw. Eng. SE.5, 4, 294-328.
Zohar Manna , Richard Waldinger, A Deductive Approach to Program Synthesis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.1, p.90-121, Jan. 1980[doi>10.1145/357084.357090]
MANNA, Z., AND WALDINGER, R. 1981. Deductive synthesis of the unification algorithm. Sc~ Comput. Program. I, 5-48.
Brian P. McCune, The PSI Program Model Builder - synthesis of very high-level programs, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.130-139, August 15-17, 1977[doi>10.1145/800228.806942]
Brian Perry Mccune, Building program models incrementally from informal descriptions, Stanford University, Stanford, CA, 1980
M~Li:SE, B. 1981. MENTOR: L'environnement PASCAL. Tech. Rep. 5, INRIA Centre de Roquencourt, Le Chesnay, France.
MICftIE, D., ED. 1979. Expert Systems in the Micro Electronic' Age. University Press, Edinburgh, Scotland.
Donald Michie, Introductory Readings in Expert Systems, Gordon and Breach Science Publishers, Inc., Newark, NJ, 1982
MOLLER, B., PARTSCH, H., AND PEPPER, P. 1983. Programming with transformations: An overview of the Munich CIP project. Submitted for publication.
MOOR, I. W., AND DARLINGTON, J. 1981. Formal synthesis of an efficient implementation for an abstract data type. Unpublished manuscript.
David Jechiel Mostow, Mechanical transformation of task heuristics into operational procedures, Carnegie Mellon University, Pittsburgh, PA, 1981
MUSSER, D. R. 1979. Abstract data type specification in the AFFIRM system. In Proceedings o! Specifications of Reliable Software (Cambridge, Mass., Apr. 3-5). IEEE, New York, pp. 47-57.
James Milne Neighbors, Software construction using components, University of California, Irvine, 1980
PAIOF., R. 1981. Expression continuity and formal differentiation of algorithms. Rep. LCSR-TR-9, Laboratory for Computing Science Research, Rutgers Univ., New Brunswick, N.J.
P~or, R. 1982. Applications of finite differencing to database integrity control and query/transaction optimization. In Advances in Database Theory, vol. 2, J. Minker, J. M. Nicolas, and H. Gallaire, Eds. Plenum Press, New York.
Robert Paige, Transformational programming: applications to algorithms and systems, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.73-87, January 24-26, 1983, Austin, Texas[doi>10.1145/567067.567076]
Robert Paige , Shaye Koenig, Finite Differencing of Computable Expressions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.402-454, July 1982[doi>10.1145/357172.357177]
Bob Paige , J. T. Schwartz, Expression continuity and the formal differentiation of algorithms, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.58-71, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512957]
PARTSCn, H. 1984. The CIP transformation system. In Program Transformation and Programming Environments, Pepper, P., Ed. Lecture Notes in Computer Science. Springer-Verlag. New York, to be published.
PARTSCH, H., AND STEINBROGGEN, R. 1981. A comprehensive survey on program transformation systems. Rep. TUM I8108, Institut ~r Informatik, Technische Univ. Miinchen, Munich, West Germany.
Peter Pepper, A Study on Transformational Semantics, Program Construction, International Summer Schoo, p.322-405, July 26-August 06, 1978
Peter Pepper, Program Transformation and Programming Environments, Springer-Verlag New York, Inc., Secaucus, NJ, 1984
RICH, C., AND SHROBE, H. E. 1978. Initial report on a LISP programmer's apprentice. IEEE Trans. Softw. Eng. SE-4, 6.
R~cH, C., S~mon~., H. E., WA?ERS, R. C. 1979. Overview of the programmer's apprentice. In Proceedings of 6th International Joint Conference on Artificial Intelligence (Tokyo, Aug. 20-23).
RIETItMAYER, H.-O. 1981. Die Entwicklung der Bedienungskomponente des CIP Systems. Notizen zur interaktiven Programmierung 6, GI-Fachausschuss 2, GI, Bonn, West Germany.
Paul Edward Rutter, Improving programs by source-to-source transformation., University of Illinois at Urbana-Champaign, Champaign, IL, 1977
Edmond Schonberg , Jacob T. Schwartz , Micha Sharir, Automatic data structure selection in SETL, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.197-210, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567771]
Edmond Schonberg , Jacob T. Schwartz , Micha Sharir, An Automatic Technique for Selection of Data Representations in SETL Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.3 n.2, p.126-143, April 1981[doi>10.1145/357133.357135]
SCHWARTZ, J. T. 1975a. On programming: An interim report of the SETL project. Courant Institute, New York Univ., New York.
J. T. Schwartz, Automatic data structure choice in a language of very high level, Communications of the ACM, v.18 n.12, p.722-728, Dec. 1975[doi>10.1145/361227.361235]
SCHWARTZ, J. T. 1977. Correct program technology. Courant Computer Rep. 12, Courant Institute, New York Univ., New York.
SuAmR, M. 1979a. Some observations concerning formal differentiation of set-theoretic expressions. Tech. Rep. 16, Computer Science Dept., Courant Institute, New York Univ., New York.
SHARIR, M. 1979b. Algorithm derivation by transformations. Tech. Rep. 021, Computer Science Dept., Courant Institute, New York Univ., New York.
SHARIR, M. 1981. Formal integration: A program transformation technique. Comput. Lang. 6, 35- 46.
STANDISH, T. A., HARmMAN, D. C., KIe~.Ea, D. F., AND NE{GItBORS, J. M. 1976a. The Irvine program transformation catalogue. Dept. of Infor. marion and Computer Science, Univ. of Califor. nia, Irvine, Calif.
Thomas A. Standish , Dennis F. Kibler , James M. Neighbors, Improving and refining programs by program manipulation, Proceedings of the 1976 annual conference, p.509-516, October 20-22, 1976, Houston, Texas, USA[doi>10.1145/800191.805652]
Ralf Steinbrüggen, The Use of Nested Scheme Parameters in the System CIP, GI - 10. Jahrestagung, p.106, September 30-October 02, 1980
STEINBR{)GGEN, R. 1980b. Pre.algorithmic specifications of the system CIP. Part 1. Pep. TUM- I8016, Institut f/Jr Informatik, Technische Univ. Miinchen, Munich, West Germany.
STEINBROGGEN, R. 1981. The composition of schemes for local program transformation. In Proceedings of 3d Hungarian Computer Science Conference (Budapest, Jan.), M. Arato and L. Varga, Eds. Akademiai Kiado, Budapest, pp. 111- 124.
STEINBROGGEN, R. 1982. Program development using transformational expressions. Rep. TUM- I8206, Institut flit Informatik, Technische Univ. M(inchen, Munich, West Germany.
STEINBBOGGEN, R., AND PARTSCH, H. 1984. Mathematical foundation of transformation systems. Tech. Rep., Institut f(ir Informatik, Technische Univ. Miinchen, Munich, West Germany. To appear.
THOMPSON, D. H., SUNSHINE, C. A., ERICKSON, R. W., GERHART, S. L., AND SCHWABE, D. 1981. Specification and verification of communication protocols in AFFIRM using state transition models. RR-81-88, Information Science Iustitute, Univ. of Southern California, Marina del Rey.
TOWNLEY, J. A. 1981. PDS user's manual. Center for Research in Computing Technology, Harvard Univ., Cambridge, MasS.
Judy A. Townley, The use of transformations to implement an algorithm, Proceedings of the 5th Colloquium on International Symposium on Programming, p.381-408, April 06-08, 1982
WALDINGER, R. J. 1977. Achieving several goals simultaneously. In Machine Representations of Knowledge, Machine Intelligence, vol. 8, E. W. Elcock and D. Michie, Eds. Ellis Horwood, Chichester, England, pp. 94-136.
WATERS, R. C. 1982. The programmer's apprentice: Knowledge based program editing. IEEE Trans. Softw. Eng. SE-8, 1, 1-12.
W~C~eREIT, B. 1971. The ECL programming system. In Proceedings of AFIPS Fall Joint Computer Conference (Las Vegas, Nev., Nov. 16-18), vol. 39. AFIPS Press, Reston, Va., pp. 253-262.
WILE, D. 198Ia. Program developments as formal objects. USC/ISI Tech. Rep. Information Science Institute, Univ. of Southern California, Marina del Rey.
WILE, D. 1981b. POPART: Producer of parsers and related tools, system builder's manual. USC/ISI Tech. Rep., Information Science Institute, Univ. of S~)uthern California, Marina del Rey.
David Wile , Robert Balzer , Neil Goldman, Automated derivation of program control structure from natural language program descriptions, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.77-84, August 15-17, 1977[doi>10.1145/800228.806935]
