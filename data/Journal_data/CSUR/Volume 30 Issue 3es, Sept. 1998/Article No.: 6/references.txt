A. Bossi , N. Cocco , S. Dulli, A method for specializing logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.2, p.253-302, April 1990[doi>10.1145/78942.78947]
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
Wei-Ngan Chin, Towards an automated tupling strategy, Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.119-132, June 14-16, 1993, Copenhagen, Denmark[doi>10.1145/154630.154643]
Charles Consel, Program adaptation based on program transformation, ACM SIGPLAN Notices, v.32 n.1, p.69-72, Jan. 1997[doi>10.1145/251595.254090]
Charles Consel , Siau Cheng Khoo, Parameterized partial evaluation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.15 n.3, p.463-493, July 1993[doi>10.1145/169683.174155]
Selected Papers from the Internaltional Seminar on Partial Evaluation, February 1996
ERSHOV, A.P. 1982. Mixed computation: Potential applications and problems for study. Theoretical Computer Science 18, 1, 41-67.
FUTAMURA, V. AND NOGI, K. 1988. Generalized partial computation. In D. BJORNER, A. P. ERSHOV, AND N. D. JONES Eds., Partial Evaluation and Mixed Computation (1988), pp. 133-151. North-Holland.
J. P. Gallagher, Tutorial on specialisation of logic programs, Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.88-98, June 14-16, 1993, Copenhagen, Denmark[doi>10.1145/154630.154640]
Robert GlÃ¼ck, On the Mechanics of Metasystem Hierarchies in Program Transformation, Proceedings of the 5th International Workshop on Logic Programming Synthesis and Transformation, p.234-251, September 20-22, 1995
Neil D. Jones , Carsten K. Gomard , Peter Sestoft, Partial evaluation and automatic program generation, Prentice-Hall, Inc., Upper Saddle River, NJ, 1993
H. Jan Komorowski, Partial evaluation as a means for inferencing data structures in an applicative language: a theory and implementation in the case of prolog, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.255-267, January 25-27, 1982, Albuquerque, New Mexico[doi>10.1145/582153.582181]
LEUSCHEL, M., DE SCHREYE, D., AND DE WAAL, A. 1996. A conceptual embedding of folding into partial deduction: Towards a maximal integration. In M. MAHER Ed., Proceedings of the Joint International Conference and Symposium on Logic Programming, Bonn, Germany (1996), pp. 319-332. MIT Press.
J. W. Lloyd , J. C. Shepherdson, Partial evaluation in logic programming, Journal of Logic Programming, v.11 n.3-4, p.217-242, Oct./Nov. 1991[doi>10.1016/0743-1066(91)90027-M]
Robert Paige , Shaye Koenig, Finite Differencing of Computable Expressions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.402-454, July 1982[doi>10.1145/357172.357177]
Helmut A. Partsch, Specification and transformation of programs: a formal approach to software development, Springer-Verlag New York, Inc., New York, NY, 1990
PETTOROSSI, A. 1977. Transformation of programs and use of tupling strategy. In Proceedings Informatica 77, Bled, Yugoslavia (1977), pp. 1-6.
PETTOROSSI, A. AND PROIETTI, M. 1994. Transformation of logic programs: Foundations and techniques. Journal of Logic Programming 19,20, 261-320.
Alberto Pettorossi , Maurizio Proietti, A Theory of Logic Program Specialization and Generalization for Dealing with Input Data Properties, Selected Papers from the Internaltional Seminar on Partial Evaluation, p.386-408, February 12-16, 1996
Alberto Pettorossi , Maurizio Proietti , Sophie Renault, Reducing nondeterminism while specializing logic programs, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.414-427, January 15-17, 1997, Paris, France[doi>10.1145/263699.263759]
Maurizio Proietti , Alberto Pettorossi, Unfolding-definition-folding, in this order, for avoiding unnecessary variables in logic programs, Theoretical Computer Science, v.142 n.1, p.89-124, May 1, 1995[doi>10.1016/0304-3975(94)00227-A]
SORENSEN, M. H., GLi)CK, R., AND JONES, N.D. 1996. A positive supercompiler. Journal of Functional Programming 6, 6, 811-838.
Akihiko Takano, Generalized partial computation for a lazy functional language, Proceedings of the 1991 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.1-11, June 17-19, 1991, New Haven, Connecticut, USA[doi>10.1145/115865.115867]
TAMAKI, H. AND SATO, T. 1984. Unfold/fold transformation of logic programs. In S.-A. T.~RNLUND Ed., Proceedings of the Second International Conference on Logic Programming, Uppsala, Sweden (1984), pp. 127-138. Uppsala University.
Valentin F. Turchin, The Use of Metasystem Transition in Theorem Proving and Program Optimization, Proceedings of the 7th Colloquium on Automata, Languages and Programming, p.645-657, July 14-18, 1980
Valentin F. Turchin, The concept of a supercompiler, ACM Transactions on Programming Languages and Systems (TOPLAS), v.8 n.3, p.292-325, July 1986[doi>10.1145/5956.5957]
Jeffrey Scott Vitter , Philippe Flajolet, Average-case analysis of algorithms and data structures, Handbook of theoretical computer science (vol. A): algorithms and complexity, MIT Press, Cambridge, MA, 1991
Philip Wadler, Deforestation: transforming programs to eliminate trees, Proceedings of the Second European Symposium on Programming, p.231-248, January 1988, Nancy, France
Mitchell Wand, Continuation-Based Program Transformation Strategies, Journal of the ACM (JACM), v.27 n.1, p.164-180, Jan. 1980[doi>10.1145/322169.322183]
