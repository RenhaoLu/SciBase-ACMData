Ole Agesen, The Cartesian Product Algorithm: Simple and Precise Type Inference Of Parametric Polymorphism, Proceedings of the 9th European Conference on Object-Oriented Programming, p.2-26, August 07-11, 1995
Alexander Aiken, Introduction to set constraint-based program analysis, Science of Computer Programming, v.35 n.2-3, p.79-111, Nov.1.1999[doi>10.1016/S0167-6423(99)00007-6]
Alexander Aiken , Brian R. Murphy, Implementing Regular Tree Expressions, Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture, p.427-447, August 26-30, 1991
Alex Aiken , Brian Murphy, Static type inference in a dynamically typed language, Proceedings of the 18th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.279-290, January 21-23, 1991, Orlando, Florida, USA[doi>10.1145/99583.99621]
Aiken, A. and Wimmers, E. L. 1992. Solving systems of set constraints (extended abstract). In Proceedings of the 7th Annual IEEE Symposium on Logic in Computer Science (LICS'92). A. Scedrov, Ed., 329--340.
Alexander Aiken , Edward L. Wimmers, Type inclusion constraints and type inference, Proceedings of the conference on Functional programming languages and computer architecture, p.31-41, June 09-11, 1993, Copenhagen, Denmark[doi>10.1145/165180.165188]
Frances E. Allen, Control flow analysis, ACM SIGPLAN Notices, v.5 n.7, p.1-19, July 1970[doi>10.1145/390013.808479]
Roberto M. Amadio , Luca Cardelli, Subtyping recursive types, ACM Transactions on Programming Languages and Systems (TOPLAS), v.15 n.4, p.575-631, Sept. 1993[doi>10.1145/155183.155231]
Amtoft, T. 1999. Partial evaluation for constraint-based program analyses. Tech. rep. BRICS-RS-99-45, BRICS, Department of Computer Science, University of Aarhus.
Torben Amtoft , Franklyn A. Turbak, Faithful Translations between Polyvariant Flows and Polymorphic Types, Proceedings of the 9th European Symposium on Programming Languages and Systems, p.26-40, April 02, 2000
Andersen, L. O. 1994. Program analysis and specialization for the C programming language. Ph.D. dissertation, Computer Science Department, University of Copenhagen, Denmark.
Andrew W. Appel, Compiling with continuations, Cambridge University Press, New York, NY, 1992
A. W. Appel , T. Jim, Continuation-passing, closure-passing style, Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.293-302, January 11-13, 1989, Austin, Texas, USA[doi>10.1145/75277.75303]
J. Michael Ashley , R. Kent Dybvig, A practical and flexible flow analysis for higher-order languages, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.4, p.845-868, July 1998[doi>10.1145/291891.291898]
Ayers, A. E. 1992. Efficient closure analysis with reachability. In Actes WSA Workshop on Static Analysis. 126--134.
Andrew Edward Ayers, Abstract analysis and optimization of scheme, Massachusetts Institute of Technology, Cambridge, MA, 1993
Anindya Banerjee, A modular, polyvariant and type-based closure analysis, Proceedings of the second ACM SIGPLAN international conference on Functional programming, p.1-10, June 09-11, 1997, Amsterdam, The Netherlands[doi>10.1145/258948.258951]
Anindya Banerjee , Nevin Heintze , Jon G. Riecke, Design and Correctness of Program Transformations Based on Control-Flow Analysis, Proceedings of the 4th International Symposium on Theoretical Aspects of Computer Software, p.420-447, October 29-31, 2001
Anindya Banerjee , Thomas Jensen, Modular control-flow analysis with rank 2 intersection types, Mathematical Structures in Computer Science, v.13 n.1, p.87-124, February 2003[doi>10.1017/S0960129502003845]
Anindya Banerjee , David A. Schmidt, Stackability in the simply-typed call-by-value lambda calculus, Science of Computer Programming, v.31 n.1, p.47-73, May 1998[doi>10.1016/S0167-6423(96)00040-8]
Sandip K. Biswas, A demand-driven set-based analysis, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.372-385, January 15-17, 1997, Paris, France[doi>10.1145/263699.263753]
Bruno Blanchet, Escape analysis: correctness proof, implementation and experimental results, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.25-37, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268949]
Anders Bondorf, Automatic autoprojection of higher order recursive equations, Science of Computer Programming, v.17 n.1-3, p.3-34, Dec. 1991[doi>10.1016/0167-6423(91)90035-V]
Bondorf, A. 1993. Similix 5.1 manual. Tech. rep., DIKU, Computer Science Department, University of Copenhagen, Denmark. (Included in the Similix 5.1 distribution.)
Bondorf, A. and Jørgensen, J. 1993. Efficient analyses for realistic off-line partial evaluation. J. Funct. Program. 3, 3, 315--346.
Dominique Boucher , Marc Feeley, Abstract Compilation: A New Implementation Paradigm for Static Analysis, Proceedings of the 6th International Conference on Compiler Construction, p.192-207, April 24-26, 1996
Bourdoncle, F. 1993. Efficient chaotic iteration strategies with widenings. D. Bjørner, M. Broy, and I. V. Pottosin, Eds. Lecture Notes in Computer Science, vol. 735. Springer-Verlag, Berlin, 128--141.
David Cachera , Thomas Jensen , David Pichardie , Vlad Rusu, Extracting a data flow analyser in constructive logic, Theoretical Computer Science, v.342 n.1, p.56-78, 6 September 2005[doi>10.1016/j.tcs.2005.06.004]
Henry Cejtin , Suresh Jagannathan , Stephen Weeks, Flow-Directed Closure Conversion for Typed Languages, Proceedings of the 9th European Symposium on Programming Languages and Systems, p.56-71, April 02, 2000
Swarat Chaudhuri, Subcubic algorithms for recursive state machines, Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 07-12, 2008, San Francisco, California, USA[doi>10.1145/1328438.1328460]
William D. Clinger , Lars Thomas Hansen, Lambda, the ultimate label or a simple optimizing compiler for Scheme, Proceedings of the 1994 ACM conference on LISP and functional programming, p.128-139, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.156786]
Charles Consel, Binding time analysis for high order untyped functional languages, Proceedings of the 1990 ACM conference on LISP and functional programming, p.264-272, June 27-29, 1990, Nice, France[doi>10.1145/91556.91668]
Charles Consel , Olivier Danvy, For a Better Support of Static Data Flow, Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture, p.496-519, August 26-30, 1991
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Cousot, P. and Cousot, R. 1977b. Static determination of dynamic properties of recursive procedures. In IFIP Conference on Formal Description of Programming Concepts, E. J. Neuhold, Ed. 237--277.
Cousot, P. and Cousot, R. 1992a. Abstract interpretation frameworks. J. Logic Comput. 2, 4, 511--547.
Patrick Cousot , Radhia Cousot, Comparing the Galois Connection and Widening/Narrowing Approaches to Abstract Interpretation, Proceedings of the 4th International Symposium on Programming Language Implementation and Logic Programming, p.269-295, August 26-28, 1992
Patrick Cousot , Radhia Cousot, Formal language, grammar and set-constraint-based program analysis by abstract interpretation, Proceedings of the seventh international conference on Functional programming languages and computer architecture, p.170-181, June 26-28, 1995, La Jolla, California, USA[doi>10.1145/224164.224199]
Patrick Cousot , Radhia Cousot , Jerôme Feret , Laurent Mauborgne , Antoine Miné , David Monniaux , Xavier Rival, The ASTREÉ analyzer, Proceedings of the 14th European conference on Programming Languages and Systems, p.21-30, April 04-08, 2005, Edinburgh, UK[doi>10.1007/978-3-540-31987-0_3]
Damian, D. 1999. Partial evaluation for program analysis. Progress report, BRICS Ph.D. School, University of Aarhus. Available at http://www.brics.dk/∼damian/.
Damian, D. 2001. Time stamps for fixed-point approximation. In Proceedings of the 17th Annual Conference on Mathematical Foundations of Programming Semantics, S. Brookes and M. Mislove, Eds. Electronic Notes in Theoretical Computer Science, vol. 45. Elsevier Science Publishers, Aarhus, Denmark, 43--54.
Daniel Damian , Olivier Danvy, CPS transformation of flow information, Part II: administrative reductions, Journal of Functional Programming, v.13 n.5, p.925-933, September 2003[doi>10.1017/S0956796803004702]
Daniel Damian , Olivier Danvy, Syntactic accidents in program analysis: on the impact of the CPS transformation, Journal of Functional Programming, v.13 n.5, p.867-904, September 2003[doi>10.1017/S0956796802004379]
Danvy, O. and Filinski, A. 1992. Representing control, a study of the CPS transformation. In Special issue on the ACM Conference on LISP and Functional Programming, M. Wand, Ed. Math. Structures Comput. Sci., 2, 4. Cambridge University Press, Cambridge, U.K., 361--391.
Olivier Danvy , Lasse R. Nielsen, Defunctionalization at work, Proceedings of the 3rd ACM SIGPLAN international conference on Principles and practice of declarative programming, p.162-174, September 05-07, 2001, Florence, Italy[doi>10.1145/773184.773202]
Manuvir Das, Unification-based pointer analysis with directional assignments, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.35-46, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349309]
Saumya K. Debray , Todd A. Proebsting, Interprocedural control flow analysis of first-order programs with tail-call optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.4, p.568-585, July 1997[doi>10.1145/262004.262006]
Alan Deutsch, On determining lifetime and aliasing of dynamically allocated data in higher-order functional specifications, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.157-168, December 1989, San Francisco, California, USA[doi>10.1145/96709.96725]
Alain Deutsch, On the complexity of escape analysis, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.358-371, January 15-17, 1997, Paris, France[doi>10.1145/263699.263750]
Allyn Dimock , Ian Westmacott , Robert Muller , Franklyn Turbak , J. B. Wells, Functioning without closure: type-safe customized function representations for standard ML, Proceedings of the sixth ACM SIGPLAN international conference on Functional programming, September 03-05, 2001, Florence, Italy[doi>10.1145/507635.507640]
Manuel Fähndrich , Jakob Rehof , Manuvir Das, Scalable context-sensitive flow analysis using instantiation constraints, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.253-263, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349332]
Karl-Filip Faxén, Optimizing Lazy Functional Programs Using Flow Inference, Proceedings of the Second International Symposium on Static Analysis, p.136-153, September 25-27, 1995
Karl-Filip Faxén, Polyvariance, Polymorphism and Flow Analysis, Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages, p.260-278, June 24-26, 1996
Flanagan, C. 1997. Effective static debugging via componential set-based analysis. Ph.D. dissertation, Rice University, Houston, Texas.
Cormac Flanagan , Matthias Felleisen, Componential set-based analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.2, p.370-416, March 1999[doi>10.1145/316686.316703]
John P. Gallagher , Julio C. Peralta, Regular Tree Languages as an Abstract Domain in Program Specialisation, Higher-Order and Symbolic Computation, v.14 n.2-3, p.143-172, September 2001[doi>10.1023/A:1012936614361]
Kirsten L. Solberg Gasser , Flemming Nielson , Hanne Riis Nielson, Systematic realisation of control flow analyses for CML, Proceedings of the second ACM SIGPLAN international conference on Functional programming, p.38-51, June 09-11, 1997, Amsterdam, The Netherlands[doi>10.1145/258948.258954]
Benjamin Goldberg , Young Gil Park, Higher Order Escape Analysis: Optimizing Stack Allocation in Functional Program Implementations, Proceedings of the 3rd European Symposium on Programming, p.152-160, May 15-18, 1990
Jörgen Gustavsson , Josef Svenningsson, Constraint Abstractions, Proceedings of the Second Symposium on Programs as Data Objects, p.63-83, May 21-23, 2001
Chris Hankin , Rajagopal Nagarajan , Prahladavaradan Sampath, Flow analysis: games and nets, The essence of computation: complexity, analysis, transformation, Springer-Verlag New York, Inc., New York, NY, 2002
John Hannan, A type-based escape analysis for functional languages, Journal of Functional Programming, v.8 n.3, p.239-273, May 1998[doi>10.1017/S0956796898003025]
Harrison III, W. L. 1989. The interprocedural analysis and automatic parallelization of Scheme programs. LISP Symbol. Comput. 2, 3/4, 179--396.
Williams Ludwell Harrison, III , Zahira Ammarguellat, A Program's Eye View of Miprac, Proceedings of the 5th International Workshop on Languages and Compilers for Parallel Computing, p.512-537, August 03-05, 1992
Nevin Charles Heintze, Set based program analysis, Carnegie Mellon University, Pittsburgh, PA, 1992
Nevin Heintze, Set-based analysis of ML programs, Proceedings of the 1994 ACM conference on LISP and functional programming, p.306-317, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.182495]
Nevin Heintze, Control-Flow Analysis and Type Systems, Proceedings of the Second International Symposium on Static Analysis, p.189-206, September 25-27, 1995
Heintze, N. and Jaffar, J. 1990a. A decision procedure for a class of set constraints. In Proceedings of the 5th Annual IEEE Symposium on Logic in Computer Science, J. Mitchell, Ed. 42--51.
Nevin Heintze , Joxan Jaffar, A finite presentation theorem for approximating logic programs, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.197-209, December 1989, San Francisco, California, USA[doi>10.1145/96709.96729]
Nevin Heintze , David McAllester, Linear-time subtransitive control flow analysis, Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation, p.261-272, June 16-18, 1997, Las Vegas, Nevada, USA[doi>10.1145/258915.258939]
Nevin Heintze , David McAllester, On the complexity of set-based analysis, Proceedings of the second ACM SIGPLAN international conference on Functional programming, p.150-163, June 09-11, 1997, Amsterdam, The Netherlands[doi>10.1145/258948.258963]
Nevin Heintze , David McAllester, On the Cubic Bottleneck in Subtyping and Flow Analysis, Proceedings of the 12th Annual IEEE Symposium on Logic in Computer Science, p.342, June 29-July 02, 1997
Fritz Henglein, Efficient Type Inference for Higher-Order Binding-Time Analysis, Proceedings of the 5th ACM Conference on Functional Programming Languages and Computer Architecture, p.448-472, August 26-30, 1991
Henglein, F. 1992. Simple closure analysis. Tech. rep. Semantics Report D-193, DIKU, Computer Science Department, University of Copenhagen.
Henglein, F., Makholm, H., and Niss, H. 2005. Effect type systems and region-based memory management. In Advanced Topics in Types and Programming Languages, B. Pierce, Ed. The MIT Press, Cambridge, MA.
Michael Hind, Pointer analysis: haven't we solved this problem yet?, Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering, p.54-61, June 2001, Snowbird, Utah, USA[doi>10.1145/379605.379665]
Hudak, P. 1987. A semantic model of reference counting and its abstraction. In Abstract Interpretation of Declarative Languages. Fellis Harwood, 45--62.
Paul Hudak , Jonathan Young, Collecting interpretations of expressions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.2, p.269-290, April 1991[doi>10.1145/103135.103139]
Hughes, S. 1992. Compile-time garbage collection for higher-order functional languages. J. Logic Comput. 2, 4, 483--509.
Suresh Jagannathan , Peter Thiemann , Stephen Weeks , Andrew Wright, Single and loving it: must-alias analysis for higher-order languages, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.329-341, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268973]
Suresh Jagannathan , Stephen Weeks, A unified treatment of flow analysis in higher-order languages, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.393-407, January 23-25, 1995, San Francisco, California, USA[doi>10.1145/199448.199536]
Suresh Jagannathan , Stephen Weeks , Andrew K. Wright, Type-Directed Flow Analysis for Typed Intermediate Languages, Proceedings of the 4th International Symposium on Static Analysis, p.232-249, September 08-10, 1997
Thomas Jensen, Types in program analysis, The essence of computation: complexity, analysis, transformation, Springer-Verlag New York, Inc., New York, NY, 2002
Thomas P. Jensen , Ian Mackie, Flow Analysis in the Geometry of Interaction, Proceedings of the 6th European Symposium on Programming Languages and Systems, p.188-203, April 22-24, 1996
Trevor Jim, What are principal typings and what are they good for?, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.42-53, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237728]
Thomas Johnsson, Lambda lifting: transforming programs to recursive equations, Proc. of a conference on Functional programming languages and computer architecture, p.190-203, January 1985, Nancy, France
John B. Johnston, The contour model of block structured processes, ACM SIGPLAN Notices, v.6 n.2, February 1971[doi>10.1145/1115880.1115883]
Jones, N. D. 1981a. Flow analysis of lambda expressions. Tech. rep. PB-128, University of Aarhus, Denmark.
Neil D. Jones, Flow Analysis of Lambda Expressions (Preliminary Version), Proceedings of the 8th Colloquium on Automata, Languages and Programming, p.114-128, July 13-17, 1981
Jones, N. D. 1987. Flow analysis of lazy higher-order functional programs. In Abstract Interpretation of Declarative Languages. Ellis Harwood. 103--122.
Neil D. Jones , Nils Andersen, Flow analysis of lazy higher-order functional programs, Theoretical Computer Science, v.375 n.1-3, p.120-136, April, 2007[doi>10.1016/j.tcs.2006.12.030]
Neil D. Jones , Steven S. Muchnick, Flow analysis and optimization of LISP-like structures, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.244-256, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567776]
Jones, N. D. and Muchnick, S. S. 1981. Complexity of flow analysis, inductive assertion synthesis and a language due to Dijkstra. In Program Flow Analysis: Theory and Applications. Prentice-Hall, Upper Saddle River, NJ. 380--393.
Neil D. Jones , Steven S. Muchnick, A flexible approach to interprocedural data flow analysis and programs with recursive data structures, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.66-74, January 25-27, 1982, Albuquerque, New Mexico[doi>10.1145/582153.582161]
Neil D. Jones , Alan Mycroft, Data flow analysis of applicative programs using minimal function graphs, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.296-306, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512672]
Jones, N. D. and Rosendahl, M. 1997. Higher-order minimal function graphs. J. Funct. Logic Program. 2.
Gary A. Kildall, A unified approach to global program optimization, Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.194-206, October 01-03, 1973, Boston, Massachusetts[doi>10.1145/512927.512945]
John Kodumal , Alex Aiken, The set constraint/CFL reachability connection in practice, Proceedings of the ACM SIGPLAN 2004 conference on Programming language design and implementation, June 09-11, 2004, Washington DC, USA[doi>10.1145/996841.996867]
Norman Adams , David Kranz , Richard Kelsey , Jonathan Rees , Paul Hudak , James Philbin, ORBIT: an optimizing compiler for scheme, Proceedings of the 1986 SIGPLAN symposium on Compiler construction, p.219-233, June 25-27, 1986, Palo Alto, California, USA[doi>10.1145/12276.13333]
David Andrew Kranz , Paul Hudak, Orbit: an optimizing compiler for scheme, Yale University, New Haven, CT, 1988
Landin, P. J. 1964. The mechanical evaluation of expressions. Comput. J. 6, 4, 308--320.
Oukseh Lee , Kwangkeun Yi , Yunheung Paek, A proof method for the corectness of modularized OCFA, Information Processing Letters, v.81 n.4, p.179-185, 28 February 2002[doi>10.1016/S0020-0190(01)00223-X]
Harry G. Mairson, From Hilbert Spaces to Dilbert Spaces: Context Semantics Made Simple, Proceedings of the 22nd Conference Kanpur on Foundations of Software Technology and Theoretical Computer Science, p.2-17, December 12-14, 2002
Pasquale Malacaria , Chris Hankin, A New Approach to Control Flow Analysis, Proceedings of the 7th International Conference on Compiler Construction, p.95-108, March 28-April 04, 1998
David Melski , Thomas Reps, Interconvertibility of a class of set constraints and context-free-language reachability, Theoretical Computer Science, v.248 n.1-2, p.29-98, October 2000[doi>10.1016/S0304-3975(00)00049-9]
Philippe Meunier , Robert Bruce Findler , Matthias Felleisen, Modular set-based analysis from contracts, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.218-231, January 11-13, 2006, Charleston, South Carolina, USA[doi>10.1145/1111037.1111057]
Philippe Meunier , Robert Bruce Findler , Paul Steckler , Mitchell Wand, Selectors Make Set-Based Analysis Too Hard, Higher-Order and Symbolic Computation, v.18 n.3-4, p.245-269, December  2005[doi>10.1007/s10990-005-4876-5]
Midtgaard, J. and Van Horn, D. 2009. Subcubic control flow analysis algorithms. Computer science res. rep. 125, Roskilde University, Roskilde, Denmark. (Revised version to appear in Higher-Order Symbol. Computat.)
Jan Midtgaard , Thomas Jensen, A Calculational Approach to Control-Flow Analysis by Abstract Interpretation, Proceedings of the 15th international symposium on Static Analysis, July 16-18, 2008, Valencia, Spain[doi>10.1007/978-3-540-69166-2_23]
Jan Midtgaard , Thomas P. Jensen, Control-flow analysis of function calls and returns by abstract interpretation, Proceedings of the 14th ACM SIGPLAN international conference on Functional programming, August 31-September 02, 2009, Edinburgh, Scotland[doi>10.1145/1596550.1596592]
Matthew Might, Shape analysis in the absence of pointers and structure, Proceedings of the 11th international conference on Verification, Model Checking, and Abstract Interpretation, January 17-19, 2010, Madrid, Spain[doi>10.1007/978-3-642-11319-2_20]
Matthew Might , Olin Shivers, Environment analysis via ΔCFA, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.127-140, January 11-13, 2006, Charleston, South Carolina, USA[doi>10.1145/1111037.1111049]
Matthew Might , Olin Shivers, Improving flow analyses via ΓCFA: abstract garbage collection and counting, Proceedings of the eleventh ACM SIGPLAN international conference on Functional programming, September 16-21, 2006, Portland, Oregon, USA[doi>10.1145/1159803.1159807]
Matthew Might , Yannis Smaragdakis , David Van Horn, Resolving and exploiting thek-CFA paradox: illuminating functional vs. object-oriented program analysis, Proceedings of the 2010 ACM SIGPLAN conference on Programming language design and implementation, June 05-10, 2010, Toronto, Ontario, Canada[doi>10.1145/1806596.1806631]
Milner, R. 1978. A theory of type polymorphism in programming. J. Comput. Syst. Sci. 17, 348--375.
Markus Mohnen, Efficient Closure Utilisation by Higher-Order Inheritance Analysis, Proceedings of the Second International Symposium on Static Analysis, p.261-278, September 25-27, 1995
Mossin, C. 1997. Flow analysis of typed higher-order programs. Ph.D. dissertation, DIKU, Computer Science Department, University of Copenhagen, Copenhagen, Denmark. Tech, rep. DIKU-TR-97/1.
Christian Mossin, Higher-order value flow graphs, Nordic Journal of Computing, v.5 n.3, p.214-234, Fall 1998
Christian Mossin, Exact flow analysis, Mathematical Structures in Computer Science, v.13 n.1, p.125-156, February 2003[doi>10.1017/S0960129502003857]
Juarez Muylaert Filho , Geoffrey Burn, Continuation passing transformation and abstract interpretation, Proceedings of the First Imperial College Department of Computing Workshop on Theory and formal methods 1993, p.247-259, July 1994, Chelwood Gate, United Kingdom
Peter Møller Neergaard , Harry G. Mairson, Types, potency, and idempotency: why nonlinearity and amnesia make a type system work, Proceedings of the ninth ACM SIGPLAN international conference on Functional programming, September 19-21, 2004, Snow Bird, UT, USA[doi>10.1145/1016850.1016871]
Flemming Nielson , Hanne Riis Nielson, Infinitary control flow analysis: a collecting semantics for closure analysis, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.332-345, January 15-17, 1997, Paris, France[doi>10.1145/263699.263745]
Flemming Nielson , Hanne Riis Nielson, Interprocedural Control Flow Analysis, Proceedings of the 8th European Symposium on Programming Languages and Systems, p.20-39, March 22-28, 1999
Flemming Nielson , Hanne R. Nielson , Chris Hankin, Principles of Program Analysis, Springer-Verlag New York, Inc., Secaucus, NJ, 1999
Hanne Riis Nielson , Flemming Nielson, Flow Logics for Constraint Based Analysis, Proceedings of the 7th International Conference on Compiler Construction, p.109-127, March 28-April 04, 1998
Michael J. O'Donnell, Computing in Systems Described by Equations, Springer-Verlag New York, Inc., Secaucus, NJ, 1977
Nicholas Oxhøj , Jens Palsberg , Michael I. Schwartzbach, Making Type Inference Practical, Proceedings of the European Conference on Object-Oriented Programming, p.329-349, June 29-July 03, 1992
Pacholski, L. and Podelski, A. 1997. Set constraints: A pearl in research on constraints. In Proceedings of the International Conference on Principles and Practice of Constraint Programming. G. Smolka, Ed. Lecture Notes in Computer Science, vol. 1330. Springer-Verlag, Berlin, 549--562.
Jens Palsberg, Flobal Program Analysis in Constraint Form, Proceedings of the 19th International Colloquium on Trees in Algebra and Programming, p.276-290, April 11-13, 1994
Jens Palsberg, Closure analysis in constraint form, ACM Transactions on Programming Languages and Systems (TOPLAS), v.17 n.1, p.47-62, Jan. 1995[doi>10.1145/200994.201001]
Jens Palsberg, Equality-based flow analysis versus recursive types, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.6, p.1251-1264, Nov. 1998[doi>10.1145/295656.295662]
Jens Palsberg, Type-based analysis and applications, Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering, p.20-27, June 2001, Snowbird, Utah, USA[doi>10.1145/379605.379635]
Jens Palsberg , Patrick O'Keefe, A type system equivalent to flow analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.17 n.4, p.576-599, July 1995[doi>10.1145/210184.210187]
Jens Palsberg , Christina Pavlopoulou, From Polyvariant flow information to intersection and union types, Journal of Functional Programming, v.11 n.3, p.263-317, May 2001[doi>10.1017/S095679680100394X]
Jens Palsberg , Michael I. Schwartzbach, Safety analysis versus type inference, Information and Computation, v.118 n.1, p.128-141, April 1995[doi>10.1006/inco.1995.1058]
Jens Palsberg , Scott Smith, Constrained types and their expressiveness, ACM Transactions on Programming Languages and Systems (TOPLAS), v.18 n.5, p.519-527, Sept. 1996[doi>10.1145/232706.232715]
Jens Palsberg , Mitchell Wand, CPS transformation of flow information, Journal of Functional Programming, v.13 n.5, p.905-923, September 2003[doi>10.1017/S0956796802004513]
Young Gil Park , Benjamin Goldberg, Escape analysis on lists, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.116-127, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143125]
Benjamin C. Pierce, Types and programming languages, MIT Press, Cambridge, MA, 2002
Plotkin, G. D. 1975. Call-by-name, call-by-value and the λ-calculus. Theor. Comput. Sci. 1, 125--159.
François Pottier , Nadji Gauthier, Polymorphic typed defunctionalization and concretization, Higher-Order and Symbolic Computation, v.19 n.1, p.125-162, March     2006[doi>10.1007/s10990-006-8611-7]
Jakob Rehof , Manuel Fähndrich, Type-base flow analysis: from polymorphic subtyping to CFL-reachability, Proceedings of the 28th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.54-66, January 2001, London, United Kingdom[doi>10.1145/360204.360208]
John H. Reppy, Concurrent programming in ML, Cambridge University Press, New York, NY, 1999
John Reppy, Type-sensitive control-flow analysis, Proceedings of the 2006 workshop on ML, September 16-16, 2006, Portland, Oregon, USA[doi>10.1145/1159876.1159888]
Reynolds, J. C. 1969. Automatic computation of dataset definitions. In Information Processing 68, vol. 1. A. J. H. Morrell, Ed. 456--461.
John C. Reynolds, Definitional Interpreters for Higher-Order Programming Languages, Higher-Order and Symbolic Computation, v.11 n.4, p.363-397, December 1998[doi>10.1023/A:1010027404223]
John C. Reynolds, Definitional Interpreters Revisited, Higher-Order and Symbolic Computation, v.11 n.4, p.355-361, December 1998[doi>10.1023/A:1010075320153]
Rozas, G. J. 1984. Liar, an Algol-like compiler for Scheme. M.S. thesis, Massachusetts Institute of Technology, Cambridge, MA.
Guillermo Juan Rozas, Taming the Y operator, Proceedings of the 1992 ACM conference on LISP and functional programming, p.226-234, June 22-24, 1992, San Francisco, California, USA[doi>10.1145/141471.141545]
Wojciech Rytter, Fast recognition of pushdown automaton and context-free languages, Information and Control, v.67 n.1-3, p.12-22, Oct./Nov./Dec. 1986[doi>10.1016/S0019-9958(85)80024-3]
Amr Sabry , Matthias Felleisen, Is continuation-passing useful for data flow analysis?, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.1-12, June 20-24, 1994, Orlando, Florida, USA[doi>10.1145/178243.178244]
Saha, B., Heintze, N., and Oliva, D. 1998. Subtransitive CFA using types. Res. rep. 1166, Department of Computer Science, Yale University, New Haven, CT.
David A. Schmidt, Natural-Semantics-Based Abstract Interpretation (Preliminary Version), Proceedings of the Second International Symposium on Static Analysis, p.1-18, September 25-27, 1995
David A. Schmidt, Abstract Interpretation of Small-Step Semantics, Selected papers from the 5th LOMAPS Workshop on Analysis and Verification of Multiple-Agent Languages, p.76-99, June 24-26, 1996
David A. Schmidt, Trace-Based Abstract Interpretation of Operational Semantics, Lisp and Symbolic Computation, v.10 n.3, p.237-271, May 1998[doi>10.1023/A:1007734417713]
J. T. Schwartz, Optimization of very high level languages-I, Computer Languages, v.1 n.2, p.161-194, June, 1975[doi>10.1016/0096-0551(75)90015-6]
J. T. Schwartz , R. B. Dewar , E. Schonberg , E. Dubinsky, Programming with sets; an introduction to SETL, Springer-Verlag New York, Inc., New York, NY, 1986
Sereni, D. 2006. Termination analysis of higher-order functional programs. Ph.D. dissertation, Oxford University, Oxford, U.K.
Damien Sereni, Termination analysis and call graph construction for higher-order functional programs, Proceedings of the 12th ACM SIGPLAN international conference on Functional programming, October 01-03, 2007, Freiburg, Germany[doi>10.1145/1291151.1291165]
Damien Sereni , Neil D. Jones, Termination analysis of higher-order functional programs, Proceedings of the Third Asian conference on Programming Languages and Systems, November 02-05, 2005, Tsukuba, Japan[doi>10.1007/11575467_19]
Manuel Serrano, Control flow analysis: a functional languages compilation paradigm, Proceedings of the 1995 ACM symposium on Applied computing, p.118-122, February 26-28, 1995, Nashville, Tennessee, USA[doi>10.1145/315891.315934]
Manuel Serrano , Marc Feeley, Storage use analysis and its applications, Proceedings of the first ACM SIGPLAN international conference on Functional programming, p.50-61, May 24-26, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/232627.232635]
Sestoft, P. 1988. Replacing function parameters by global variables. M.S. thesis, DIKU, Computer Science Department, University of Copenhagen, Copenhagen, Denmark.
Peter Sestoft, Replacing function parameters by global variables, Proceedings of the fourth international conference on Functional programming languages and computer architecture, p.39-53, September 11-13, 1989, Imperial College, London, United Kingdom[doi>10.1145/99370.99374]
Sestoft, P. 1991. Analysis and efficient implementation of functional programs. Ph.D. dissertation, DIKU, Computer Science Department, University of Copenhagen, Copenhagen, Denmark. DIKU Rapport 92/6.
Zhong Shao , Andrew W. Appel, Space-efficient closure representations, Proceedings of the 1994 ACM conference on LISP and functional programming, p.150-161, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.156783]
Sharir, M. and Pnueli, A. 1981. Two approaches to interprocedural data flow analysis. In Program Flow Analysis: Theory and Applications, Prentice-Hall, Upper Saddle River, NJ. 189--233.
O. Shivers, Control flow analysis in scheme, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.164-174, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54007]
Olin Grigsby Shivers, Control-flow analysis of higher-order languages of taming lambda, Carnegie Mellon University, Pittsburgh, PA, 1991
Olin Shivers, The semantics of Scheme control-flow analysis, Proceedings of the 1991 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.190-198, June 17-19, 1991, New Haven, Connecticut, USA[doi>10.1145/115865.115884]
Siskind, J. M. 1999. Flow-directed lightweight closure conversion. Tech. rep. 99-190R, NEC Research Institute, Inc. Tokyo, Japan.
Scott F. Smith , Tiejun Wang, Polyvariant Flow Analysis with Constrained Types, Proceedings of the 9th European Symposium on Programming Languages and Systems, p.382-396, April 02, 2000
Paul A. Steckler , Mitchell Wand, Lightweight closure conversion, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.1, p.48-86, Jan. 1997[doi>10.1145/239912.239915]
Guy L. Steele, Jr., Rabbit: A Compiler for Scheme, Massachusetts Institute of Technology, Cambridge, MA, 1978
Bjarne Steensgaard, Points-to Analysis by Type Inference of Programs with Structures and Unions, Proceedings of the 6th International Conference on Compiler Construction, p.136-150, April 24-26, 1996
Bjarne Steensgaard, Points-to analysis in almost linear time, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.32-41, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237727]
Steensgaard, B. and Marquard, M. 1994. A polyvariant closure analysis with dynamic widening. Unpublished note. Available at ftp://ftp.research.microsoft.com/pub/analysts/closure.ps.Z.
Dan Stefanescu , Yuli Zhou, An equational framework for the flow analysis of higher order functional programs, Proceedings of the 1994 ACM conference on LISP and functional programming, p.318-327, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.182497]
Tang, Y. M. and Jouvelot, P. 1992. Control-flow effects for escape analysis. In Actes WSA'92 Workshop on Static Analysis. 313--321.
Yan Mei Tang , Pierre Jouvelot, Separate Abstract Interpretation for Control-Flow Analysis, Proceedings of the International Conference on Theoretical Aspects of Computer Software, p.224-243, April 19-22, 1994
Peter Thiemann, A safety analysis for functional languages, Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.133-144, June 14-16, 1993, Copenhagen, Denmark[doi>10.1145/154630.154644]
Tolmach, A. 1997. Combining closure conversion with closure analysis using algebraic types. In Proceedings of the ACM SIGPLAN Workshop on Types in Compilation (TIC'97). Available as tech. rep. BCCS-97-03, Computer Science Department, Boston College, MA.
Andrew Tolmach , Dino P. Oliva, From ML to Ada: Strongly-typed language interoperability via source translation, Journal of Functional Programming, v.8 n.4, p.367-412, July 1998[doi>10.1017/S0956796898003086]
David Van Horn , Harry G. Mairson, Relating complexity and precision in control flow analysis, Proceedings of the 12th ACM SIGPLAN international conference on Functional programming, October 01-03, 2007, Freiburg, Germany[doi>10.1145/1291151.1291166]
David Van Horn , Harry G. Mairson, DecidingkCFA is complete for EXPTIME, Proceedings of the 13th ACM SIGPLAN international conference on Functional programming, September 20-28, 2008, Victoria, BC, Canada[doi>10.1145/1411204.1411243]
David Van Horn , Harry G. Mairson, Flow Analysis, Linearity, and PTIME, Proceedings of the 15th international symposium on Static Analysis, July 16-18, 2008, Valencia, Spain[doi>10.1007/978-3-540-69166-2_17]
Dimitrios Vardoulakis , Olin Shivers, CFA2: a context-free approach to control-flow analysis, Proceedings of the 19th European conference on Programming Languages and Systems, p.570-589, March 20-28, 2010, Paphos, Cyprus[doi>10.1007/978-3-642-11957-6_30]
Arnaud Venet, Nonuniform Alias Analysis of Recursive Data Structures and Arrays, Proceedings of the 9th International Symposium on Static Analysis, p.36-51, September 17-20, 2002
Oscar Waddell , R. Kent Dybig, Fast and Effective Procedure Inlining, Proceedings of the 4th International Symposium on Static Analysis, p.35-52, September 08-10, 1997
Wand, M. 1987. A simple algorithm and proof for type inference. Fundamenta Infomaticae 10, 115--122.
Wand, M. 2002. Analyses that distinguish different evaluation orders, or, unsoundness results in control-flow analysis. Unpublished manuscript. Available at ftp://ftp.ccs.neu.edu/pub/people/wand/papers/order-sensitive-cfa.ps.
Mitchell Wand , Galen B. Williamson, A Modular, Extensible Proof Method for Small-Step Flow Analyses, Proceedings of the 11th European Symposium on Programming Languages and Systems, p.213-227, April 08-12, 2002
Warren, D. H. D. 1982. Higher-order extensions to PROLOG: Are they needed&quest; In Machine Intelligence, vol. 10. J. E. Hayes, D. Michie, and Y.-H. Pao, Eds. Ellis Horwood, 441--454.
Stephen Weeks, Whole-program compilation in MLton, Proceedings of the 2006 workshop on ML, p.1-1, September 16-16, 2006, Portland, Oregon, USA[doi>10.1145/1159876.1159877]
J. B. Wells , Allyn Dimock , Robert Muller , Franklyn Turbak, A calculus with polymorphic and polyvariant flow types, Journal of Functional Programming, v.12 n.3, p.183-227, May 2002[doi>10.1017/S0956796801004245]
Andrew K. Wright , Suresh Jagannathan, Polymorphic splitting: an effective polyvariant flow analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.1, p.166-207, Jan. 1998[doi>10.1145/271510.271523]
Young, J. and Hudak, P. 1986. Finding fixpoints on function spaces. Tech. rep. res. rep. YALEEU/DCS/RR-505, Yale University, New Haven, CT.
