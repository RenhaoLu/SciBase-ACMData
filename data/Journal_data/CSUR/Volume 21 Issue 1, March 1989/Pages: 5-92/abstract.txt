Human-computer interface management, from a computer science viewpoint, focuses on the process of developing quality human-computer interfaces, including their representation, design, implementation, execution, evaluation, and maintenance. This survey presents important concepts of interface management: dialogue independence, structural modeling, representation, interactive tools, rapid prototyping, development methodologies, and control structures.Dialogue independenceis the keystone concept upon which all the other concepts depend. It is a characteristic that separates design of the interface from design of the computational component of an application system so that modifications in either tend not to cause changes in the other. The role of a dialogue developer, whose main purpose is to create quality interfaces, is a direct result of the dialogue independence concept.Structural models of the human-computer interfaceserve as frameworks for understanding the elements of interfaces and for guiding the dialogue developer in their construction.Representation of the human-computer interfaceis accomplished by a variety of notational schemes for describing the interface. Numerous kinds ofinteractive tools for human-computer interface developmentfree the dialogue developer from much of the tedium of "coding" dialogue. The early ability to observe behavior of the interface—and indeed that of the whole application system—provided byrapid prototypingincreases communication among system designers, implementers, evaluators, and end-users.Methodologies for interactive system developmentconsider interface management to be an integral part of the overall development process and give emphasis to evaluation in the development life cycle. Finally, several types ofcontrol structuresgovern how sequencing among dialogue and computational components is designed and executed. Numerous systems for human-computer interface management are presented t
o illustrate these concepts.