F.T. Baker, H.D. Mills, "Chief programmer teams", Datamation 19, 12 (December, 1973), 58-61.
Corrado BÃ¶hm , Giuseppe Jacopini, Flow diagrams, turing machines and languages with only two formation rules, Communications of the ACM, v.9 n.5, p.366-371, May 1966[doi>10.1145/355592.365646]
Ole Johan Dahl, Structured Programming, Academic Press, Inc., Orlando, FL, 1972
Edsger W. Dijkstra, The humble programmer, Communications of the ACM, v.15 n.10, p.859-866, Oct. 1972[doi>10.1145/355604.361591]
Edsger W. Dijkstra, Letters to the editor: go to statement considered harmful, Communications of the ACM, v.11 n.3, p.147-148, March 1968[doi>10.1145/362929.362947]
C, A. R, Hoare, "Hints for programming language design", Stanford Computer Science Technical Report CS-74-403 (January 1974),
Brian W. Kernighan , P. J. Plauger, The  Elements of Programming Style, McGraw-Hill, Inc., New York, NY, 1982
DL E. Knuth~ "An empirical study of Fortran programs", Software - Practice and Experience 1, (1971), 105-133.
Donald E. Knuth, Structured Programming withgo toStatements, ACM Computing Surveys (CSUR), v.6 n.4, p.261-301, Dec. 1974[doi>10.1145/356635.356640]
B. M. Leavenworth, Programming with(out) the GOTO, Proceedings of the ACM annual conference, p.782-786, August 01-01, 1972, Boston, Massachusetts, United States[doi>10.1145/800194.805859]
John McCarthy, Recursive functions of symbolic expressions and their computation by machine, Part I, Communications of the ACM, v.3 n.4, p.184-195, April 1960[doi>10.1145/367177.367199]
H. D. Mills, "Top down 9rogramming in large systems", in Debugging Techniques in Large Sy~.! terns, ed. by R. Rustin. Prentice-Hall, Inc. (1971), 41-55.
G. M. Weinberg, The psychology of computer programming, Van Nostrand Reinhold Co., New York, NY, 1988
William A. Wulf, A case against the GOTO, Proceedings of the ACM annual conference, p.791-797, August 01-01, 1972, Boston, Massachusetts, United States[doi>10.1145/800194.805861]
