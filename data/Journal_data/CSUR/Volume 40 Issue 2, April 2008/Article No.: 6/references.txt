Mehmet Aksit , Jan Willem Dijkstra , Anand Tripathi, Atomic Delegation: Object-Oriented Transactions, IEEE Software, v.8 n.2, p.84-92, March 1991[doi>10.1109/52.73753]
Paul E. Ammann , John C. Knight, Data Diversity: An Approach to Software Fault Tolerance, IEEE Transactions on Computers, v.37 n.4, p.418-425, April 1988[doi>10.1109/12.2185]
Massimo Ancona , Gabriella Dodero , Vittoria Gianuzzi , Andrea Clematis , Eduardo B. Fernandez, A System Architecture for Fault Tolerance in Concurrent Software, Computer, v.23 n.10, p.23-32, October 1990[doi>10.1109/2.58234]
Brian G. Anderson , Dennis Shasha, Persistant Linda: Linda + Transactions + Query Processing, Research Directions in High-Level Parallel Programming Languages, p.93-109, June 17-19, 1991
T. Anderson , P. A. Barrett , D. N. Halliwell , M. R. Moulding, Software Fault Tolerance: An Evaluation, IEEE Transactions on Software Engineering, v.11 n.12, p.1502-1510, December 1985[doi>10.1109/TSE.1985.231894]
Gregory R. Andrews , Ronald A. Olsson, The SR programming language: concurrency in practice, Benjamin-Cummings Publishing Co., Inc., Redwood City, CA, 1993
AspectCpp. 2007. The home of AspectC&plus;&plus;. www.aspectc.org (last accessed Aug. 21, 2007).
Avizienis, A. 1995. The methodology of N-version programming. In Software Fault Tolerance, M. Lyu, ed. John Wiley and Sons, New York, Chapter 2, 23--46.
A. Avizienis, The N-Version Approach to Fault-Tolerant Software, IEEE Transactions on Software Engineering, v.11 n.12, p.1491-1501, December 1985[doi>10.1109/TSE.1985.231893]
Avizienis, A., Laprie, J.-C., and Randell, B. 2004a. Dependability and its threats: A taxonomy. In Proceedings of the IFIP 18th World Computer Congress. Kluwer Academic, 91--120.
Algirdas Avizienis , Jean-Claude Laprie , Brian Randell , Carl Landwehr, Basic Concepts and Taxonomy of Dependable and Secure Computing, IEEE Transactions on Dependable and Secure Computing, v.1 n.1, p.11-33, January 2004[doi>10.1109/TDSC.2004.2]
David Edward Bakken , Richard D. Schlichting, Supporting Fault-Tolerant Parallel Programming in Linda, IEEE Transactions on Parallel and Distributed Systems, v.6 n.3, p.287-302, March 1995[doi>10.1109/71.372777]
Bao, Y., Sun, X., and Trivedi, K. 2003. Adaptive software rejuvenation: Degradation models and rejuvenation schemes. In Proceedings of the International Conference on Dependable Systems and Networks (DSN). IEEE Computer Society.
Berndt, D. 1989. C-Linda Reference Manual. Scientific Computing Associates.
Kenneth Birman , André Schiper , Pat Stephenson, Lightweight causal and atomic group multicast, ACM Transactions on Computer Systems (TOCS), v.9 n.3, p.272-314, Aug. 1991[doi>10.1145/128738.128742]
Andrew D. Birrell , Bruce Jay Nelson, Implementing remote procedure calls, ACM Transactions on Computer Systems (TOCS), v.2 n.1, p.39-59, February 1984[doi>10.1145/2080.357392]
A. Bondavalli , S. Chiaradonna , F. Di Giandomenico , F. Grandoni, Discriminating Fault Rate and Persistency to Improve Fault Treatment, Proceedings of the 27th International Symposium on Fault-Tolerant Computing (FTCS '97), p.354, June 25-27, 1997
Bonér, J. 2004. AspectWerkz---Dynamic AOP for Java. In Proceedings of the International Conference on Aspect-Oriented Software Development (AOSD).
Bonér, J. and Vasseur, A. 2004. Dynamic AOP: SOA for the application. Tutorial presented at the Annual BEA eWorld Technology Conference.
Cannon, S. and Dunn, D. 1992. A high-level model for the development of fault-tolerant parallel and distributed systems. Tech. Rep. A0192, Department of Computer Science, Utah State University. August.
Nicholas Carriero , David Gelernter, How to write parallel programs: a guide to the perplexed, ACM Computing Surveys (CSUR), v.21 n.3, p.323-357, Sep. 1989[doi>10.1145/72551.72553]
Nicholas Carriero , David Gelernter, Linda in context, Communications of the ACM, v.32 n.4, p.444-458, April 1989[doi>10.1145/63334.63337]
Cristian, F. 1995. Exception handling. In Software Fault Tolerance, M. Lyu, ed. Wiley, 81--107.
De Florio, V. 1998. The DIR net: A distributed system for detection, isolation, and recovery. Tech. Rep. ESAT/ACCA/1998/1, University of Leuven. October.
De Florio, V. 1997a. The EFTOS recovery language. Tech. Rep. ESAT/ACCA/1997/4, University of Leuven. December.
De Florio, V. 1997b. The voting farm---A distributed class for software voting. Tech. Rep. ESAT/ACCA/1997/3, University of Leuven. June.
De Florio, V. and Blondia, C. 2007a. Adaptation as a new requirement for software engineering. In Proceedings of the 1st IEEE Workshop on Adaptive and Dependable Mission- and Business-Critical Mobile Systems (ADAMUS) at the IEEE International Symposium on a World of Wireless, Mobile and Multimedia Networks (WoWMom), Helsinki, Finland.
Vincenzo De Florio , Chris Blondia, Reflective and Refractive Variables: A Model for Effective and Maintainable Adaptive-and-Dependable Software, Proceedings of the 33rd EUROMICRO Conference on Software Engineering and Advanced Applications, p.307-313, August 28-31, 2007[doi>10.1109/EUROMICRO.2007.52]
Vincenzo De Florio , Chris Blondia, A System Structure for Adaptive Mobile Applications, Proceedings of the Sixth IEEE International Symposium on World of Wireless Mobile and Multimedia Networks, p.270-275, June 13-16, 2005[doi>10.1109/WOWMOM.2005.12]
Vincenzo De Florio , Geert Deconinck, REL: A Fault Tolerance Linguistic Structure for Distributed Applications, Proceedings of the 9th IEEE International Conference on Engineering of Computer-Based Systems, p.51-58, April 08-11, 2002
De Florio, V., Deconinck, G., Lauwereins, R., and Graeber, S. 2001. Design and implementation of a data stabilizing software tool. In Proceedings of the 9th Euromicro Workshop on Parallel and Distributed Processing (Euro-PDP), Mantova, Italy. IEEE Computer Society Press.
De Florio, V., Deconinck, G., and Lauwereins, R. 2000. An algorithm for tolerating crash failures in distributed systems. In Proceedings of the 7th Annual IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS), Edinburgh, Scotland. IEEE Computer Society Press, 9--17.
De Florio, V., Deconinck, G., and Lauwereins, R. 1999. An application-level dependable technique for farmer-worker parallel programs. Informatica 23, 2 (May), 275--281.
Vincenzo De Florio , Geert Deconinck , Rudy Lauwereins, The EFTOS Voting Farm: A Software Tool for Fault Masking in Message Passing Parallel Environments, Proceedings of the 24th Conference on EUROMICRO, p.10379, August 25-27, 1998
De Florio, V., Deconinck, G., and Lauwereins, R. 1998b. Software tool combining fault masking with user-defined recovery strategies. IEE Proc. Softw. 145, 6 (Dec.), 203--211. SI Depend. Comput. Syst. IEE in association with the British Computer Society.
De Florio, V., Deconinck, G., Truyens, M., Rosseel, W., and Lauwereins, R. 1998c. A hypermedia distributed application for monitoring and fault-injection in embedded fault-tolerant parallel programs. In Proceedings of the 6th Euromicro Workshop on Parallel and Distributed Processing (Euro-PDP), Madrid, Spain. IEEE Computer Society Press, 349--355.
De Florio, V., Murgolo, F. P., and Spinelli, V. 1994. PvmLinda: Integration of two different computation paradigms. In Proceedings of the 1st Euromicro Conference on Massively Parallel Computing Systems (MPCS), Ischia, Italy. IEEE Computer Society Press, 488--496.
Peter J. Denning, Fault Tolerant Operating Systems, ACM Computing Surveys (CSUR), v.8 n.4, p.359-389, Dec. 1976[doi>10.1145/356678.356680]
Ebnenasir, A. and Kulkarni, S. 2004. Hierarchical presynthesized components for automatic addition of fault tolerance: A case study. In Proceedings of the Specification and Verification of Component-Based Systems Workshop (SAVCBS) at ACM SIGSOFT/FSE-12.
D. E. Eckhardt , L. D. Lee, A Theoretical Basis for the Analysis of Multiversion Software Subject to Coincident Errors, IEEE Transactions on Software Engineering, v.11 n.12, p.1511-1517, December 1985[doi>10.1109/TSE.1985.231895]
Dave E. Eckhardt , Alper K. Caglayan , John C. Knight , Larry D. Lee , David F. McAllister , Mladen A. Vouk , John J. P. Kelly, An Experimental Evaluation of Software Redundancy as a Strategy for Improving Reliability, IEEE Transactions on Software Engineering, v.17 n.7, p.692-702, July 1991[doi>10.1109/32.83905]
Giorgos Efthivoulidis , Evangelos A. Verentziotis , Apostolos N. Meliones , Theodora A. Varvarigou , Antonios Kontizas , Geert Deconinck , Vincenzo De Florio, Fault-Tolerant Communication in Embedded Supercomputing, IEEE Micro, v.18 n.5, p.42-52, September 1998[doi>10.1109/40.735943]
E. N. (Mootaz) Elnozahy , Lorenzo Alvisi , Yi-Min Wang , David B. Johnson, A survey of rollback-recovery protocols in message-passing systems, ACM Computing Surveys (CSUR), v.34 n.3, p.375-408, September 2002[doi>10.1145/568522.568525]
Jean-Charles Fabre , Tanguy Pérennou, A Metaobject Architecture for Fault-Tolerant Distributed Systems: The FRIENDS Approach, IEEE Transactions on Computers, v.47 n.1, p.78-95, January 1998[doi>10.1109/12.656088]
Jean-Charles Fabre , Tanguy Pérennou, Friends - A Flexible Architecture for Implementing Fault Tolerant and Secure Distributed Applications, Proceedings of the Second European Dependable Computing Conference on Dependable Computing, p.3-20, October 02-04, 1996
David Gelernter, Generative communication in Linda, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.1, p.80-112, Jan. 1985[doi>10.1145/2363.2433]
Glandrup, M. H. J. 1995. Extending C&plus;&plus; using the concepts of composition filters. M.S. thesis, Department of Computer Science, University of Twente, Enschede, The Netherlands.
Green , P. A.Jr, The Art Of Creating Reliable Software-Based Systems Using Off-The-Shelf Software Components, Proceedings of the 16th Symposium on Reliable Distributed Systems, p.118, October 22-24, 1997
Rachid Guerraoui , André Schiper, Software-Based Replication for Fault Tolerance, Computer, v.30 n.4, p.68-74, April 1997[doi>10.1109/2.585156]
C. A. R. Hoare, Communicating sequential processes, Communications of the ACM, v.21 n.8, p.666-677, Aug. 1978[doi>10.1145/359576.359585]
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Arnulf Mester, ACM fellow profile: James Jay (Jim) Horning, ACM SIGSOFT Software Engineering Notes, v.23 n.4, p.7-8, July 1998[doi>10.1145/286366.286367]
Huang, Y. and Kintala, C. M. 1995. Software fault tolerance in the application layer. In Software Fault Tolerance, M. Lyu, ed. John Wiley and Sons, New York, Chapter 10, 231--248.
Huang, Y., Kintala, C. M., Bernstein, L., and Wang, Y. 1996. Components for software fault tolerance and rejuvenation. AT&T; Tech. J., 29--37.
Nick Kolettis , N. Dudley Fulton, Software Rejuvenation: Analysis, Module and Applications, Proceedings of the Twenty-Fifth International Symposium on Fault-Tolerant Computing, p.381, June 27-30, 1995
Inquiry Board Report. 1996. ARIANE 5---Flight 501 failure. http://www.esrin.esa.it/htdocs/tidc/Press/Press96/ariane5rep.html.
Jalote, P. and Campbell, R. H. 1985. Atomic actions in concurrent systems. In Proceedings of the 5th International Conference on Distributed Computing Systems (ICDCS), Denver, CO. ISBN 0-8186-0617-7.
Barry W. Johnson, Design & analysis of fault tolerant digital systems, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1988
Kambhatla, S. 1991. Replication issues for a distributed and highly available Linda tuple space. M.S. thesis, Department of Computer Science, Oregon Graduate Institute.
Kiczales, G. 2000. AspectJ#8482;: Aspect-Oriented programming using Java#8482; technology. In Proceedings of the Sun's Worldwide Java Developer Conference (JavaOne). San Francisco, CA. Slides available at URL http://aspectj.org/servlets/AJSite?channel=documentation&subChannel;=papersAndSlides.
Gregor Kiczales , Mira Mezini, Separation of concerns with procedures, annotations, advice and pointcuts, Proceedings of the 19th European conference on Object-Oriented Programming, July 25-29, 2005, Glasgow, UK[doi>10.1007/11531142_9]
Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Videira Lopes, C., Loingtier, J.-M., and Irwin, J. 1997. Aspect-Oriented programming. In Proceedings of the European Conference on Object-Oriented Programming (ECOOP) Lecture Notes in Computer Science, vol. 1241. Springer, Berlin, Finland.
Gregor Kiczales , Jim Des Rivieres, The  Art of the Metaobject Protocol, MIT Press, Cambridge, MA, 1991
Jörg Kienzle , Rachid Guerraoui, AOP: Does It Make Sense? The Case of Concurrency and Failures, Proceedings of the 16th European Conference on Object-Oriented Programming, p.37-61, June 10-14, 2002
Eugene Eric Kim, CGI Developers Guide, Sams, Indianapolis, IN, 1996
K. H. Kim , Howard O. Welch, Distributed Execution of Recovery Blocks: An Approach for Uniform Treatment of Hardware and Software Faults in Real-Time Applications, IEEE Transactions on Computers, v.38 n.5, p.626-636, May 1989[doi>10.1109/12.24266]
Leonard Kleinrock, Theory, Volume 1, Queueing Systems, Wiley-Interscience, 1975
Donald E. Knuth, Literate programming, The Computer Journal, v.27 n.2, p.97-111, May 1984[doi>10.1093/comjnl/27.2.97]
Kulkarni, S. S. and Arora, A. 2000. Automating the addition of fault tolerance. Tech. Rep. MSU-CSE-00-13, Department of Computer Science, Michigan State University, East Lansing, Michigan. June.
Laprie, J.-C. 1998. Dependability of computer systems: From concepts to limits. In Proceedings of the IFIP International Workshop on Dependable Computing and Its Applications (DCIA). Johannesburg, South Africa.
Laprie, J.-C. 1995. Dependability---Its attributes, impairments and means. In Predictably Dependable Computing Systems, B. Randell et al., eds. ESPRIT Basic Research Series. Springer, Berlin, 3--18.
J.C. C. Laprie , A. Avizienis , H. Kopetz, Dependability: Basic Concepts and Terminology, Springer-Verlag New York, Inc., Secaucus, NJ, 1992
Leslie Lamport , Robert Shostak , Marshall Pease, The Byzantine Generals Problem, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.382-401, July 1982[doi>10.1145/357172.357176]
Le Lann, G. 1996. The Ariane 5 flight 501 failure---A case study in system engineering for computing systems. Tech. Rep. 3079, INRIA. December.
Nancy G. Leveson, Safeware: system safety and computers, ACM, New York, NY, 1995
Martin Lippert , Cristina Videira Lopes, A study on exception detection and handling using aspect-oriented programming, Proceedings of the 22nd international conference on Software engineering, p.418-427, June 04-11, 2000, Limerick, Ireland[doi>10.1145/337180.337229]
Barbara Liskov, Distributed programming in Argus, Communications of the ACM, v.31 n.3, p.300-312, March 1988[doi>10.1145/42392.42399]
Lorczak, P. R., Caglayan, A. K., and Eckhardt, D. E. 1989. A theoretical investigation of generalized voters for redundant systems. In Proceedings of the 19th International Symposium on Fault-Tolerant Computing (FTCS), Chicago, IL, 444--451.
Michael R. Lyu, Keynote Speech: Design Testing and Evaluation Techniques for Software Reliability Engineering, Proceedings of the 24th Conference on EUROMICRO, p..39, August 25-27, 1998
Lyu, M. R. 1998b. Reliability-Oriented software engineering: Design, testing and evaluation techniques. IEE Proc. Softw. SI Depend. Comput. Syst. 145, 6 (Dec.), 191--197.
Michael R. Lyu, Handbook of software reliability engineering, McGraw-Hill, Inc., Hightstown, NJ, 1996
Michael R. Lyu, Software Fault Tolerance, John Wiley & Sons, Inc., New York, NY, 1995
Pattie Maes, Concepts and experiments in computational reflection, Conference proceedings on Object-oriented programming systems, languages and applications, p.147-155, October 04-08, 1987, Orlando, Florida, USA[doi>10.1145/38765.38821]
Hidehiko Masuhara , Satoshi Matsuoka , Takuo Watanabe , Akinori Yonezawa, Object-oriented concurrent reflective languages can be implemented efficiently, conference proceedings on Object-oriented programming systems, languages, and applications, p.127-144, October 18-22, 1992, Vancouver, British Columbia, Canada[doi>10.1145/141936.141948]
Meyer, B. 1997. Fault-Tolerant Computer Systems Design. Prentice-Hall, NJ.
NRC. 1993. Switch focus team report. Tech. Rep., National Reliability Council. June.
OMG. 1998. Fault tolerant CORBA using entity redundancy. Tech. Rep. Request for Proposal, Object Management Group (OMG). December.
Ostermann, K. 1999. Towards a composition taxonomy. Tech. Rep., Siemens AG CT SE 2.
Jukka Paakki, Attribute grammar paradigms—a high-level methodology in language implementation, ACM Computing Surveys (CSUR), v.27 n.2, p.196-255, June 1995[doi>10.1145/210376.197409]
Parrington, G. D. 1990. Reliable distributed programming in C&plus;&plus;: The Arjuna approach. In Proceedings of the 2nd Usenix C&plus;&plus; Conference, San Francisco, 37--50.
Parsytec. 1996. Parsytec CC Series---Cognitive Computing. Parsytec GmbH, Aachen, Germany.
Lewis I. Patterson , Richard S. Turner , Robert M. Hyatt, Construction of a fault-tolerant distributed tuple-space, Proceedings of the 1993 ACM/SIGAPP symposium on Applied computing: states of the art and practice, p.279-285, February 14-16, 1993, Indianapolis, Indiana, USA[doi>10.1145/162754.162899]
Powell, D. 1997. Preliminary definition of the GUARDS architecture. Tech. Rep. 96277, LAAS-CNRS. January.
D. Powell , J. Arlat , L. Beus-Dukic , A. Bondavalli , P. Coppola , A. Fantechi , E. Jenn , C. Rabéjac , A. Wellings, GUARDS: A Generic Upgradable Architecture for Real-Time Dependable Systems, IEEE Transactions on Parallel and Distributed Systems, v.10 n.6, p.580-599, June 1999[doi>10.1109/71.774908]
Dhiraj K. Pradhan, Fault-tolerant computer system design, Prentice-Hall, Inc., Upper Saddle River, NJ, 1996
Randell, B. 1975. System structure for software fault tolerance. IEEE Trans. Softw. Eng. 1, 220--232.
Randell, B. and Xu, J. 1995. The evolution of the recovery block concept. In Software Fault Tolerance, M. Lyu, ed. John Wiley and Sons, New York, Chapter 1, 1--21.
Robben, B. 1999. Language technology and metalevel architectures for distributed objects. Ph.D. thesis, Department of Computer Science, University of Leuven.
J. H. Saltzer , D. P. Reed , D. D. Clark, End-to-end arguments in system design, ACM Transactions on Computer Systems (TOCS), v.2 n.4, p.277-288, Nov. 1984[doi>10.1145/357401.357402]
Richard D. Schlichting , Vicraj T. Thomas, Programming Language Support for Writing Fault-Tolerant Distributed Software, IEEE Transactions on Computers, v.44 n.2, p.203-212, February 1995[doi>10.1109/12.364532]
Fred B. Schneider, Implementing fault-tolerant services using the state machine approach: a tutorial, ACM Computing Surveys (CSUR), v.22 n.4, p.299-319, Dec. 1990[doi>10.1145/98163.98167]
Schoinas, G. 1991. Issues on the implementation of POSYBL: A free Linda implementation for Unix networks. Tech. Rep., Department of Computer Science, University of Crete.
Scott, R., Gault, J., and McAllister, D. 1985. The consensus recovery block. In Proceedings of the Total System Reliability Symposium, 74--85.
Neil J. A. Sloane , Aaron D. Wyner , Claude E. Shannon, Claude Elwood Shannon: collected papers, IEEE Press, Piscataway, NJ, 1993
Santosh K. Shrivastava, Lessons Learned from Building and Using the Arjuna Distributed Programming System, Selected Papers from the International Workshop on Theory and Practice in Distributed Systems, p.17-32, September 05-09, 1994
Shrivastava, S. 1978. Sequential Pascal with recovery blocks. Softw. Pract. Exper. 8, 177--185.
Sibley, E. H. 1998. Computer security, fault tolerance, and software assurance: From needs to solutions. In Proceedings of the Workshops on Computer Security, Fault Tolerance, and Software Assurance: From Needs to Solutions, York, UK.
Daniel P. Siewiorek , Robert S. Swarz, Reliable computer systems (2nd ed.): design and evaluation, Digital Press, Newton, MA, 1992
Spinczyk, O., Lohmann, D., and Urban, M. 2005. AspectC&plus;&plus;: An AOP extension for C&plus;&plus;. Softw. Dev. J., 68--76.
Masato Suzuki , Takuya Katayama , Richard Schlichting, FTAG: A Functional and Attribute Based Model for Writing Fault-TolerantSoftware, University of Arizona, Tucson, AZ, 1996
Andrew S. Tanenbaum, Structured computer organization (3rd ed.), Prentice-Hall, Inc., Upper Saddle River, NJ, 1989
D. J. Taylor , D. E. Morgan , J. P. Black, Redundancy in Data Structures: Improving Software Fault Tolerance, IEEE Transactions on Software Engineering, v.6 n.6, p.585-594, November 1980[doi>10.1109/TSE.1980.234507]
van Achteren, T. 1997. Object georienteerde afleiding van metaobjecten voor foutbestendigheid in de friends omgeving. M.S. thesis, Department of Electrical Engineering, University of Leuven. In Flemish.
Vasseur, A. 2004. Dynamic AOP and runtime weaving for Java---How does AspectWerkz address it&quest; In Proceedings of AOSD 2004, Dynamic AOP WorkShop.
Weik, M. H. 1961. The ENIAC story. ORDNANCE J. Amer. Ordnance Assoc. http://ftp.arl.mil/~mike/comphist/eniac-story.html.
Lauren Ruth Wiener, Digital Woes: Why We Should Not Depend on Software, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1993
Xu, A. and Liskov, B. 1989. A design for a fault-tolerant, distributed implementation of Linda. In Proceedings of the 19th International IEEE Symposium on Fault-Tolerant Computing (FTCS). IEEE, 199--206.
Zawinski, J. 1994. Remote control of UNIX Netscape. Tech. Rep., Netscape Communications Corp. December. wp.netscape.com/newsref/std/x-remote.html.
