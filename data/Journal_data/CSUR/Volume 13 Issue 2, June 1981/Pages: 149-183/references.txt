Peter A. Alsberg , John D. Day, A principle for resilient sharing of distributed resources, Proceedings of the 2nd international conference on Software engineering, p.562-570, October 13-15, 1976, San Francisco, California, United States
T. Anderson , R. Kerr, Recovery blocks in action: A system supporting high reliability, Proceedings of the 2nd international conference on Software engineering, p.447-457, October 13-15, 1976, San Francisco, California, United States
ANDERSON, T., LEE, P. A., AND SHRIVAS- TAVA, S.K. "A model of recoverability in multilevel systems," IEEE Trans. Softw. Eng. SE-4, 6 (Nov. 1978), 486-494. The issues involved in supporting backward error recovery for abstract objects m layered multilevel interpretive systems are examined. Two recovery schemes (disjoint and inclusive) are presented for implementing recoverable objects
BARTLETT, J.F., "A 'non stop' operating system," Tandem Computers Inc., Cupertino, Calif., 1977. The design of Guardian, the operating system for a fault-tolerant, general-purpose, multiple-computer commercial system, is discussed. Guardian ts constructed from processes which communicate via messages. Fault tolerance is achieved by duplicating hardware and software components and checkpointing state changes so that a backup process may take over in the case of a failure.
BERNSTEIN, P. A., ROTHNIE, J. B. JR., GOODMAN, N., AND PAPADIMITRIOU, C. A. "The concurrency control mechanism of SDD-I: A system for distributed databases. (the fully redundant case)," IEEE Trans. Soflw. Eng. SE-4, 3 (May 1978), 154-168. This paper describes a method for updating data stored redundantly in a network of database management systems. The overhead of always locking all copies of data being updated is avoided by predefining transaction classes that require different levels of synchronization
BERNSTEIN, P A., SHIPMAN, D. W., AND WONG, W.S. "Formal aspects of senallzability in database concurrency control," IEEE Trans. Soflw. Eng. SE-5, 3 (May 1979), 203-216. A formal model based on the use of a log of transaction read and write steps is developed for analyzing and comparing the behavior of different database concurrency control mechanisms. A simple centralized system that permits one read operation and one write operation per transaction is assumed for the analysis. Several proposed mechanisms that do not explicitly lock entities are shown to be equivalent to locking but to allow less concurrency than the conflict analysis method used in SDD-1
Philip A. Bernstein , David W. Shipman, The correctness of concurrency control mechanisms in a system for distributed databases (SDD-1), ACM Transactions on Database Systems (TODS), v.5 n.1, p.52-68, March 1980[doi>10.1145/320128.320133]
Philip A. Bernstein , David W. Shipman , James B. Rothnie, Jr., Concurrency control in a system for distributed databases (SDD-1), ACM Transactions on Database Systems (TODS), v.5 n.1, p.18-51, March 1980[doi>10.1145/320128.320131]
E. G. Coffman , M. Elphick , A. Shoshani, System Deadlocks, ACM Computing Surveys (CSUR), v.3 n.2, p.67-78, June 1971[doi>10.1145/356586.356588]
Peter J. Denning, Fault Tolerant Operating Systems, ACM Computing Surveys (CSUR), v.8 n.4, p.359-389, Dec. 1976[doi>10.1145/356678.356680]
ECKHOUSE, R. H. JR., AND STANKOVIC, J.A. "Issues in distributed processing-- An overview of two workshops," Computer 11, 1 (Jan. 1978), 22-26. A summary Gf two workshops on distributed computing held at Brown University m 1976 and 1977. The workshops had three broadly defined goals: (1) to define the field of distributed processing more precisely, (2) to examine the state of the art, and (3) to identify problem areas for future research.
ELLIS, C. "A robust algorithm for updating duplicate databases," in Proc. 2nd Berkeley Workshop on Distributed Management of Data and Computer Networks," Berkeley, Calif., May 1977, pp. 146-158. Two algorithms, centralized and decentralized, for updating a distributed multiple copy database are formally specified using evaluation nets, a modified form of Petri net. The decentralized solution is robust with respect to node failure.
ENSLOW, P. H. JR. "What is a 'distributed' data processing system?" Computer 11, 1 (Jan. 1978), 13-21. Since the term "distributed processing" has become overused and misused, this paper is an attempt to specify the characteristics of a new class of systems to be called "distributed data processing systems." These systems are characterized along three dimensions: hardware decentralization, control decentralization, and database decentralization. The systems of interest exhibit a high degree of distribution in all dimensions, as well as a high degree of cooperative autonomy in their overall operation.
K. P. Eswaran , J. N. Gray , R. A. Lorie , I. L. Traiger, The notions of consistency and predicate locks in a database system, Communications of the ACM, v.19 n.11, p.624-633, Nov. 1976[doi>10.1145/360363.360369]
GARCIA-MOLINA, H. "Performance comparison of two update algorithms for distributed databases," m Proc. 3rd Berkeley Workshop on D~str~buted Data Manage. ment and Computer Networks, Berkeley, Calif., 1978, pp. 108-119. A detailed set of simulations is used to compare the performance of two update algorithms: centralized locking and distributed voting. The database is assumed to be fully replicated at each site, and updates are the only access operations. The results show that centralized locking performs considerably better than distributed voting on a wide variety of measures except in highload cases where both perform poorly.
GARCIA-MOLINA, H. "A concurrency control mechanism for distributed databases which uses centralized locking controllers," m Proc. 4th Berkeley Conf. D~stributed Data Management and Computer Networks, Berkeley, Calif., Aug. 1979, pp. 113-124. A concurrency control mechamsm based on independent centralized controllers which operate without explicit backup is proposed. A modified two-phase commit protocol that requires only a majority of acknowledgments from copies is used to perform updates.
GLIGOR, V. D., AND SHATTUCK, S. H. "On deadlock detection in distributed systems," IEEE Trans. Soflw. Eng. SE-6, 5 (Sept. 1980), 435-440. A counterexample ts used to show that one of the two deadlock detection protocols proposed by Menasce and Muntz {MESA79}, the distributed protocol, is incorrect. Furthermore, it is argued that even a corrected version of this or any similar distributed protocol will be impractical due to performance considerations.
GRAY, J. N., LORIE, R. A., AND PUTZOLU, G.R. "Granularity of locks in a shared data base," in Proc Int. Conference Very Large Data Bases, Sept. 1975, vol. 1, no. 1, pp. 428-451. A method for locking sets of resources described by tree and directed acychc graph hierarchies is presented. The protocol allows simultaneous locking at various granularities and is based on the introduction of additional lock modes that are assigned to the ancestor nodes.
Jim Gray, Notes on Data Base Operating Systems, Operating Systems, An Advanced Course, p.393-481, January 1978
HAMMER, M., AND SHIPMAN, D. "An overview of reliability mechanisms for a distributed data base system," in COMP. CON Spring "78 Proc, Feb. 1978, pp. 63- 65. Mechanisms to create a rehable network that guarantees the eventual delivery of messages and the broadcast of messages to a number of sites are discussed. This approach is being used to support the redundant update mechanisms of SDD-1, a distributed database system being designed and implemented by the Computer Corporation of America.
Anita K. Jones, The Object Model: A Conceptual Tool for Structuring Software, Operating Systems, An Advanced Course, p.7-16, January 1978
KATZMAN, J.A. "A fault-tolerant computing system," Tandem Computers, inc., Cupertino, Calif., 1977. The hardware architecture of a fault-tolerant commercially available computer system is described. The design goals were (I) to provide continuous operation through any single hardware failure, and (2) to be able to repair failures while the system remains on-hne.
Klaus Lagally, Synchronization in a Layered System, Operating Systems, An Advanced Course, p.252-281, January 1978
Leslie Lamport, Time, clocks, and the ordering of events in a distributed system, Communications of the ACM, v.21 n.7, p.558-565, July 1978[doi>10.1145/359545.359563]
LAMPSON, B. W., AND STURGIS, H. E "Crash recovery in a distributed storage system," unpublished paper, Computer Science Lab., Xerox Palo Alto Research Center, Palo Alto, Calif., 1976. An algorithm for maintaining the consistency of a distributed file system in the presence of individual crashes is presented. The algorithm is based on the use of an "intentions list" to implement atomic transactions.
LAMPSON, B. W., AND STURGIS, H. E. "Crash recovery in a distributed storage system," unpublished paper, Computer Scmnce Lab., Xerox Palo Alto Research Center, Palo Alto, Calif., 1979. A revised and expanded algorithm is presented for maintaining the consistency and reliable storage of data in a distributed system when different portions of the database are updated as a single transaction. The approach is based on implementing a hierarchy of abstract machines.
Henry F. Ledgard , Robert W. Taylor, Two views of data abstraction, Communications of the ACM, v.20 n.6, p.382-384, June 1977[doi>10.1145/359605.359613]
LE LANN, G. "Alg~;rithms for distributed data-sharing systems which use tickets," in Proc. 3rd Berkeley Workshop on Dis. trtbuted Data Management and Computer Networks, Berkeley, Calif., Aug. 1978, pp. 259-272. A virtual ring with ctrculating tickets is proposed as a solution to the problem of synchronizing access to shared data m a distributed system. Four distributed algorithms are described for acquinng tickets. The scheme is shown to survive failures of the ring controllers.
LEUNG, J. Y. T., AND LAI, E. K. "On minimum cost recovery from system deadlock," IEEE Trans. Comput. C-28, 9 (Sept 1979), 671-677. Under the assumptlon that the cost of aborting each member of a set of deadlocked jobs is known, the problem of selectmg a minimum total cost deadlock breaking set is shown to be NP-complete. Three fast heuristics are proposed, and their worst case performance is analyzed.
LIN, W. K. "Concurrency control in a multiple copy distributed database system," m Proc. 4th Berkeley Conf. Distributed Data Management and Computer Networks, Berkeley, Calif., Aug. 1979, pp. 207-220. Modifications to the concurrency control mechanism of SDD-1 are proposed which elnninate the need for timestamps on data items and weaken the constraints of some of the read-write protocols.
D. B. Lomet, Process structuring, synchronization, and recovery using atomic actions, Proceedings of an ACM conference on Language design for reliable software, p.128-137, March 28-30, 1977, Raleigh, North Carolina[doi>10.1145/800022.808319]
Raymond A. Lorie, Physical integrity in a large segmented database, ACM Transactions on Database Systems (TODS), v.2 n.1, p.91-104, March 1977[doi>10.1145/320521.320540]
Daniel A. Menasce , Gerald J. Popek , Richard R. Muntz, A locking protocol for resource coordination in distributed databases, Proceedings of the 1978 ACM SIGMOD international conference on management of data, May 31-June 02, 1978, Austin, Texas[doi>10.1145/509252.509256]
MENASCE, D. A., AND MUNTZ, R. R. "Locking and deadlock detection in distributed data bases," IEEE Trans. Softw. Eng. SE-5, 3 (May 1979), 195-201. Two protocols for deadlock detectmn based on the detection of cycles in the transactionwait-for graph are presented and analyzed. The first is based on a hierarchy of lock controllers and the second on a partitioning of the resources by decentralized local controllers.
Milan Milenkovic, Update synchronization in multiaccess database systems., 1979
Christos H. Papadimitriou, The serializability of concurrent database updates, Journal of the ACM (JACM), v.26 n.4, p.631-653, Oct. 1979[doi>10.1145/322154.322158]
PEEBLES, R., AND MANNING, E. "System architecture for distributed data management," Computer 11, 1 (Jan. 1978), 40-47. The architectures for dtstmbuteri data management systems are classifted as either (1) integrated or loosely coupled multlprocessors, (2) homogeneous federation, or (3) heterogeneous federation. Five fundamental problems that must be addressed by any data management system are then discussed: (1) how to provide an integrated database, (2) where to store data m the system, (3) how to locate data, (4) how to control concurrent access, and (5) how to provide security and integrity.
PEEBLES, R., AND DOPIRAK, T. "ADAPT: A guest system," in COMP. CON Spring "80 Proc., Feb. 1980. This paper describes the kernel of a chstributed operating system that runs on top of existing single host operating systems that are networked together. The purpose of the kernel is to transform the network of individual systems into a single unified system that will be easier for application programmers to use.
RANDELL, B. "System structure for software fault tolerance." IEEE Trans Softw. Eng. SE-1, 2 (June 1975), 220-232. A method of achieving software fault tolerance by means of standby sparing ~s proposed. The goal is to provide dependable error detection and recovery facihties by using a system structuring techmque called the recovery block, which is used to specify an acceptance test and alternate spare program components. Reliable systems are implemented by building multilevel interpretive virtual machines.
B. Randell , P. Lee , P. C. Treleaven, Reliability Issues in Computing System Design, ACM Computing Surveys (CSUR), v.10 n.2, p.123-165, June 1978[doi>10.1145/356725.356729]
Brian Randell, Reliable Computing Systems, Operating Systems, An Advanced Course, p.282-391, January 1978
D. P. Reed, NAMING AND SYNCHRONIZATION IN A DECENTRALIZED COMPUTER SYSTEM, Massachusetts Institute of Technology, Cambridge, MA, 1978
David P. Reed , Rajendra K. Kanodia, Synchronization with eventcounts and sequencers, Communications of the ACM, v.22 n.2, p.115-123, Feb. 1979[doi>10.1145/359060.359076]
David P. Reed, Implementing atomic actions on decentralized data (Extended Abstract), Proceedings of the seventh ACM symposium on Operating systems principles, p.163, December 10-12, 1979, Pacific Grove, California, United States[doi>10.1145/800215.806584]
Daniel R. Ries , Michael R. Stonebraker, Locking granularity revisited, ACM Transactions on Database Systems (TODS), v.4 n.2, p.210-227, June 1979[doi>10.1145/320071.320078]
Daniel J. Rosenkrantz , Richard E. Stearns , Philip M. Lewis, II, System level concurrency control for distributed database systems, ACM Transactions on Database Systems (TODS), v.3 n.2, p.178-198, June 1978[doi>10.1145/320251.320260]
J. B. Rothnie, Jr. , P. A. Bernstein , S. Fox , N. Goodman , M. Hammer , T. A. Landers , C. Reeve , D. W. Shipman , E. Wong, Introduction to a system for distributed databases (SDD-1), ACM Transactions on Database Systems (TODS), v.5 n.1, p.1-17, March 1980[doi>10.1145/320128.320129]
David L. Russell, Process backup in producer-consumer systems, Proceedings of the sixth ACM symposium on Operating systems principles, p.151-157, November 16-18, 1977, West Lafayette, Indiana, United States[doi>10.1145/800214.806558]
RYPKA, D. J., AND LUCIDO, A. P. "Deadlock detection and avoidance for shared logical resources," IEEE Trans. Softw. Eng. SE-5, 5 (Sept. 1979), 465-471. Modes are used to specify the manner m which processes may concurrently access logical resources. Mode compatibility is defined and used to specify deadlock detection and avoidance strategies.
Jerome H. Saltzer, Research problems of decentralized systems with largely autonomous nodes, ACM SIGOPS Operating Systems Review, v.12 n.1, p.43-52, January 1978[doi>10.1145/775323.775328]
SCHLAGETER, G. "The problem of lock by value in large data bases," Comput J. 19, 1 (Feb. 1976), 17-20. The concept of lock by value in multiple-access database systems is developed, and a lock system to support this approach is proposed. The problems of implementing lock by value are discussed.
Dennis G. Severance , Guy M. Lohman, Differential files: their application to the maintenance of large databases, ACM Transactions on Database Systems (TODS), v.1 n.3, p.256-267, Sept. 1976[doi>10.1145/320473.320484]
SHAPIRO, R. M., AND MILLSTEIN, R. E. "Failure recovery in a distributed data base system," in COMPCON Spring '78 Proc., Feb. 1978, pp. 66-70. A mechanism for maintaining the consistency of redundant copies of a database in the event of a crash of one or more of the sites is presented. Each site maintains a recent update history which is used to restore the crashed site.
SHRIVASTAVA, S. K., AND BANATRE, J.P. "Reliable resource allocation between unreliable processes," IEEE Trans. Soflw. Eng. SE-4, 3 (May 1978), 230-241. Error recovery problems associated with interacting processes are discussed, and an argument for using separate recovery mechanisms for cooperative and competitive processes is put forward. A recovery mechanism based on new programming language features (recoverable monitors and ports) is developed for processes which compete for the use of shared resources. Tins work extends the recovery block approach.
Abraham Silberschatz , Zvi Kedem, Consistency in Hierarchical Database Systems, Journal of the ACM (JACM), v.27 n.1, p.72-80, Jan. 1980[doi>10.1145/322169.322176]
John Miles Smith , Diane C. P. Smith, Database abstractions: aggregation, Communications of the ACM, v.20 n.6, p.405-413, June 1977[doi>10.1145/359605.359620]
John Miles Smith , Diane C. P. Smith, Database abstractions: aggregation and generalization, ACM Transactions on Database Systems (TODS), v.2 n.2, p.105-133, June 1977[doi>10.1145/320544.320546]
STONEBRAKER, M. "Concurrency control and consistency of multiple copies of data in distributed INGRES," IEEE Trans. Softw. Eng. SE-5, 3 (May 1979), 180-194. Dmtributed INGRES is a proposed dmtributed version of a relational database system designed and implemented by researchers at the University of California, Berkeley. This paper describes the design philosophy and presents rough outlines of the algorithms proposed for concurrency control, consistency of multiple copies of data, and system crash recovery. Concurrency control is based on the use of local locking and deadlock controllers which cooperate with a centralized controller (the SNOOP) for global deadlock detection.
Robert H. Thomas, A Majority consensus approach to concurrency control for multiple copy databases, ACM Transactions on Database Systems (TODS), v.4 n.2, p.180-209, June 1979[doi>10.1145/320071.320076]
Joost S. M. Verhofstad, Recovery Techniques for Database Systems, ACM Computing Surveys (CSUR), v.10 n.2, p.167-195, June 1978[doi>10.1145/356725.356730]
WATSON, R. W., AND FLETCHER, J. G. "An architecture for support of network operating system services," in Proc. 4th Berkeley Conf. on Distributed Data Management and Networks, Aug. 1979, pp. 18-50. It is argued that network architectures should be designed explicitly to support a coherent network operating system. The suggested model has three levels of protocol: an interprocess communication layer, a service support layer, and a layer of standard services.
WULF, W.A. "Reliable hardware/software architecture," IEEE Trans. Soflw. Eng. SE-1, 2 (June 1975), 233-240. A strategy used to achieve reliability in a hardware/software system m discussed. The proposed approach is based on an extension of modular programming methodology to include dynamic error detection and recovery. Each module is responsible for maintaining the integrity of the abstraction it implements.
